<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>ddcifile.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/dci/</path>
    <filename>ddcifile_8h.html</filename>
    <class kind="class">Dtk::Core::DDciFile</class>
  </compound>
  <compound kind="file">
    <name>dbasefilewatcher.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/filesystem/</path>
    <filename>dbasefilewatcher_8h.html</filename>
    <class kind="class">Dtk::Core::DBaseFileWatcher</class>
  </compound>
  <compound kind="file">
    <name>dcapfile.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/filesystem/</path>
    <filename>dcapfile_8h.html</filename>
    <class kind="class">Dtk::Core::DCapFile</class>
    <class kind="class">Dtk::Core::DCapDir</class>
  </compound>
  <compound kind="file">
    <name>ddesktopentry.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/global/</path>
    <filename>ddesktopentry_8h.html</filename>
    <class kind="class">Dtk::Core::DDesktopEntry</class>
  </compound>
  <compound kind="file">
    <name>dsysinfo.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/global/</path>
    <filename>dsysinfo_8h.html</filename>
    <class kind="class">Dtk::Core::DSysInfo</class>
  </compound>
  <compound kind="file">
    <name>AbstractAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>AbstractAppender_8h.html</filename>
    <includes id="Logger_8h" name="Logger.h" local="no" imported="no">Logger.h</includes>
    <class kind="class">Dtk::Core::AbstractAppender</class>
  </compound>
  <compound kind="file">
    <name>AbstractStringAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>AbstractStringAppender_8h.html</filename>
    <includes id="AbstractAppender_8h" name="AbstractAppender.h" local="yes" imported="no">AbstractAppender.h</includes>
    <class kind="class">Dtk::Core::AbstractStringAppender</class>
  </compound>
  <compound kind="file">
    <name>ConsoleAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>ConsoleAppender_8h.html</filename>
    <includes id="AbstractStringAppender_8h" name="AbstractStringAppender.h" local="no" imported="no">AbstractStringAppender.h</includes>
    <class kind="class">Dtk::Core::ConsoleAppender</class>
  </compound>
  <compound kind="file">
    <name>FileAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>FileAppender_8h.html</filename>
    <includes id="AbstractStringAppender_8h" name="AbstractStringAppender.h" local="no" imported="no">AbstractStringAppender.h</includes>
    <class kind="class">Dtk::Core::FileAppender</class>
  </compound>
  <compound kind="file">
    <name>Logger.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>Logger_8h.html</filename>
    <class kind="class">Dtk::Core::Logger</class>
    <class kind="class">Dtk::Core::CuteMessageLogger</class>
    <class kind="class">Dtk::Core::LoggerTimingHelper</class>
  </compound>
  <compound kind="file">
    <name>LogManager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>LogManager_8h.html</filename>
    <class kind="class">Dtk::Core::DLogManager</class>
  </compound>
  <compound kind="file">
    <name>RollingFileAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>RollingFileAppender_8h.html</filename>
    <includes id="FileAppender_8h" name="FileAppender.h" local="no" imported="no">FileAppender.h</includes>
    <class kind="class">Dtk::Core::RollingFileAppender</class>
  </compound>
  <compound kind="file">
    <name>dsettingsdconfigbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/backend/</path>
    <filename>dsettingsdconfigbackend_8h.html</filename>
    <class kind="class">Dtk::Core::DSettingsDConfigBackend</class>
  </compound>
  <compound kind="file">
    <name>gsettingsbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/backend/</path>
    <filename>gsettingsbackend_8h.html</filename>
    <class kind="class">Dtk::Core::GSettingsBackend</class>
  </compound>
  <compound kind="file">
    <name>qsettingbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/backend/</path>
    <filename>qsettingbackend_8h.html</filename>
    <class kind="class">Dtk::Core::QSettingBackend</class>
  </compound>
  <compound kind="file">
    <name>dsettings.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/</path>
    <filename>dsettings_8h.html</filename>
    <class kind="class">Dtk::Core::DSettings</class>
  </compound>
  <compound kind="file">
    <name>dsettingsgroup.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/</path>
    <filename>dsettingsgroup_8h.html</filename>
    <includes id="dsettingsoption_8h" name="dsettingsoption.h" local="yes" imported="no">dsettingsoption.h</includes>
    <class kind="class">Dtk::Core::DSettingsGroup</class>
  </compound>
  <compound kind="file">
    <name>dsettingsoption.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/</path>
    <filename>dsettingsoption_8h.html</filename>
    <class kind="class">Dtk::Core::DSettingsOption</class>
  </compound>
  <compound kind="file">
    <name>dabstractunitformatter.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>dabstractunitformatter_8h.html</filename>
    <class kind="class">Dtk::Core::DAbstractUnitFormatter</class>
  </compound>
  <compound kind="file">
    <name>ddbusextendedabstractinterface.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>ddbusextendedabstractinterface_8h.html</filename>
    <class kind="class">Dtk::Core::DDBusExtendedAbstractInterface</class>
  </compound>
  <compound kind="file">
    <name>ddbussender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>ddbussender_8h.html</filename>
    <class kind="class">DDBusData</class>
    <class kind="class">DDBusCaller</class>
    <class kind="class">DDBusProperty</class>
    <class kind="class">DDBusSender</class>
  </compound>
  <compound kind="file">
    <name>ddisksizeformatter.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>ddisksizeformatter_8h.html</filename>
    <includes id="dabstractunitformatter_8h" name="dabstractunitformatter.h" local="yes" imported="no">dabstractunitformatter.h</includes>
    <class kind="class">Dtk::Core::DDiskSizeFormatter</class>
  </compound>
  <compound kind="file">
    <name>dtextencoding.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>dtextencoding_8h.html</filename>
    <class kind="class">Dtk::Core::DTextEncoding</class>
  </compound>
  <compound kind="file">
    <name>dtimeunitformatter.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>dtimeunitformatter_8h.html</filename>
    <includes id="dabstractunitformatter_8h" name="dabstractunitformatter.h" local="yes" imported="no">dabstractunitformatter.h</includes>
    <class kind="class">Dtk::Core::DTimeUnitFormatter</class>
  </compound>
  <compound kind="file">
    <name>ddciicon.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/util/</path>
    <filename>ddciicon_8h.html</filename>
    <includes id="ddciiconpalette_8h" name="ddciiconpalette.h" local="yes" imported="no">ddciiconpalette.h</includes>
    <class kind="class">DDciIcon</class>
  </compound>
  <compound kind="file">
    <name>ddciiconpalette.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/util/</path>
    <filename>ddciiconpalette_8h.html</filename>
    <class kind="class">DDciIconPalette</class>
  </compound>
  <compound kind="file">
    <name>dimagehandler.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/util/</path>
    <filename>dimagehandler_8h.html</filename>
    <class kind="class">DImageHandler</class>
  </compound>
  <compound kind="file">
    <name>daboutdialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>daboutdialog_8h.html</filename>
    <class kind="class">DAboutDialog</class>
  </compound>
  <compound kind="file">
    <name>dabstractdialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dabstractdialog_8h.html</filename>
    <class kind="class">DAbstractDialog</class>
  </compound>
  <compound kind="file">
    <name>dalertcontrol.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dalertcontrol_8h.html</filename>
    <class kind="class">DAlertControl</class>
  </compound>
  <compound kind="file">
    <name>dapplicationhelper.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dapplicationhelper_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>darrowbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>darrowbutton_8h.html</filename>
    <class kind="class">ArrowButtonIcon</class>
    <class kind="class">DArrowButton</class>
  </compound>
  <compound kind="file">
    <name>darrowlinedrawer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>darrowlinedrawer_8h.html</filename>
    <class kind="class">DArrowLineDrawer</class>
  </compound>
  <compound kind="file">
    <name>darrowlineexpand.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>darrowlineexpand_8h.html</filename>
    <class kind="class">ArrowHeaderLine</class>
  </compound>
  <compound kind="file">
    <name>dbuttonbox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dbuttonbox_8h.html</filename>
    <class kind="class">DButtonBoxButton</class>
    <class kind="class">DButtonBox</class>
  </compound>
  <compound kind="file">
    <name>dcoloredprogressbar.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcoloredprogressbar_8h.html</filename>
    <class kind="class">DColoredProgressBar</class>
  </compound>
  <compound kind="file">
    <name>dcombobox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcombobox_8h.html</filename>
    <class kind="class">DComboBox</class>
  </compound>
  <compound kind="file">
    <name>dcommandlinkbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcommandlinkbutton_8h.html</filename>
    <class kind="class">DCommandLinkButton</class>
  </compound>
  <compound kind="file">
    <name>dcrumbedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcrumbedit_8h.html</filename>
    <class kind="class">DCrumbTextFormat</class>
    <class kind="class">DCrumbEdit</class>
  </compound>
  <compound kind="file">
    <name>ddrawer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>ddrawer_8h.html</filename>
    <class kind="class">DDrawer</class>
  </compound>
  <compound kind="file">
    <name>dfilechooseredit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfilechooseredit_8h.html</filename>
    <class kind="class">DFileChooserEdit</class>
  </compound>
  <compound kind="file">
    <name>dfiledialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfiledialog_8h.html</filename>
    <class kind="class">DFileDialog</class>
    <class kind="struct">DFileDialog::DComboBoxOptions</class>
    <class kind="struct">DFileDialog::DLineEditOptions</class>
  </compound>
  <compound kind="file">
    <name>dfloatingbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfloatingbutton_8h.html</filename>
    <class kind="class">DFloatingButton</class>
  </compound>
  <compound kind="file">
    <name>dfontcombobox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfontcombobox_8h.html</filename>
    <class kind="class">DFontComboBox</class>
  </compound>
  <compound kind="file">
    <name>dframe.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dframe_8h.html</filename>
    <class kind="class">DFrame</class>
    <class kind="class">DHorizontalLine</class>
    <class kind="class">DVerticalLine</class>
  </compound>
  <compound kind="file">
    <name>diconbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>diconbutton_8h.html</filename>
    <class kind="class">DIconButton</class>
  </compound>
  <compound kind="file">
    <name>dimageviewer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dimageviewer_8h.html</filename>
    <class kind="class">DImageViewer</class>
  </compound>
  <compound kind="file">
    <name>dipv4lineedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dipv4lineedit_8h.html</filename>
    <class kind="class">DIpv4LineEdit</class>
  </compound>
  <compound kind="file">
    <name>dkeysequenceedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dkeysequenceedit_8h.html</filename>
    <class kind="class">DKeySequenceEdit</class>
  </compound>
  <compound kind="file">
    <name>dlabel.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dlabel_8h.html</filename>
    <includes id="dstyle_8h" name="dstyle.h" local="no" imported="no">dstyle.h</includes>
    <class kind="class">DLabel</class>
  </compound>
  <compound kind="file">
    <name>dlineedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dlineedit_8h.html</filename>
    <class kind="class">DLineEdit</class>
  </compound>
  <compound kind="file">
    <name>dmainwindow.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dmainwindow_8h.html</filename>
    <class kind="class">DMainWindow</class>
  </compound>
  <compound kind="file">
    <name>dmessagemanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dmessagemanager_8h.html</filename>
    <class kind="class">DMessageManager</class>
  </compound>
  <compound kind="file">
    <name>dpasswordedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dpasswordedit_8h.html</filename>
    <class kind="class">DPasswordEdit</class>
  </compound>
  <compound kind="file">
    <name>dprogressbar.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dprogressbar_8h.html</filename>
    <class kind="class">DProgressBar</class>
  </compound>
  <compound kind="file">
    <name>dsearchcombobox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dsearchcombobox_8h.html</filename>
    <class kind="class">DSearchComboBox</class>
  </compound>
  <compound kind="file">
    <name>dsearchedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dsearchedit_8h.html</filename>
    <class kind="class">DSearchEdit</class>
  </compound>
  <compound kind="file">
    <name>dslider.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dslider_8h.html</filename>
    <class kind="class">DSlider</class>
    <class kind="class">SpecialSlider</class>
  </compound>
  <compound kind="file">
    <name>dspinbox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dspinbox_8h.html</filename>
    <class kind="class">DSpinBox</class>
    <class kind="class">DDoubleSpinBox</class>
  </compound>
  <compound kind="file">
    <name>dspinner.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dspinner_8h.html</filename>
    <class kind="class">DSpinner</class>
  </compound>
  <compound kind="file">
    <name>dstyle.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dstyle_8h.html</filename>
    <class kind="class">DStyle</class>
    <class kind="class">DStyleHelper</class>
    <class kind="class">DStylePainter</class>
    <class kind="class">DStyledIconEngine</class>
  </compound>
  <compound kind="file">
    <name>dsuggestbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dsuggestbutton_8h.html</filename>
    <class kind="class">DSuggestButton</class>
  </compound>
  <compound kind="file">
    <name>dswitchbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dswitchbutton_8h.html</filename>
    <class kind="class">DSwitchButton</class>
  </compound>
  <compound kind="file">
    <name>dtabbar.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtabbar_8h.html</filename>
    <class kind="class">DTabBar</class>
  </compound>
  <compound kind="file">
    <name>dtextedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtextedit_8h.html</filename>
    <class kind="class">DTextEdit</class>
  </compound>
  <compound kind="file">
    <name>dtoolbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtoolbutton_8h.html</filename>
    <class kind="class">DToolButton</class>
  </compound>
  <compound kind="file">
    <name>dtooltip.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtooltip_8h.html</filename>
    <class kind="class">DToolTip</class>
  </compound>
  <compound kind="file">
    <name>dwarningbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dwarningbutton_8h.html</filename>
    <class kind="class">DWarningButton</class>
  </compound>
  <compound kind="file">
    <name>dwaterprogress.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dwaterprogress_8h.html</filename>
    <class kind="class">DWaterProgress</class>
  </compound>
  <compound kind="class">
    <name>_DApplicationHelper</name>
    <filename>class__DApplicationHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>_DtkBuildVersion</name>
    <filename>class__DtkBuildVersion.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dexpected</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dexpected.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dexpected&lt; DExpected&lt; T, E &gt; &gt;</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dexpected_3_01DExpected_3_01T_00_01E_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dunexpected</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dunexpected.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dunexpected&lt; DUnexpected&lt; T &gt; &gt;</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dunexpected_3_01DUnexpected_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DThreadUtil::_TMP</name>
    <filename>classDtk_1_1Core_1_1DThreadUtil_1_1__TMP.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DThreadUtil::_TMP&lt; void &gt;</name>
    <filename>classDtk_1_1Core_1_1DThreadUtil_1_1__TMP_3_01void_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>TestClass::A</name>
    <filename>classTestClass_1_1A.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::AbstractAppender</name>
    <filename>classDtk_1_1Core_1_1AbstractAppender.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractAppender</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>a7cdf727afbb71edf724b17d06cabd50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractAppender</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>a636dfff566cc35c5fcbef9fa8ace5bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Logger::LogLevel</type>
      <name>detailsLevel</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>aa63fd678baadf4cd33df6e91a478947e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetailsLevel</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>a7d2e074a60e849bfa4235a52295debcb</anchor>
      <arglist>(Logger::LogLevel level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetailsLevel</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>ac7f3ad66a9807638a79df8dba6b463f0</anchor>
      <arglist>(const QString &amp;level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>ae909f6a930396d01a426a3f294e2bdc7</anchor>
      <arglist>(const QDateTime &amp;time, Logger::LogLevel level, const char *file, int line, const char *func, const QString &amp;category, const QString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::AbstractStringAppender</name>
    <filename>classDtk_1_1Core_1_1AbstractStringAppender.html</filename>
    <base>Dtk::Core::AbstractAppender</base>
    <member kind="function">
      <type></type>
      <name>AbstractStringAppender</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>a0c9c0e424354c415af7be50d4591779c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>format</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>aa173a47c3b89a7022ff83628d1ebe770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>a961dd9232ddba5018a6777896e2a163d</anchor>
      <arglist>(const QString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>stripFunctionName</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>a5288839793a0a948f8a0e61c3eae6e90</anchor>
      <arglist>(const char *name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActionList</name>
    <filename>classActionList.html</filename>
  </compound>
  <compound kind="struct">
    <name>ActionListData</name>
    <filename>structActionListData.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>ArrowButtonIcon</name>
    <filename>classArrowButtonIcon.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::ArrowButtonIcon</name>
    <filename>classDtk_1_1Widget_1_1ArrowButtonIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>ArrowHeaderLine</name>
    <filename>classArrowHeaderLine.html</filename>
    <base>DHeaderLine</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::ArrowHeaderLine</name>
    <filename>classDtk_1_1Widget_1_1ArrowHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>HeaderLine::ArrowHeaderLine</name>
    <filename>classHeaderLine_1_1ArrowHeaderLine.html</filename>
    <base>Dtk::Widget::DHeaderLine</base>
  </compound>
  <compound kind="class">
    <name>TestClass::B</name>
    <filename>classTestClass_1_1B.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::bad_result_access</name>
    <filename>classDtk_1_1Core_1_1bad__result__access.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::bad_result_access&lt; void &gt;</name>
    <filename>classDtk_1_1Core_1_1bad__result__access_3_01void_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>ButtonExampleWindow</name>
    <filename>classButtonExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>ButtonGroup</name>
    <filename>classButtonGroup.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>ButtonGroupPrivate</name>
    <filename>classButtonGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DIconTheme::Cached</name>
    <filename>classDIconTheme_1_1Cached.html</filename>
  </compound>
  <compound kind="class">
    <name>DIconTheme::CachedData</name>
    <filename>classDIconTheme_1_1CachedData.html</filename>
  </compound>
  <compound kind="class">
    <name>CalendarModel</name>
    <filename>classCalendarModel.html</filename>
    <base>QAbstractTableModel</base>
  </compound>
  <compound kind="class">
    <name>ChangeDDialog</name>
    <filename>classChangeDDialog.html</filename>
    <base>DDialog</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::CheckCompatibleArguments</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1CheckCompatibleArguments.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::CheckCompatibleArguments&lt; List, List &gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1CheckCompatibleArguments_3_01List_00_01List_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>ColorButton</name>
    <filename>classColorButton.html</filename>
    <base>QPushButton</base>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classColorButton.html</anchorfile>
      <anchor>a5133e58d694260f42b39c8d3c454f5cb</anchor>
      <arglist>(QColor color, QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ColorLabel</name>
    <filename>classColorLabel.html</filename>
    <base>DLabel</base>
    <member kind="function">
      <type></type>
      <name>ColorLabel</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a0a76e57427c1a9640a907633f7412f8b</anchor>
      <arglist>(DWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>getColor</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a9d8b57b422aa221b8e0b8e732ae1143d</anchor>
      <arglist>(qreal h, qreal s, qreal v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHue</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>ad75e4a367312dbb8aaff0ae523de5436</anchor>
      <arglist>(int hue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pickColor</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>ac1c6a7feb8fd27b9a5ee14b2660e8fdc</anchor>
      <arglist>(QPoint pos)</arglist>
    </member>
    <member kind="function">
      <type>QCursor</type>
      <name>pickColorCursor</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a8507320bf0466513f3158437e38fa27d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a102259d5a34e6036b2aadbc4646ff889</anchor>
      <arglist>(QPaintEvent *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ColorSlider</name>
    <filename>classColorSlider.html</filename>
    <base>QSlider</base>
    <member kind="function">
      <type></type>
      <name>ColorSlider</name>
      <anchorfile>classColorSlider.html</anchorfile>
      <anchor>a80aa83a09c511bd74de814727ee6b31c</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>getColor</name>
      <anchorfile>classColorSlider.html</anchorfile>
      <anchor>a0f53811bd67235bafd23c9a9a0119afa</anchor>
      <arglist>(qreal h, qreal s, qreal v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ComboBox</name>
    <filename>classComboBox.html</filename>
    <base>QComboBox</base>
  </compound>
  <compound kind="class">
    <name>ComDeepinApiXEventMonitorInterface</name>
    <filename>classComDeepinApiXEventMonitorInterface.html</filename>
  </compound>
  <compound kind="struct">
    <name>Configure</name>
    <filename>structConfigure.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::ConsoleAppender</name>
    <filename>classDtk_1_1Core_1_1ConsoleAppender.html</filename>
    <base>Dtk::Core::AbstractStringAppender</base>
    <member kind="function">
      <type></type>
      <name>ConsoleAppender</name>
      <anchorfile>classDtk_1_1Core_1_1ConsoleAppender.html</anchorfile>
      <anchor>a044fa93658dbe1fbba76328efef6f066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>format</name>
      <anchorfile>classDtk_1_1Core_1_1ConsoleAppender.html</anchorfile>
      <anchor>ab63b018904413cbfd056ff4e08f2d5cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignoreEnvironmentPattern</name>
      <anchorfile>classDtk_1_1Core_1_1ConsoleAppender.html</anchorfile>
      <anchor>ab8debafc2516e8c92108a1f5054cfbd9</anchor>
      <arglist>(bool ignore)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Content</name>
    <filename>classContent.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ContentBox</name>
    <filename>classContentBox.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ContentItem</name>
    <filename>classContentItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="class">
    <name>ContentLoader</name>
    <filename>classContentLoader.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>ContentPrivate</name>
    <filename>classContentPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>ContentTitle</name>
    <filename>classContentTitle.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ContentTitlePrivate</name>
    <filename>classContentTitlePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>CreatorWindowEventFile</name>
    <filename>classCreatorWindowEventFile.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>CrumbObjectInterface</name>
    <filename>classCrumbObjectInterface.html</filename>
    <base>QObject</base>
    <base>QTextObjectInterface</base>
  </compound>
  <compound kind="class">
    <name>CustomInterface</name>
    <filename>classCustomInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::CuteMessageLogger</name>
    <filename>classDtk_1_1Core_1_1CuteMessageLogger.html</filename>
  </compound>
  <compound kind="class">
    <name>DAboutDialog</name>
    <filename>classDAboutDialog.html</filename>
    <base>DDialog</base>
    <member kind="slot">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a13a86cb9afe89a7b093f8dacad80abe6</anchor>
      <arglist>(const QString &amp;windowTitle)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setProductIcon</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a0d9f764a08574aa9fdf50bf1f5b9382e</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setProductName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a824d184f74b22a262fc78715e0aa0cce</anchor>
      <arglist>(const QString &amp;productName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a3175e4041406b06004ce01e4fe10a640</anchor>
      <arglist>(const QString &amp;version)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a3fe1cf2643d45ad9b925c88b789c9ef4</anchor>
      <arglist>(const QString &amp;description)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCompanyLogo</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a71e30b22a93e7525831071177f85295c</anchor>
      <arglist>(const QPixmap &amp;companyLogo)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWebsiteName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>add885de3ee625cfa126cd53fcb69da9c</anchor>
      <arglist>(const QString &amp;websiteName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWebsiteLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a10ac187717a01e779b72744db75622fc</anchor>
      <arglist>(const QString &amp;websiteLink)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAcknowledgementLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a8649f50a2af659f0842e517e6184e976</anchor>
      <arglist>(const QString &amp;acknowledgementLink)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setLicense</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a4a9c499c423ef185d1c4ed6901448955</anchor>
      <arglist>(const QString &amp;license)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>windowTitle</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>aaa95dc3741be0d3731f719ea4f8f7799</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a297ce67d72faab88f2847e009fa2657d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>version</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>ace82f1025132f83a556ba46c0754cf78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>ae790256d3069468b429c079eeee7e630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QPixmap *</type>
      <name>companyLogo</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>af8bec9f2af7a961b472c3b07aa06183d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>websiteName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a54425f9009ebbde187bd353bc1c0f67e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>websiteLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a286d487dc7b28989e2c6a4a53426d9b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>acknowledgementLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a0dcf32ef152fec984f850bc2abb09aa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>license</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a0e82850223a403a1ac08c464df20a83e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>windowTitle</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a188c407fb60b51ea489d49035ebece0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>aa80996c33bf9e5c4c46b8fd12be7f53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>version</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a39d193ac1933a74eff47b50e85661918</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>ae90d76709d480080bf046ab9bf711d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>license</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a18bae9a10f51e849839f08200c430ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>websiteName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a7fb9d4e3de7d0960646b574ecf8313e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>websiteLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a844172acca8651f3162bc549fee3e5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>acknowledgementLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a78e1ba88b53135ba801ee1c48e7df5df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAboutDialog</name>
    <filename>classDtk_1_1Widget_1_1DAboutDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DAboutDialogPrivate</name>
    <filename>classDAboutDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>DAbstractDialog</name>
    <filename>classDAbstractDialog.html</filename>
    <base>QDialog</base>
    <member kind="slot">
      <type>void</type>
      <name>moveToCenter</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>aff3573c58f1761086c9baf1f93489d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveToTopRight</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a453ccc1cff05192a59c9386c99e668bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveToCenterByRect</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a94c810ea9af09c84a0098aef6a7f5082</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveToTopRightByRect</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ad564247f172d91745ff1791e309f0fc2</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDisplayPosition</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ae99e66e0f9217abd7251227f24363119</anchor>
      <arglist>(DisplayPosition displayPosition)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeChanged</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a5562f9908619a183265ee3ce22ae4fcc</anchor>
      <arglist>(QSize size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAbstractDialog</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a3b7d7fe7c749d9e4c25f3c1519036368</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAbstractDialog</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>aa5cf9508f3c6a5d3ea1870ed10a25380</anchor>
      <arglist>(bool blurIfPossible, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a452c9920e4e0542acaaef808c774429b</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ab0c623aea93b44f2a90a75abfb5213e3</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometry</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a854c68301ed4eb3c85219a0c41a08055</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>acdbdd2d3b6fd58526d840455646fa79e</anchor>
      <arglist>(QMouseEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mousePressEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ae6b09526a7fa2d6047fdb14c5793deb3</anchor>
      <arglist>(QMouseEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a54fe9f009ae062e5fdda6eaaa7ba3f02</anchor>
      <arglist>(QMouseEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ae571ec8f62cbfb9484eee57d524f5979</anchor>
      <arglist>(QResizeEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>adc6badb93ebc965452ac391c546b6c72</anchor>
      <arglist>(QShowEvent *event) override</arglist>
    </member>
    <member kind="property">
      <type>DisplayPosition</type>
      <name>displayPosition</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a0be5ba4eb664919bcf245e368a1c1bcc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAbstractDialog</name>
    <filename>classDtk_1_1Widget_1_1DAbstractDialog.html</filename>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html">模态与非模态相关介绍</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="模态对话框">modal</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="非模态对话框">modeless</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="默认按钮">default</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="退出(Escape)键">escapekey</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="返回值 (模态对话框)">return</docanchor>
  </compound>
  <compound kind="class">
    <name>DAbstractDialogPrivate</name>
    <filename>classDAbstractDialogPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DAbstractStackWidgetTransition</name>
    <filename>classDAbstractStackWidgetTransition.html</filename>
    <base>QObject</base>
    <class kind="struct">DAbstractStackWidgetTransition::TransitionInfo</class>
  </compound>
  <compound kind="class">
    <name>DAbstractStackWidgetTransitionPrivate</name>
    <filename>classDAbstractStackWidgetTransitionPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DAbstractUnitFormatter</name>
    <filename>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</filename>
    <member kind="function">
      <type></type>
      <name>DAbstractUnitFormatter</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>abb21caeeb1e6e410f945a47f5f6315dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>formatAs</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a7da1d4cf5e7e905d1f810d75ca1254ac</anchor>
      <arglist>(qreal value, int currentUnit, const int targetUnit) const</arglist>
    </member>
    <member kind="function">
      <type>QPair&lt; qreal, int &gt;</type>
      <name>format</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>af25cf2c0224835e320331c3161fd0c09</anchor>
      <arglist>(const qreal value, const int unit) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPair&lt; qreal, int &gt; &gt;</type>
      <name>formatAsUnitList</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a2b4dba2c1d382dd52c7feb5a285a8479</anchor>
      <arglist>(const qreal value, int unit) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>unitMax</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>aecde063856680d9f68903e432131d938</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>unitMin</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a03d58fe4e04bcf51aad2c1f7e16767ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual uint</type>
      <name>unitConvertRate</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a7ea807d504f17926cf92c1330d1e636c</anchor>
      <arglist>(int unitId) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual qreal</type>
      <name>unitValueMax</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>ad84d984c7b456107675ded94421341fc</anchor>
      <arglist>(int unitId) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual qreal</type>
      <name>unitValueMin</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a158e56e5a7f9083448158355fe1d0d65</anchor>
      <arglist>(int unitId) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual QString</type>
      <name>unitStr</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a4d679f3197542b272b8cd6245ae37879</anchor>
      <arglist>(int unitId) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DAccessibilityChecker</name>
    <filename>classDAccessibilityChecker.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>OutputFormat</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>acc9503c4cb2cc56cb745c550f04e5448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Role</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>a9dd2fdda5e3c713366797f7dd142544a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAccessibilityChecker</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>a2ad74c9ff6b86c58c671ee8abe29e403</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>aafec037647fe69fc8e08c40d7bf1697f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>ac3739f780ee44899c0ab088bd2fc94dc</anchor>
      <arglist>(int msec=3000)</arglist>
    </member>
    <member kind="property">
      <type>OutputFormat</type>
      <name>outputFormat</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>a93bcc52f85ef89f1acb603b38e973d2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAccessibilityChecker</name>
    <filename>classDtk_1_1Widget_1_1DAccessibilityChecker.html</filename>
  </compound>
  <compound kind="class">
    <name>DAccessibilityCheckerPrivate</name>
    <filename>classDAccessibilityCheckerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DAlertControl</name>
    <filename>classDAlertControl.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>alertChanged</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a10931a466c551a087ef58de913331e57</anchor>
      <arglist>(bool alert) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAlertControl</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>ab8e2727cdc16b8fb23f1fc140a88061d</anchor>
      <arglist>(QWidget *target, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DAlertControl</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a431ad82fea99a2d61547d899d50b49e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlert</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>adb18ab797c9e68a75791d81b40b2a687</anchor>
      <arglist>(bool isAlert)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAlert</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a1a96daefaecc254f0562029e0d205ff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlertColor</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>ab61198e1c54096c598e04838f272e017</anchor>
      <arglist>(QColor c)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>defaultAlertColor</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a609b9c3c74538dbc7546a19e510dc99c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessageAlignment</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a4056ab4ce09cd559ef786f181e0c6d5e</anchor>
      <arglist>(Qt::Alignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>messageAlignment</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>acc331498277a70b748c1082470ca2922</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a5a3c61ea547d546f7fe6569c0dadbdcd</anchor>
      <arglist>(const QString &amp;text, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a51b5df21cc705dd5b1323571570139b9</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAlertMessage</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a29c3dcfb5df1c80be9066a76f775ad36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>alert</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a2f98f7a246a92ff9487d3e780fcff8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>alertColor</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a16c980bb29d0516561b0e48f251acf70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAlertControl</name>
    <filename>classDtk_1_1Widget_1_1DAlertControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DAlertControlPrivate</name>
    <filename>classDAlertControlPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>DAnchorInfo</name>
    <filename>structDAnchorInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAnchorInfo</name>
    <filename>classDtk_1_1Widget_1_1DAnchorInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DAnchors</name>
    <filename>classDAnchors.html</filename>
    <templarg></templarg>
    <base>DAnchorsBase</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAnchors</name>
    <filename>classDtk_1_1Widget_1_1DAnchors.html</filename>
  </compound>
  <compound kind="class">
    <name>DAnchorsBase</name>
    <filename>classDAnchorsBase.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>bool</type>
      <name>setAnchor</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aa7ad63c8ff4ccb2a4469d1db0796e9dd</anchor>
      <arglist>(const Qt::AnchorPoint &amp;p, QWidget *target, const Qt::AnchorPoint &amp;point)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>setFill</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a34f5257dbae3a967e30764a4be6c89c4</anchor>
      <arglist>(DAnchorsBase *fill)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>setCenterIn</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ab482f0c0072be8a22d3b47a153024f08</anchor>
      <arglist>(DAnchorsBase *centerIn)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveTop</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>acafba8ba2307cbd37a01e2ba61d97414</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveBottom</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ade9999ddef5d6f1eebd64536813051ad</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveLeft</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ad2b159c41ec3a83ab9ccc27b0e4f4f16</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveRight</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a52c520e012f2a18ea4ea818556cdc372</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveHorizontalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>abe8bb3b17f3ed241443a4bb30c04d9a0</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveVerticalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>afa4ae423ced45e154f24851defd7e4fa</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ad13d5db3a3d97b8d2274458ce2e8c30c</anchor>
      <arglist>(const QPoint &amp;arg)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enabledChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a580423d9fbf2a0073edd190409d7f3a3</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>topChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a9441c3e5b73ffea005625752446ee9a1</anchor>
      <arglist>(const DAnchorInfo *top)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bottomChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a4f8bd08218d361f02b73650d03688646</anchor>
      <arglist>(const DAnchorInfo *bottom)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>leftChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a0383f09d7ff793280d7e40b1d12456ab</anchor>
      <arglist>(const DAnchorInfo *left)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rightChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aedbcb19d5ac5c6a555cf5129a624e826</anchor>
      <arglist>(const DAnchorInfo *right)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>horizontalCenterChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a84b6892502bbc1f8838f06df748c4daa</anchor>
      <arglist>(const DAnchorInfo *horizontalCenter)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>verticalCenterChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a6f0f93e58273cf619d2f61416808a971</anchor>
      <arglist>(const DAnchorInfo *verticalCenter)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fillChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a314be8ba3ce8dbbfeb8b96bbe7377c2a</anchor>
      <arglist>(QWidget *fill)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>centerInChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a835031f3c5c48cfd36cb834b710139c6</anchor>
      <arglist>(QWidget *centerIn)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>marginsChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aed52c71cc1425a2c32a701568968aba7</anchor>
      <arglist>(int margins)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>topMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aefb57f54b327adedc7b1d55717aebb2b</anchor>
      <arglist>(int topMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bottomMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a189869aed734dbf6d0c037e96030986a</anchor>
      <arglist>(int bottomMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>leftMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a10bdd8e627a7bd9721a556d9ccdbb568</anchor>
      <arglist>(int leftMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rightMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a64d30aa142892368e71437cea18016ea</anchor>
      <arglist>(int rightMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>horizontalCenterOffsetChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ac1a3584bf908941910a014201e7d3a4b</anchor>
      <arglist>(int horizontalCenterOffset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>verticalCenterOffsetChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ab761897700a60941fb229121794f2fbb</anchor>
      <arglist>(int verticalCenterOffset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAnchorsBase</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a9470bf1a76d70fbb087537281d59d219</anchor>
      <arglist>(QWidget *w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DAnchorsBase</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a7a9431c4fcbb57ce2b3d931fbf445060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DEnhancedWidget *</type>
      <name>enhancedWidget</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a35b77de9d7aa369a85543ad8e828d1f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AnchorError</type>
      <name>errorCode</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a33dec521134882d65d38af4fd481d8ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a2061dbf36f9a8e545ba80af6cdf74cc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBinding</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aca960f4d639cf1afe41772e06b7def03</anchor>
      <arglist>(const DAnchorInfo *info) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setAnchor</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a34f1ff02eb1b8cda41971e6d86dead47</anchor>
      <arglist>(QWidget *w, const Qt::AnchorPoint &amp;p, QWidget *target, const Qt::AnchorPoint &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearAnchors</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a07caa92d2fbc8811131ee4d09a6da302</anchor>
      <arglist>(const QWidget *w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DAnchorsBase *</type>
      <name>getAnchorBaseByWidget</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ae92c1775f4be8d3447c3b54b0d705dbb</anchor>
      <arglist>(const QWidget *w)</arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>target</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a45220a39f990088e234fecbe1365618f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a826e09da24e328f0210ad8efa067946f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorsBase *</type>
      <name>anchors</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a8ac5365f1b6fe36a37c93e609c95b4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>top</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aacbe1524bf770e24d1e28b4d68463f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>bottom</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a96aab06a235a501bb0916594c4ce7415</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>left</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a56481b506ac3e8e6abea37ff300455e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>right</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a70a1e3acbc693739098c681f143621c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>horizontalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a312b8194aa10f880a1b4d96557234405</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>verticalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a44a33a87a7e13c559dce6fae6ca5c92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>fill</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aee6b0024b467c0f82baf43345981972f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>centerIn</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ad41e7fff4550e1db1fdd79bebdc3ac2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>margins</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a799e0ba24f1525070d39282ad7b4f421</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>topMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>acc36da853d40582a78bda969063c5eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>bottomMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a928fe84da6e604a3c51e5272f54379c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>leftMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>afb0e0a71973dec73ae07d36e80296614</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>rightMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aaff8732012dd21a70dc767b174d727cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>horizontalCenterOffset</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aa9e852bbe6c864772dad969ee1bec1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>verticalCenterOffset</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ae12e57aa1784328e422f266162231065</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAnchorsBase</name>
    <filename>classDtk_1_1Widget_1_1DAnchorsBase.html</filename>
  </compound>
  <compound kind="class">
    <name>DAnchorsBasePrivate</name>
    <filename>classDAnchorsBasePrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DAnchorsRect</name>
    <filename>classDAnchorsRect.html</filename>
    <base>QRect</base>
  </compound>
  <compound kind="class">
    <name>DAppHandler</name>
    <filename>classDAppHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplication</name>
    <filename>classDApplication.html</filename>
    <base>QApplication</base>
    <member kind="signal">
      <type>void</type>
      <name>newInstanceStarted</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a38b7fcfb3df292d96a5c927ae20d03e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconThemeChanged</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aa04243a273bd99fe3ce7e12f3124c648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>screenDevicePixelRatioChanged</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>af89fd945103e479ac554571ede8f6807</anchor>
      <arglist>(QScreen *screen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DApplication</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a73028a170a4a6a7fa3df21b5d75214d6</anchor>
      <arglist>(int &amp;argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED QString</type>
      <name>theme</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a70e06597e1c69246e31bcac42ddd5a00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED void</type>
      <name>setTheme</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>afa85ceb071691c244f3be2f42c3c62e9</anchor>
      <arglist>(const QString &amp;theme)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSingleInstance</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>af62b01f4556177881b25ccfe2049bddd</anchor>
      <arglist>(const QString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSingleInstance</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a8a2bdc3f1428ba1b62f8bf8a8744ef7f</anchor>
      <arglist>(const QString &amp;key, SingleScope singleScope)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadTranslator</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a40f12cb2734cd767311354f0d61f63f8</anchor>
      <arglist>(QList&lt; QLocale &gt; localeFallback=QList&lt; QLocale &gt;()&lt;&lt; QLocale::system())</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a62e530cabd9fb6683c93da1ab3c38252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductName</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a41c882a5a02da7821ba62c2e84fe9aa9</anchor>
      <arglist>(const QString &amp;productName)</arglist>
    </member>
    <member kind="function">
      <type>const QIcon &amp;</type>
      <name>productIcon</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a9ec689594630ab6119dde4eee650dcc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductIcon</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>abd0323ad307928229bbd0139f8f99518</anchor>
      <arglist>(const QIcon &amp;productIcon)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationLicense</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a9097286ddc1b6a578d9085dd5acaae19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationLicense</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a3cf9e0ae96f0df1026896c43cbedbbd5</anchor>
      <arglist>(const QString &amp;license)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationDescription</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ae7783e06276a52038de9f243c686fa54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationDescription</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>add5ac906ce3f4ed28d3e019c7507de06</anchor>
      <arglist>(const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationHomePage</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ace80c14cfca6c4c91351cbc8823cd970</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationAcknowledgementPage</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ae90033079d15c6a3b51741d0bd45edbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationAcknowledgementPage</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>adcfc5b5a45ad93b119124757b3d39180</anchor>
      <arglist>(const QString &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applicationAcknowledgementVisible</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ab0f0406868f4ab7c4f5ab1e1e0674d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationAcknowledgementVisible</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a618edb0773504ff4b0198a4a4d4de6a6</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>DAboutDialog *</type>
      <name>aboutDialog</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aaea7455504c6aa5b65b77ecf78096872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAboutDialog</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a754d95fd863bbdf4a4a35dceffe22458</anchor>
      <arglist>(DAboutDialog *aboutDialog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acclimatizeVirtualKeyboard</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aaea7cd34c18033a5231ec47cb53c6e03</anchor>
      <arglist>(QWidget *window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignoreVirtualKeyboard</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aca3455f1163aa9cc674dfe76cb734887</anchor>
      <arglist>(QWidget *window)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAcclimatizedVirtualKeyboard</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a22635d115c609cef195c83c77ce6db8b</anchor>
      <arglist>(QWidget *window) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomHandler</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a5f6ba1d148fd82f2a2eea962ca96b030</anchor>
      <arglist>(DAppHandler *handler)</arglist>
    </member>
    <member kind="function">
      <type>DAppHandler *</type>
      <name>customHandler</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a44fc3e9f9bcc317aefeb03bfa48cd51b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DApplication *</type>
      <name>globalApplication</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>abe322de4c7db559feb907af9ba05a93c</anchor>
      <arglist>(int &amp;argc, char **argv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED bool</type>
      <name>loadDXcbPlugin</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a6d7632dd40ccfadf421c405d9632d52b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDXcbPlatform</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a2c4e9f8aeb5225354370cb223504c6ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>buildDtkVersion</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a4cbf7738ecad11bb789c3205c61fba7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>runtimeDtkVersion</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aa2479fd46b37eecfecbd24f49a4dbd3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerDDESession</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ac74e147250ed6298bbd0b3bd2ef0f5b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>customQtThemeConfigPathByUserHome</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a1b32ce2e08dc3e498fae3a20eac26c12</anchor>
      <arglist>(const QString &amp;home)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>customQtThemeConfigPath</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a21c6c54db70b9818a9e1b1a4467ee02c</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>customizedQtThemeConfigPath</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a743686e65409f08066a3de8ad35cb136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleHelpAction</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aaa6c2336fb6a8390401138ec78ec3213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleAboutAction</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a63f27be2428e713385764a46ccf36dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleQuitAction</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a2b0c87ca4b25c7b5c6b7ac7dde7a5c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visibleMenuShortcutText</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a4ce0fec3e460602f631de35803972cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visibleMenuCheckboxWidget</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a8740c958a21ed47cd25bc116c249f7c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visibleMenuIcon</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a33de68dab5d8008468dd8e4dfb93da59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DApplication</name>
    <filename>classDtk_1_1Widget_1_1DApplication.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DApplicationHelper</name>
    <filename>classDtk_1_1Widget_1_1DApplicationHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplicationHelperPrivate</name>
    <filename>classDApplicationHelperPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplicationPrivate</name>
    <filename>classDApplicationPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DApplicationSettings</name>
    <filename>classDApplicationSettings.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DApplicationSettings</name>
      <anchorfile>classDApplicationSettings.html</anchorfile>
      <anchor>afb6e3ec616fa192ba08d854bfcc8eb71</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DApplicationSettings</name>
    <filename>classDtk_1_1Widget_1_1DApplicationSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplicationSettingsPrivate</name>
    <filename>classDApplicationSettingsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowButton</name>
    <filename>classDArrowButton.html</filename>
    <base>QLabel</base>
    <member kind="function">
      <type></type>
      <name>DArrowButton</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>afa570d2c78af38fb7e44bf799a2357c1</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArrowDirection</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>ad1052d003b3502c13400dc1e8fa76fe1</anchor>
      <arglist>(ArrowDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>arrowDirection</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>a6a6d3c94f601ddfa1120b072099c1cc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>buttonState</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>a82b19dbe975dba3a64fce922f517dc67</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DArrowButton</name>
    <filename>classDtk_1_1Widget_1_1DArrowButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowLineDrawer</name>
    <filename>classDArrowLineDrawer.html</filename>
    <base>DDrawer</base>
    <member kind="function">
      <type></type>
      <name>DArrowLineDrawer</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a76a7391e30315aacfaf35154339dbcba</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a0dffe0d9bb45ea670b17ecb2e783a929</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpand</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a9bf76cfa638b5ee5f1eda85b330d4d98</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED DBaseLine *</type>
      <name>headerLine</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a612be0ee404b45a02b6f4d774987e39b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DArrowLineDrawer</name>
    <filename>classDtk_1_1Widget_1_1DArrowLineDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowLineDrawerPrivate</name>
    <filename>classDArrowLineDrawerPrivate.html</filename>
    <base>DDrawerPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DArrowLineExpand</name>
    <filename>classDtk_1_1Widget_1_1DArrowLineExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowRectangle</name>
    <filename>classDArrowRectangle.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DArrowRectangleExample</name>
    <filename>classDArrowRectangleExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DArrowRectanglePrivate</name>
    <filename>classDArrowRectanglePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DAsync</name>
    <filename>classDtk_1_1Core_1_1DAsync.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DAsyncState</name>
    <filename>classDtk_1_1Core_1_1DAsyncState.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DBackgroundGroup</name>
    <filename>classDBackgroundGroup.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DBackgroundGroupExample</name>
    <filename>classDBackgroundGroupExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DBackgroundGroupPrivate</name>
    <filename>classDBackgroundGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBaseExpand</name>
    <filename>classDtk_1_1Widget_1_1DBaseExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>DBaseExpandPrivate</name>
    <filename>classDBaseExpandPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DBaseFileWatcher</name>
    <filename>classDtk_1_1Core_1_1DBaseFileWatcher.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type>QUrl</type>
      <name>fileUrl</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>aaaafca02100e83a24d1c10ef3c771d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a52553bcef3e99c2e10db7f07a7976d66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a03d2ce92705da4fda885de51e1e55c6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restartWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a50c523b302e5e7ba1faae12305a56a42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEnabledSubfileWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>aca5b89f7fbc62821ef09054d508802ab</anchor>
      <arglist>(const QUrl &amp;subfileUrl, bool enabled=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ghostSignal</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a420895d41ed21729e4d07ba5fb56b396</anchor>
      <arglist>(const QUrl &amp;targetUrl, SignalType1 signal, const QUrl &amp;arg1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ghostSignal</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>ade7ca8df29710c0826047d81418643cd</anchor>
      <arglist>(const QUrl &amp;targetUrl, SignalType2 signal, const QUrl &amp;arg1, const QUrl &amp;arg2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DBaseFileWatcherPrivate</name>
    <filename>classDtk_1_1Core_1_1DBaseFileWatcherPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DBaseLine</name>
    <filename>classDBaseLine.html</filename>
    <base>QLabel</base>
    <member kind="function">
      <type>void</type>
      <name>setLeftContent</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a36273d4abfb5dde9280ee6d5640cc681</anchor>
      <arglist>(QWidget *content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightContent</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a2920f6b0a002513a49cf80dbe4ffcbfa</anchor>
      <arglist>(QWidget *content)</arglist>
    </member>
    <member kind="function">
      <type>QBoxLayout *</type>
      <name>leftLayout</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a80f080ee43aa3291e9ba3927aff2965a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QBoxLayout *</type>
      <name>rightLayout</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>acd60ed030cff7ed8775b9729d77bd4f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a95099e63bcdad6a8d8aedcde0c82f18b</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a564bdb8bc1c1329500273afa2569b9d7</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>leftMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a384268be3df8b63a09ce54c4fa2da710</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rightMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>aecd16de73875e8eb0aa231b0483e6afe</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBaseLine</name>
    <filename>classDtk_1_1Widget_1_1DBaseLine.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectGroup</name>
    <filename>classDBlurEffectGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectGroupPrivate</name>
    <filename>classDBlurEffectGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectWidget</name>
    <filename>classDBlurEffectWidget.html</filename>
    <base>QWidget</base>
    <member kind="enumeration">
      <type></type>
      <name>BlurMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>abb491650f59b66f7da7a831361e11697</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a6c26cbeb53ad47fd5d5ad8cde32ece9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BehindWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27afec58b54b67a2b778711834736d2c34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWidgetBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a8d102c67159e2097f8429b48d38e3bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a6c26cbeb53ad47fd5d5ad8cde32ece9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BehindWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27afec58b54b67a2b778711834736d2c34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWidgetBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a8d102c67159e2097f8429b48d38e3bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a59accaf7deeeaedfe6db5b98963c12bb</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a4f4545ac16b97285d191f0dca14dfdcb</anchor>
      <arglist>(BlurMode mode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab92e199673108cf30eff4ca23f86a38b</anchor>
      <arglist>(BlendMode blendMode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlurRectXRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ac3c76f52d564c9ef5d4c0a9414aaa1b6</anchor>
      <arglist>(int blurRectXRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlurRectYRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adf0c2a2569bf3a30c1c70e865e94da32</anchor>
      <arglist>(int blurRectYRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskAlpha</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6f30c78c1d300aa67618011b73da0193</anchor>
      <arglist>(quint8 alpha)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adcf40e6717feb3bbdab76f225b424d91</anchor>
      <arglist>(QColor maskColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ac86b942461c1859b46bbd06b30c6f36a</anchor>
      <arglist>(MaskColorType type)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFull</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a92d692a82aa274703cb769e51091c9c8</anchor>
      <arglist>(bool full)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlurEnabled</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a5d800c13590f42fac94ab7538ffe09a0</anchor>
      <arglist>(bool blurEnabled)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>updateBlurSourceImage</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a38276fe00ff77292deacb53df9c0fb03</anchor>
      <arglist>(const QRegion &amp;ren)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>radiusChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ae6b0cb0ecc43cc3aeda28d7de545e31e</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>modeChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a3dda6da48a21ceecaa989db4775caac9</anchor>
      <arglist>(BlurMode mode)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blendModeChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6f2f8b146e5d22fa4e34d53bf54bf92c</anchor>
      <arglist>(BlendMode blendMode)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blurRectXRadiusChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab2ae5a7ebf4c8a4748dcbc2a6949da27</anchor>
      <arglist>(int blurRectXRadius)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blurRectYRadiusChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a7551308bfe9069c208aecc4cad1fc235</anchor>
      <arglist>(int blurRectYRadius)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>maskAlphaChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a9f3b6a39b02c4896ea0ccc5221e1c3fb</anchor>
      <arglist>(quint8 alpha)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>maskColorChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>aabf36ba2fdee5b10e12ecd45e488cebf</anchor>
      <arglist>(QColor maskColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBlurEffectWidget</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>afcb874ed4e858c331ccc83c1f0c8ae85</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ad2a55cda48d183febcc66f7c369296ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlurMode</type>
      <name>mode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a0071a2d6abdcde0475572a6cd6e6168e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlendMode</type>
      <name>blendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a539f21e29341285225bdc9cfc2191503</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blurRectXRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ac2af0b53842b1dbaeb86280265e077f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blurRectYRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a3d732ca8b69ef478477adcb2eed64099</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFull</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a833eba01afb8853b8199fcb8179022a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blurEnabled</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab592c0d07f336f03c62fd10868a5565c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>maskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a72d60aad3b2b4d8ab8ee657952b202b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaskPath</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a4bd4dea7dd5a5dd7cfe972633756fedc</anchor>
      <arglist>(const QPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceImage</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a669449fe8e62a8bf9bf0385e208dd1cb</anchor>
      <arglist>(const QImage &amp;image, bool autoScale=true)</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adbdaa823c0c6ce8733b78ab3832471af</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>BlurMode</type>
      <name>mode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ae0edc0fb4d640b202334355bca2a949e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>BlendMode</type>
      <name>blendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6a7a90cded652beb360c0bf8f5505090</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>blurRectXRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6e9cdc1ae92413ed73f75acc97b2feac</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>blurRectYRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a23fc23b3085ba61cee2614dfe2ba37aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>maskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a1719acaf60c3e21837850546966ddf8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint8</type>
      <name>maskAlpha</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adc07ddda93428f01a234dca983731b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>full</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>afa658f00726c1330d8d0f1174e42cba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>blurEnabled</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a28556e99af2f78eeae8e3f2985f7197e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBlurEffectWidget</name>
    <filename>classDtk_1_1Widget_1_1DBlurEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectWidgetPrivate</name>
    <filename>classDBlurEffectWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DBoxWidget</name>
    <filename>classDBoxWidget.html</filename>
    <base>QFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a4ea54ed728dbe1de2d154c9cbc954fc7</anchor>
      <arglist>(QBoxLayout::Direction direction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBoxWidget</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a06808410e0d74af703589294cac4e3a7</anchor>
      <arglist>(QBoxLayout::Direction direction, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QBoxLayout *</type>
      <name>layout</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a5333af54ecf805a764f6294458a5b365</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a1471b589e5b8c7c06e3acf5bcb4e811e</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>aec9742fcba6686cb15bee45f7f814898</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSize</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>ab53cc9838a42469a2521f228a3f7afdf</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a3d62f6a37ecb00225ddd8423a3dd3e15</anchor>
      <arglist>(QEvent *ee) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="property">
      <type>QBoxLayout::Direction</type>
      <name>direction</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a122870e3eb817bd436682f0c3223f44b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBoxWidget</name>
    <filename>classDtk_1_1Widget_1_1DBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DBoxWidgetPrivate</name>
    <filename>classDBoxWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DBuiltinIconEngine</name>
    <filename>classDBuiltinIconEngine.html</filename>
    <base>QIconEngine</base>
  </compound>
  <compound kind="class">
    <name>DBusInterface</name>
    <filename>classDBusInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DBusMPRIS</name>
    <filename>classDBusMPRIS.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBox</name>
    <filename>classDButtonBox.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DButtonBox</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>af6cf7be3a656e516fe8af04aa8427bc7</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Orientation</type>
      <name>orientation</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>ac9a1a8746a2c3d59b79ff6b8b0db3d54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>aa0157febb4a17ebe05cfb81f00964ead</anchor>
      <arglist>(Qt::Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtonList</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>a65dbe6b119e229903164d23021dc3bd1</anchor>
      <arglist>(const QList&lt; DButtonBoxButton * &gt; &amp;list, bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QAbstractButton * &gt;</type>
      <name>buttonList</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>ad2285d275a65d4d908a74474fe7c8345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QAbstractButton *</type>
      <name>checkedButton</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>abef92bfdeee48db3f275c69bbcfa58bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QAbstractButton *</type>
      <name>button</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>a1b5619365631bc714822215312501a31</anchor>
      <arglist>(int id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>acdfbf4360649f9b80812e22be041e106</anchor>
      <arglist>(QAbstractButton *button, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>abee8987391a8a391f2282dab56036886</anchor>
      <arglist>(QAbstractButton *button) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkedId</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>a630447682360987db32f965eb7e1937b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DButtonBox</name>
    <filename>classDtk_1_1Widget_1_1DButtonBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBoxButton</name>
    <filename>classDButtonBoxButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>acca9165c403ba41be4fe263a1d9bd6dc</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>ac99812eada587b77df46aca6df711c37</anchor>
      <arglist>(const QIcon &amp;icon, const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>ab12325e3229260bdfb26e44c30ff8698</anchor>
      <arglist>(QStyle::StandardPixmap iconType=static_cast&lt; QStyle::StandardPixmap &gt;(-1), const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a570d48a2f246cf09eedbb3b624bcd903</anchor>
      <arglist>(DStyle::StandardPixmap iconType=static_cast&lt; DStyle::StandardPixmap &gt;(-1), const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>ab1b32ddd68126a52c49096b75aea42af</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a1fb5a812ce8247a0b05be56d349a3120</anchor>
      <arglist>(QStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>af084828cb1ab61d24612e7ab31c5c7a4</anchor>
      <arglist>(DStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a6aa9de996d63db2f140fd793bd2f7681</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>aaf40378beefd6b500308e434944f034d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>minimumSizeHint</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a1e8c0f150a3b4ce6c9e04bcfa62898bd</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DButtonBoxButton</name>
    <filename>classDtk_1_1Widget_1_1DButtonBoxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBoxButtonPrivate</name>
    <filename>classDButtonBoxButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBoxExample</name>
    <filename>classDButtonBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DButtonBoxPrivate</name>
    <filename>classDButtonBoxPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DCalendarWidgetExample</name>
    <filename>classDCalendarWidgetExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapDir</name>
    <filename>classDtk_1_1Core_1_1DCapDir.html</filename>
    <base>QDir</base>
    <member kind="function">
      <type></type>
      <name>DCapDir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a4e5751f1099f8ed49ff87e14de786b4a</anchor>
      <arglist>(const DCapDir &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DCapDir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a881783734135ecd58c5117c10b2a31b3</anchor>
      <arglist>(const QString &amp;path=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DCapDir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>ab733911ac8dd0cae56033afc9f811903</anchor>
      <arglist>(const QString &amp;path, const QString &amp;nameFilter, SortFlags sort=SortFlags(Name|IgnoreCase), Filters filter=AllEntries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPath</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>acfb28169aea65fcee18633592487e7ee</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cd</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a2a122ec0af363d5734ddf81fbe0f4252</anchor>
      <arglist>(const QString &amp;dirName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>aa5e9a95c7843175a3e0cfcb7e880738b</anchor>
      <arglist>(const QString &amp;dirName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmdir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>aef8430e688587a69304b53dd11c83cca</anchor>
      <arglist>(const QString &amp;dirName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkpath</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>ae2dbcf9385dcd85e71d19a74ff6e66ec</anchor>
      <arglist>(const QString &amp;dirPath) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmpath</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>adb9ccb01ef449c4535526279431b2ea0</anchor>
      <arglist>(const QString &amp;dirPath) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>ae8a867af0a1bab2d4000bc07f03889c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>af0611146cba8aeb7257484a53cbd9481</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>afb849e9272242afc7f2f8dd6f4d23fb5</anchor>
      <arglist>(const QString &amp;oldName, const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a1ff7317dff5cc6f4837548138f718656</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapDirPrivate</name>
    <filename>classDtk_1_1Core_1_1DCapDirPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFile</name>
    <filename>classDtk_1_1Core_1_1DCapFile.html</filename>
    <base>QFile</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type></type>
      <name>DCapFile</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a4cef0e5a801edd0dcdbbe8d6cb0b60d1</anchor>
      <arglist>(const QString &amp;name, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ac9bb0457a8e9b837a8d64550c98a2445</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>af412269eaf0d6fd7ecb33145acd049c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>symLinkTarget</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a3229c69a572a2c99350d7dd79767bb56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ada9871b34d2ceb9059208a3d7e3e1dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrash</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>abb60764abae1e5aac017be2e616cfcd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ab1a224fb142fbf27ae9a6e132eae7957</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ae648cab7e8089970c10816632dc17c6e</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a2dab4eb6c80e9f6825d83061aaeb19e6</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a133ae6d1a3ad7bb3b16f41234d124bcd</anchor>
      <arglist>(OpenMode flags) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resize</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a63d82b73758b0c3ba7125844aa28b4ef</anchor>
      <arglist>(qint64 sz) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ae349e5ad70e1d6a4d2782a068bd7eaf2</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a428e5c2b74f31aed482831fbb7b88eb7</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>moveToTrash</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a1c902b31afee7ee5923c043e2eca7b26</anchor>
      <arglist>(const QString &amp;fileName, QString *pathInTrash=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a558a5a8fe9e40b2b9de0e32b55ba7a53</anchor>
      <arglist>(const QString &amp;oldName, const QString &amp;newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>link</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>af21ddbf40b79ac90b59d1cbbd48cb3c1</anchor>
      <arglist>(const QString &amp;oldname, const QString &amp;newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>copy</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a46644013f107a3adfb04943433f840c1</anchor>
      <arglist>(const QString &amp;fileName, const QString &amp;newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>resize</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ac3ff2a8ca8729c3ec75137cb43734df3</anchor>
      <arglist>(const QString &amp;filename, qint64 sz)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFilePrivate</name>
    <filename>classDtk_1_1Core_1_1DCapFilePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFSFileEngine</name>
    <filename>classDtk_1_1Core_1_1DCapFSFileEngine.html</filename>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFSFileEngineHandler</name>
    <filename>classDtk_1_1Core_1_1DCapFSFileEngineHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFSFileEnginePrivate</name>
    <filename>classDtk_1_1Core_1_1DCapFSFileEnginePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapManager</name>
    <filename>classDtk_1_1Core_1_1DCapManager.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapManager_</name>
    <filename>classDtk_1_1Core_1_1DCapManager__.html</filename>
    <base>Dtk::Core::DCapManager</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapManagerPrivate</name>
    <filename>classDtk_1_1Core_1_1DCapManagerPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DCheckButtonExample</name>
    <filename>classDCheckButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DCircleProgress</name>
    <filename>classDCircleProgress.html</filename>
    <base>QWidget</base>
    <member kind="signal">
      <type>void</type>
      <name>clicked</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>abe12d28e859b930181eb2c8b26968072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mouseEntered</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>abf53af8d0b739301e9baca489c8bfcfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mouseLeaved</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a8217d2ed85c16af765d9474703ba8df4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>ace2b2bfcca94a12c95e8b836a6594222</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>adfc0450b707451772c694168fd1f6072</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>text</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>aec8576adce8f18664e70de0fbc2bfedd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a6e1ad88acf5d1d6072335c5777fce80e</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const QColor</type>
      <name>backgroundColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a232dfe720cdda8310b1500322a36ea93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a52ac10d6997f23b7e1059f452616a0c9</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const QColor</type>
      <name>chunkColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>afdf7c97b22507f939d3152025a8d6190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChunkColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a92a60c0404e5cec5bfaa2b5bf3e13e8c</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lineWidth</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>adb2fb3b055e95a0ccfa5e84d2c32dfe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineWidth</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a76e2a0a1752e2e77c214ba2483478984</anchor>
      <arglist>(const int width)</arglist>
    </member>
    <member kind="function">
      <type>QLabel *</type>
      <name>topLabel</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a3d55da6541226fbfcbfa1c10fe234634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLabel *</type>
      <name>bottomLabel</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a34ce5b6649a007f121a009f8287a0a9d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCircleProgress</name>
    <filename>classDtk_1_1Widget_1_1DCircleProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>DCircleProgressPrivate</name>
    <filename>classDCircleProgressPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DClipEffectWidget</name>
    <filename>classDClipEffectWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setMargins</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a034a0592a55329419913c06adda5d152</anchor>
      <arglist>(QMargins margins)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a689a4f16d653347f8bedad2b14a23aad</anchor>
      <arglist>(const QPainterPath &amp;path)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>marginsChanged</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a9d57e9b8f592fc2c5707d6fc6a75c5cd</anchor>
      <arglist>(QMargins margins)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>clipPathChanged</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a185cbdc4702685a90c03320d5592ac8f</anchor>
      <arglist>(QPainterPath clipPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DClipEffectWidget</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a8004bf24f2216ce58ff1f66cdd175d57</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="property">
      <type>QMargins</type>
      <name>margins</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a278bd703ef7f428b5ed2f960a296e390</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a5edd7f09635bacaffcf9b3a26b228bef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DClipEffectWidget</name>
    <filename>classDtk_1_1Widget_1_1DClipEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DClipEffectWidgetPrivate</name>
    <filename>classDClipEffectWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DColoredProgressBar</name>
    <filename>classDColoredProgressBar.html</filename>
    <base>QProgressBar</base>
    <member kind="function">
      <type>void</type>
      <name>addThreshold</name>
      <anchorfile>classDColoredProgressBar.html</anchorfile>
      <anchor>a31a4620e4f5271c143ce266f5a7287c3</anchor>
      <arglist>(int threshold, QBrush brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeThreshold</name>
      <anchorfile>classDColoredProgressBar.html</anchorfile>
      <anchor>a78abbc00612361a2e3c90ab33bf744f6</anchor>
      <arglist>(int threshold)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>thresholds</name>
      <anchorfile>classDColoredProgressBar.html</anchorfile>
      <anchor>a2aadd9546ce6954e7bfbe1ad939a4624</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DColoredProgressBar</name>
    <filename>classDtk_1_1Widget_1_1DColoredProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>DColoredProgressBarExample</name>
    <filename>classDColoredProgressBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DColoredProgressBarPrivate</name>
    <filename>classDColoredProgressBarPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DColumnViewExample</name>
    <filename>classDColumnViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DComboBox</name>
    <filename>classDComboBox.html</filename>
    <base>QComboBox</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showPopup</name>
      <anchorfile>classDComboBox.html</anchorfile>
      <anchor>aac57ec0e10963c1a5bcebd8ddee87fed</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DComboBoxExample</name>
    <filename>classDComboBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DFileDialog::DComboBoxOptions</name>
    <filename>structDFileDialog_1_1DComboBoxOptions.html</filename>
  </compound>
  <compound kind="class">
    <name>DComboBoxPrivate</name>
    <filename>classDComboBoxPrivate.html</filename>
    <member kind="function">
      <type>QRect</type>
      <name>popupGeometry</name>
      <anchorfile>classDComboBoxPrivate.html</anchorfile>
      <anchor>ae68984c0fe8f3208ea0dcc634cb3b438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeWidthHint</name>
      <anchorfile>classDComboBoxPrivate.html</anchorfile>
      <anchor>a6cfe3d8b9ffb08dd575a2a36e2cbc077</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DCommandLinkButton</name>
    <filename>classDCommandLinkButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="function">
      <type></type>
      <name>DCommandLinkButton</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a6e3d53507e7f520fe8e46e7cdc004c40</anchor>
      <arglist>(const QString text, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a20141e8ced0644f3a002c94ce11d3822</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initStyleOption</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a7f84c293340be9fc0bb756142be6977b</anchor>
      <arglist>(DStyleOptionButton *option) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a8352305e3993778383b3456e9ee9c1f3</anchor>
      <arglist>(QPaintEvent *e) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCommandLinkButton</name>
    <filename>classDtk_1_1Widget_1_1DCommandLinkButton.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfig</name>
    <filename>classDtk_1_1Core_1_1DConfig.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigBackend</name>
    <filename>classDtk_1_1Core_1_1DConfigBackend.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigCache</name>
    <filename>classDtk_1_1Core_1_1DConfigCache.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigCacheImpl</name>
    <filename>classDtk_1_1Core_1_1DConfigCacheImpl.html</filename>
    <base>Dtk::Core::DConfigCache</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigFile</name>
    <filename>classDtk_1_1Core_1_1DConfigFile.html</filename>
    <base>Dtk::Core::DObject</base>
    <class kind="struct">Dtk::Core::DConfigFile::Version</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigFilePrivate</name>
    <filename>classDtk_1_1Core_1_1DConfigFilePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigInfo</name>
    <filename>classDtk_1_1Core_1_1DConfigInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DConfigKey</name>
    <filename>structDtk_1_1Core_1_1DConfigKey.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigMeta</name>
    <filename>classDtk_1_1Core_1_1DConfigMeta.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigMetaImpl</name>
    <filename>classDtk_1_1Core_1_1DConfigMetaImpl.html</filename>
    <base>Dtk::Core::DConfigMeta</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigPrivate</name>
    <filename>classDtk_1_1Core_1_1DConfigPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DCrumbEdit</name>
    <filename>classDCrumbEdit.html</filename>
    <base>QTextEdit</base>
    <member kind="slot">
      <type>void</type>
      <name>setCrumbReadOnly</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>abb5e09364481a5d013f1a2894bf52c06</anchor>
      <arglist>(bool crumbReadOnly)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCrumbRadius</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a8b2f9284b01a1d988b23424f737171d5</anchor>
      <arglist>(int crumbRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSplitter</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a189ba294158cf88aec4561fbec5da623</anchor>
      <arglist>(const QString &amp;splitter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ac67b2be4e92d2868a2cfeb7f72eab65b</anchor>
      <arglist>(const DCrumbTextFormat &amp;format, int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>aea1c8f246ef88edffe0a8c25dd6a216f</anchor>
      <arglist>(const QString &amp;text, int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a239636e15c4f2a3378da107f7b6e3263</anchor>
      <arglist>(const DCrumbTextFormat &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a6faf77b415196cd4d517ef64e2474e93</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ad026df7e8171bd098b212668715116fd</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>crumbList</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ab719fa214451a1b859bced185e816e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DCrumbTextFormat</type>
      <name>crumbTextFormat</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>af071df548002d18a87322eddb4e04083</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>DCrumbTextFormat</type>
      <name>makeTextFormat</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a3edd04efd81ba446eb3f5f3fe2060177</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DCrumbTextFormat</type>
      <name>makeTextFormat</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a112aaa7ab40a0dbd1d6fe82c0237496e</anchor>
      <arglist>(CrumbType type) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>afef19bb2cdc6c8eabd81521c62d11c32</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>keyPressEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a7dff2fa37abfced0d897595741108865</anchor>
      <arglist>(QKeyEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseDoubleClickEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a54f7e5b7642c09f8f055d28db4f45da8</anchor>
      <arglist>(QMouseEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>focusOutEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a1a5224981b44dd524646b75cab5a9634</anchor>
      <arglist>(QFocusEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QMimeData *</type>
      <name>createMimeDataFromSelection</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a3322e2d87a354277ed7382889fe3d3c0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>canInsertFromMimeData</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a6b99ca3200235bf3a3150f3097a07af6</anchor>
      <arglist>(const QMimeData *source) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>insertFromMimeData</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ad3abd6afca3e0b64b6e0eaecb3f15a86</anchor>
      <arglist>(const QMimeData *source) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCrumbEdit</name>
    <filename>classDtk_1_1Widget_1_1DCrumbEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbEditPanelFrame</name>
    <filename>classDCrumbEditPanelFrame.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DCrumbEditPrivate</name>
    <filename>classDCrumbEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbTextFormat</name>
    <filename>classDCrumbTextFormat.html</filename>
    <base>QTextCharFormat</base>
    <member kind="function">
      <type>QColor</type>
      <name>tagColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a90664ba14d4f285a4ca0badf912bf687</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTagColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a0b8b6613abfcc27aa94816412a00ef35</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>text</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a18bfd0ea244dac89fb545e4d6e8aaf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a9f0e3b487f8504353114bc070a98ae87</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>textColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a0b49d54481d562172550256eb51d804c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a4942accdadef30f47fb041b2c639cde1</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>background</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a3795773ba946d0c176cc4dede2b4339c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a147489b392863a70ec85e7bb1e4f394f</anchor>
      <arglist>(const QBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>backgroundRadius</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>ae2849f07410d5f174e5cd377182d7077</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundRadius</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>aff286c0457b65f509914952872649ec6</anchor>
      <arglist>(int radius)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCrumbTextFormat</name>
    <filename>classDtk_1_1Widget_1_1DCrumbTextFormat.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbTextFormatExample</name>
    <filename>classDCrumbTextFormatExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DCustomWidgets</name>
    <filename>classDCustomWidgets.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDBusCaller</name>
    <filename>classDDBusCaller.html</filename>
    <member kind="function">
      <type>QDBusPendingCall</type>
      <name>call</name>
      <anchorfile>classDDBusCaller.html</anchorfile>
      <anchor>a3159935276a522a6c9cfd517ded8a432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DDBusCaller</type>
      <name>arg</name>
      <anchorfile>classDDBusCaller.html</anchorfile>
      <anchor>a9d38c396d8f0f474db50576fbe2c029a</anchor>
      <arglist>(const T &amp;argument)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDBusData</name>
    <filename>classDDBusData.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>service</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a14241e0237123ff2dae79f12ccf01ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>path</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a25f0445c1e414c421af4d1a7de3ffaa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>interface</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a868b8b2a0a1d3a3b627508145ccedd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>queryName</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a9d6e83e1baf0c4fb6d1f3946ec4f1e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QDBusConnection</type>
      <name>connection</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a4fa2b2cabaeae6085df2ad2af538be01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusExtendedAbstractInterface</name>
    <filename>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>startServiceProcess</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>abbd26be1895f61addd51a4b85627b36f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>serviceValidChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>aeb968b4c866c73e8a1b71ae48f9e9028</anchor>
      <arglist>(const bool valid) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>serviceStartFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>adf8b5dca5a9c7cf559e40e412603276f</anchor>
      <arglist>(const quint32 ret) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>propertyChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a4ce2dbdb50fd5689f0f195e2d9574189</anchor>
      <arglist>(const QString &amp;propertyName, const QVariant &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>propertyInvalidated</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ac9a9cfddf514bc2a0aaebdbdab443ee1</anchor>
      <arglist>(const QString &amp;propertyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>asyncPropertyFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a88d8e4a41084fe148dd61f2e3996a93a</anchor>
      <arglist>(const QString &amp;propertyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>asyncSetPropertyFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>acb6de641fd1a426feba6487c09a61d7c</anchor>
      <arglist>(const QString &amp;propertyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>asyncGetAllPropertiesFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ad24b306d51f229617dc048e31cee6f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ae2b13a31b99a8cff3779f6f2415c86d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>af352fbefe82cf305ae9bae2c9798abac</anchor>
      <arglist>(bool sync)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a88fb75e241405341ddada4033325ca94</anchor>
      <arglist>(bool sync, bool autoStart)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useCache</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ae7a7efdf492593e2144e0cbc898eaa29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseCache</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a119e4de2da429ff0bcc85ddf10c46c65</anchor>
      <arglist>(bool useCache)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllProperties</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a4cbb53276c0245af653729e7194ba5a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QDBusError</type>
      <name>lastExtendedError</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a9d08f68250cee9d87c08f26edb4b8493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DDBusExtendedAbstractInterface</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>af870dd6ecc88be54c2aecbf7486364bf</anchor>
      <arglist>(const QString &amp;service, const QString &amp;path, const char *interface, const QDBusConnection &amp;connection, QObject *parent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>connectNotify</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a6fb75754cfc917d5cc1d6d9e9b4fdd8e</anchor>
      <arglist>(const QMetaMethod &amp;signal)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>disconnectNotify</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a8a8eceb8b371e9afcf5c5c35f9b4db95</anchor>
      <arglist>(const QMetaMethod &amp;signal)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QVariant</type>
      <name>internalPropGet</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a8dd3468e0914aa60432f32ee7223edb6</anchor>
      <arglist>(const char *propname, void *propertyPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalPropSet</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a8649689cac0520206aba73f09e65b0d2</anchor>
      <arglist>(const char *propname, const QVariant &amp;value, void *propertyPtr)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a26a9a8971b797769f63238ab79c2b9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>useCache</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a5df6f802bbdadb55c2cdea8734e79d9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusExtendedPendingCallWatcher</name>
    <filename>classDtk_1_1Core_1_1DDBusExtendedPendingCallWatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusInterface</name>
    <filename>classDtk_1_1Core_1_1DDBusInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusInterfacePrivate</name>
    <filename>classDtk_1_1Core_1_1DDBusInterfacePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDBusProperty</name>
    <filename>classDDBusProperty.html</filename>
    <member kind="function">
      <type>QDBusPendingCall</type>
      <name>get</name>
      <anchorfile>classDDBusProperty.html</anchorfile>
      <anchor>a181678d0a0b4d9139b0e41766fa58c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QDBusPendingCall</type>
      <name>set</name>
      <anchorfile>classDDBusProperty.html</anchorfile>
      <anchor>a808aaab8842b995d27b8f04b0bbe3ae7</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDBusSender</name>
    <filename>classDDBusSender.html</filename>
    <member kind="function">
      <type>DDBusSender</type>
      <name>service</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a52daaa38e8c5216acee288db472c90ec</anchor>
      <arglist>(const QString &amp;service)</arglist>
    </member>
    <member kind="function">
      <type>DDBusSender</type>
      <name>interface</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a1e85af9e9660215b62a5f9009bae9edd</anchor>
      <arglist>(const QString &amp;interface)</arglist>
    </member>
    <member kind="function">
      <type>DDBusSender</type>
      <name>path</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>ac8bf02e43ce0c3ad90d379a72f0641f5</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>DDBusCaller</type>
      <name>method</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a1c8021fa59f4f37416faf8cf7c07333e</anchor>
      <arglist>(const QString &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>DDBusProperty</type>
      <name>property</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a246184101d07e14d697e7362213f9ffb</anchor>
      <arglist>(const QString &amp;property)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFile</name>
    <filename>classDtk_1_1Core_1_1DDciFile.html</filename>
    <base>Dtk::Core::DObject</base>
    <member kind="enumeration">
      <type></type>
      <name>FileType</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a4ca74a65e62766b5517f2f69a9d96eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aad2a429bd9f3f7cc360c647c73349f53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>lastErrorString</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a25b28569afbef07a7bca746ee26dd335</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeToFile</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>abfea543b6537ed867d22fe4b7c844a04</anchor>
      <arglist>(const QString &amp;fileName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeToDevice</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ab53eebe0e429de9a7c31703bcf197c77</anchor>
      <arglist>(QIODevice *device) const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>toData</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aec9adf992851c7fd12fce29734714354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>list</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ac1678e4485e62e479ffadd5f39dea647</anchor>
      <arglist>(const QString &amp;dir, bool onlyFileName=false) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>childrenCount</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a70adb3c6baf1de845ddf9d42e9d19dfc</anchor>
      <arglist>(const QString &amp;dir) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aa148decad420f1b8b193c53b1f89d301</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>FileType</type>
      <name>type</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ad80390324f3d872bb6b68b9143c85449</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>dataRef</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a23f6f1ef5719eb4958dcad77014fdf78</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a0023a70e2e2508776111e8a79c68264e</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>symlinkTarget</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>af26f5caf4874d554f60ba665aa7154be</anchor>
      <arglist>(const QString &amp;filePath, bool originData=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aa4d976d769cc58983cd71c649b2153a6</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFile</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a42d40c25307a2442f1e3f2500d998266</anchor>
      <arglist>(const QString &amp;filePath, const QByteArray &amp;data, bool override=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>acf030bfaa15e25a023af68b997d7ccb7</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a0355e819d6be4e3082b2019b0be158d3</anchor>
      <arglist>(const QString &amp;filePath, const QString &amp;newFilePath, bool override=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ae27cc589ce2aac5a517c2a43ae7705d8</anchor>
      <arglist>(const QString &amp;source, const QString &amp;to)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr int</type>
      <name>metadataSizeV1</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a9566824a8626cb7ea73d01e8d3e5756c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFileEngine</name>
    <filename>classDtk_1_1Core_1_1DDciFileEngine.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFileEngineHandler</name>
    <filename>classDtk_1_1Core_1_1DDciFileEngineHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFileEngineIterator</name>
    <filename>classDtk_1_1Core_1_1DDciFileEngineIterator.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFilePrivate</name>
    <filename>classDtk_1_1Core_1_1DDciFilePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <class kind="struct">Dtk::Core::DDciFilePrivate::Node</class>
  </compound>
  <compound kind="class">
    <name>DDciIcon</name>
    <filename>classDDciIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DDciIcon</name>
    <filename>classDtk_1_1Gui_1_1DDciIcon.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDciIconEntry</name>
    <filename>structDDciIconEntry.html</filename>
    <class kind="struct">DDciIconEntry::ScalableLayer</class>
  </compound>
  <compound kind="class">
    <name>DDciIconPalette</name>
    <filename>classDDciIconPalette.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DDciIconPalette</name>
    <filename>classDtk_1_1Gui_1_1DDciIconPalette.html</filename>
  </compound>
  <compound kind="class">
    <name>DDciIconPrivate</name>
    <filename>classDDciIconPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDesktopEntry</name>
    <filename>classDtk_1_1Core_1_1DDesktopEntry.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>EntryType</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a31cd3020dcd76d7b9e02524bc7930ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValueType</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>af44aba30f52603b63f99515712047c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3076653b0fcd6b9e898399e7c2eb2268</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDesktopEntry</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a28c1a750559d76466e059d8f8d598038</anchor>
      <arglist>(const QString &amp;filePath) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3ca962839a986bd492f72ed68ce11695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>status</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ae56ee84326a5976ea3760a4501382f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a231721fcb8a979aa51dcdd4457a75725</anchor>
      <arglist>(const QString &amp;section=&quot;Desktop Entry&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>allGroups</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ab362e7bb2ce8f0c3119465b991596216</anchor>
      <arglist>(bool sorted=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a9f10cd5616ce0e3fffbc3389c636f13f</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a2adfa7cf0958e789daedfdc4480ee540</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>genericName</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a4d8d1f5103f04f24c977f8c5894c5045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ddeDisplayName</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a37c81d91c490dca6bcfe91441752fba9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>comment</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a2c22b3382ab71fb741739d9d2303c50f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>rawValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a4fb687dadc5c29494a91aef173d23b9b</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>stringValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>aae3c2f04e0417cd582e291333b4654d0</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>localizedValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>aff8ddbd07cb7322573e31023d85c225a</anchor>
      <arglist>(const QString &amp;key, const QString &amp;localeKey=&quot;default&quot;, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>localizedValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3bcd126c3789ffa6f63d024b1c427f12</anchor>
      <arglist>(const QString &amp;key, const QLocale &amp;locale, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>stringListValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ab0e15bc2e1ded51f08d8cb8f18e5e65b</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRawValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a9c4e50012b0535214312ae101e1afb9d</anchor>
      <arglist>(const QString &amp;value, const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStringValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>aaa2581ab46bd2c3dbe107203496c4923</anchor>
      <arglist>(const QString &amp;value, const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLocalizedValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a7a8a1139aebf60f2f80aef58264e9d60</anchor>
      <arglist>(const QString &amp;value, const QString &amp;localeKey, const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeEntry</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a0cfb5118ebff6521f7ac785fbf9f2afa</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>escape</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>afaf0afc69a747d6788a71263fa875b9f</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>escapeExec</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a6f3876ae89eb8ebd45aec8c459eca963</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>unescape</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3a905bd2af6d3ead6a38e5081f675dd2</anchor>
      <arglist>(QString &amp;str, bool unescapeSemicolons=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>unescapeExec</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ad529376566e4500c71ee56184987062d</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setStatus</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a190a010877efc20d4cc43d019b444c0f</anchor>
      <arglist>(const Status &amp;status)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDesktopEntryPrivate</name>
    <filename>classDtk_1_1Core_1_1DDesktopEntryPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDesktopEntrySection</name>
    <filename>classDtk_1_1Core_1_1DDesktopEntrySection.html</filename>
  </compound>
  <compound kind="class">
    <name>DDesktopServices</name>
    <filename>classDDesktopServices.html</filename>
  </compound>
  <compound kind="class">
    <name>DDialog</name>
    <filename>classDDialog.html</filename>
    <base>DAbstractDialog</base>
    <member kind="slot">
      <type>int</type>
      <name>addButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a03999a489354652657f187572affe1a2</anchor>
      <arglist>(const QString &amp;text, bool isDefault=false, ButtonType type=ButtonNormal)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>addButtons</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ad2c35e90142226ba3f4c9e7ba5576560</anchor>
      <arglist>(const QStringList &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>af4b20c40095b4d718f5bb25791a62d13</anchor>
      <arglist>(int index, const QString &amp;text, bool isDefault=false, ButtonType type=ButtonNormal)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ab1188ec30886ba8778fc1052706fc995</anchor>
      <arglist>(int index, QAbstractButton *button, bool isDefault=false)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertButtons</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>accf07670403737a1b3b7341e0a406f15</anchor>
      <arglist>(int index, const QStringList &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>acffdb4ea6133dc62f02fb7e8123ee8c6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a13b41f5ce2d3b491148a37b1f3e2936d</anchor>
      <arglist>(QAbstractButton *button)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeButtonByText</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>acac8323f394800285dfb5d1540c50adb</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>clearButtons</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ad77d71530df35bacfaba552843e3b2f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>setDefaultButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ac0ee4bb4733dd05d0a09189579d08c2e</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>setDefaultButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a8223734a7411e6bc2d4b823d07b93d9c</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDefaultButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a718d6854a60f3551679465c71a537193</anchor>
      <arglist>(QAbstractButton *button)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addContent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a5ed96f3cb2520150bffdaea3b4e1ef38</anchor>
      <arglist>(QWidget *widget, Qt::Alignment alignment={})</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertContent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a069f29ef0379a82d810201bed983bcac</anchor>
      <arglist>(int index, QWidget *widget, Qt::Alignment alignment={})</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeContent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a4524eeb046f2b5f350271ef41729eb7b</anchor>
      <arglist>(QWidget *widget, bool isDelete=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>clearContents</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>aaa91361d0d011ced341664c0643cf9be</anchor>
      <arglist>(bool isDelete=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a5ad28f058c6d7aa60cbf3159160753f3</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addSpacing</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>af4547072e8d8de47342d239d4b1e7eab</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertSpacing</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a9b614d1933c9ad3be8fa56014c023677</anchor>
      <arglist>(int index, int spacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>clearSpacing</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>af90eb8313f1246fe02921a2bdad28db6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setButtonText</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ab26c020109df58fe0a97c5efabe9762d</anchor>
      <arglist>(int index, const QString &amp;text)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setButtonIcon</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>aec564ca9d7998739e64bc718b989344f</anchor>
      <arglist>(int index, const QIcon &amp;icon)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a937b72977084f1b2414d704a957d76e6</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWordWrapTitle</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a6822ec1bab946be3edb71978fe04d6ca</anchor>
      <arglist>(bool wordWrap)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a0431a7d2397963c2cec76983b1095985</anchor>
      <arglist>(const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ac14ca8c14499a865c32f344f3b792365</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="slot">
      <type>D_DECL_DEPRECATED void</type>
      <name>setIcon</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a83424e89a18ec1654f13a5976f06cea0</anchor>
      <arglist>(const QIcon &amp;icon, const QSize &amp;expectedSize)</arglist>
    </member>
    <member kind="slot">
      <type>D_DECL_DEPRECATED void</type>
      <name>setIconPixmap</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a4d0c25342a48f1d77d458c727cfc731b</anchor>
      <arglist>(const QPixmap &amp;iconPixmap)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTextFormat</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>af795ea5beef81d50e991b88b025e5f82</anchor>
      <arglist>(Qt::TextFormat textFormat)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setOnButtonClickedClose</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a68b0b45360b02ffb51f9ccaf69b80e4a</anchor>
      <arglist>(bool onButtonClickedClose)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>exec</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>acc0499eec8cf37dabe79c3307f510881</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDialog</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a97a2242020d7a491e91cf20652490e8a</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDialog</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a15f5de87db51cf9a39e8bd4d3bfad82e</anchor>
      <arglist>(const QString &amp;title, const QString &amp;message, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getButtonIndexByText</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a8068d72c9a3cae47126fd0833089c562</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>buttonCount</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a6e366a5f298ca425157e1d39a99d3294</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>contentCount</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a984b658383a1cc0b9f509c360772ffb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QAbstractButton * &gt;</type>
      <name>getButtons</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>aa350a57e5319c95bde8b746ba3289501</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QWidget * &gt;</type>
      <name>getContents</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a8b97e47a5ccbc20ab98bbaed80fed7db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QAbstractButton *</type>
      <name>getButton</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a6dc1be0d023f57ea8740be7f912e7bc6</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>getContent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ad6b93f0db7cb4b561d398344033622eb</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>title</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a2ec577cc41042c13cbd06b03319bd277</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>message</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a8ae0022c664563e9b836748a1c533591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>icon</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>ad86a15911eebdc43f7809a4fa759ce9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED QPixmap</type>
      <name>iconPixmap</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a011f9e5b368375402d9c482c3af4bd83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Qt::TextFormat</type>
      <name>textFormat</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a1d30580e0705ebc1bf2571c183fe1fe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onButtonClickedClose</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a34bb8bb05ff4d0b9ab1b637bdd9895dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContentLayoutContentsMargins</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a450824bcd416895d8c0aa88eb38f088d</anchor>
      <arglist>(const QMargins &amp;margins)</arglist>
    </member>
    <member kind="function">
      <type>QMargins</type>
      <name>contentLayoutContentsMargins</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a650ec848ac70bb6f8c84d63e60a02ebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>closeButtonVisible</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a45224fa6de7555748f2752fab530384b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a6adba921a288613b241dcb1d230b913d</anchor>
      <arglist>(QShowEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a613af173ed5c279067d76792e3b646e9</anchor>
      <arglist>(QHideEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>af44a41730e13d723833279f3ac84b28b</anchor>
      <arglist>(QResizeEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDialog</name>
    <filename>classDtk_1_1Widget_1_1DDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DDialogCloseButton</name>
    <filename>classDDialogCloseButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DDialogCloseButton</name>
      <anchorfile>classDDialogCloseButton.html</anchorfile>
      <anchor>a27d747c4862c4bdb5be96a412f5d39e8</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDialogExample</name>
    <filename>classDDialogExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DDialogPrivate</name>
    <filename>classDDialogPrivate.html</filename>
    <base>DAbstractDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDiskSizeFormatter</name>
    <filename>classDtk_1_1Core_1_1DDiskSizeFormatter.html</filename>
    <base>Dtk::Core::DAbstractUnitFormatter</base>
    <member kind="enumeration">
      <type></type>
      <name>DiskUnits</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>a73488f9c69a8fb812006eb1e74df9ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>unitStr</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>ae3b3ddd6a8132b2c964b93c3d0844233</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
    <member kind="function">
      <type>DDiskSizeFormatter</type>
      <name>rate</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>aa2f7f223ae4afe3419c31c385f06dbc2</anchor>
      <arglist>(int rate)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMin</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>acd56fd844f0e86046023dcea48493ded</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMax</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>a18f41a2758f293d25799568ec7c1596f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>unitConvertRate</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>a3a58aaba8417abe47af53501c8978d04</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDndClientSignalRelay</name>
    <filename>classDDndClientSignalRelay.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDndSourceInterface</name>
    <filename>classDDndSourceInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDoubleSpinBox</name>
    <filename>classDDoubleSpinBox.html</filename>
    <base>QDoubleSpinBox</base>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDDoubleSpinBox.html</anchorfile>
      <anchor>abb13d12bd88c79301ac54b36d80a9ad7</anchor>
      <arglist>(const QString &amp;text, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDDoubleSpinBox.html</anchorfile>
      <anchor>a3ecbe2c05bfd5aa9b77c8e12e06792da</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDoubleSpinBox</name>
    <filename>classDtk_1_1Widget_1_1DDoubleSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DDoubleSpinBoxPrivate</name>
    <filename>classDDoubleSpinBoxPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawer</name>
    <filename>classDDrawer.html</filename>
    <base>DFrame</base>
    <member kind="signal">
      <type>void</type>
      <name>expandChange</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a1f4eaf89d2ef99174cd6db7337d5b1b9</anchor>
      <arglist>(bool e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDrawer</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a57394661a72ee01ae364a5f70a27f2b6</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeader</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a291d9fa0d23e1df4b871ba54f7199257</anchor>
      <arglist>(QWidget *header)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>acdbd8c1717059cbf13a98812a14eee96</anchor>
      <arglist>(QWidget *content, Qt::Alignment alignment=Qt::AlignHCenter)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>getContent</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>aba71b84a294be08e7df70a1f4bc107df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>ac59ce154b686cbd1dc4770f28879a987</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setExpand</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a5cc8eebf60a9db68bf6abf2768c60d3e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expand</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>ac4fbbe70fe34a0293fd7872afb22e31c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimationDuration</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a3dc608cf5cf193fb1bbac17fcb73f8ae</anchor>
      <arglist>(int duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimationEasingCurve</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a1604e41e52637258c2575639cb2e259a</anchor>
      <arglist>(QEasingCurve curve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeparatorVisible</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>aa78d0e3dee52d7ef49cab585984aa2d1</anchor>
      <arglist>(bool arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpandedSeparatorVisible</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a1d762b97cc953d8c1d7f37b6b6391ebd</anchor>
      <arglist>(bool arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDrawer</name>
    <filename>classDtk_1_1Widget_1_1DDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawerGroup</name>
    <filename>classDDrawerGroup.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DDrawerGroup</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a531bfaaabe3389eb25ba4d61fde6f87d</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDrawer * &gt;</type>
      <name>expands</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>ac6af5440d114c07424604eabf171da73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DDrawer *</type>
      <name>checkedExpand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a4eac3fb9d931ed84ebed74441946c182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DDrawer *</type>
      <name>expand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a730dd70ea322094785f65f7666c05511</anchor>
      <arglist>(int id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExpand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>ae6a54e2a1ec3ced6b9b0f7d8756781ea</anchor>
      <arglist>(DDrawer *expand, int id=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a1455345fb1e65f115ef6e8d530c0518a</anchor>
      <arglist>(DDrawer *expand, int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExpand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>adad2aa750dee08a07837048772f10f73</anchor>
      <arglist>(DDrawer *expand)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkedId</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>ab1e0bf4b2ab2c0bdf36d49b51ab5c416</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a1f6a9a3ed0330ae41c813bede3aacfa5</anchor>
      <arglist>(DDrawer *expand) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDrawerGroup</name>
    <filename>classDtk_1_1Widget_1_1DDrawerGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawerGroupPrivate</name>
    <filename>classDDrawerGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawerPrivate</name>
    <filename>classDDrawerPrivate.html</filename>
    <base>DFramePrivate</base>
  </compound>
  <compound kind="class">
    <name>DEnhancedWidget</name>
    <filename>classDEnhancedWidget.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>affb84ed60b1093d823f42cd1482772c3</anchor>
      <arglist>(QWidget *target)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a955bdd7e9c0acf8e9010f7c0656ab59f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>xChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>acd4b367792ffe105198adc022d51a4bd</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>yChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a0e4bb4254be00e91c1914393fda639bf</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>positionChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a79444d04fa2c3b77ee4076deb9aae074</anchor>
      <arglist>(const QPoint &amp;point)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>widthChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>aa74dbb2721f6be3fa65db7b445a05b32</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>heightChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a43c1a01bf8445c06fc5dbfd746da6333</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>acd05371cca614e19b9b1bbe6b6d5a865</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>targetChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a3a510e9bbf1f8ca4ab6ccd67dfc79350</anchor>
      <arglist>(QWidget *target)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enabledChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>ae4a520770e62e97d3cd5dd4a95429b07</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>showed</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>aa05a770aa0bac2d77ce102b5c56031a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEnhancedWidget</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a779b5a22d4ce85f5da827558ab804862</anchor>
      <arglist>(QWidget *target, QObject *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>target</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a4e81818b58ad39482046c0993677c2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a72031aa0ac338d7f844f174ce28392c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DEnhancedWidget</name>
    <filename>classDtk_1_1Widget_1_1DEnhancedWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DEnhancedWidgetPrivate</name>
    <filename>classDEnhancedWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DError</name>
    <filename>classDtk_1_1Core_1_1DError.html</filename>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a7b9e6f13971cbc57df05e10e0b7f0ebb</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>ac49cead00185d1a9898b83d6c7e3e0fa</anchor>
      <arglist>(const DError &amp;e) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a0d198be34c0adfb4c0227004a99e215c</anchor>
      <arglist>(DError &amp;&amp;e) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>aad85b72fc9cbb4b5fe2108a176637863</anchor>
      <arglist>(qint64 code, const QString &amp;msg) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a0837e30f37d34d465ed70281976d3343</anchor>
      <arglist>(qint64 code, QString &amp;&amp;msg) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DError &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>ac3f718e16429088ab9b1f6373c058bf8</anchor>
      <arglist>(const DError &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>DError &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a656aa73e3aaf0ec6143328185f3899a8</anchor>
      <arglist>(DError &amp;&amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>aaaae7d50f254ec270a77ab48b479d9c4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>getErrorCode</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>af42e66aaf3583568285a21c9866f37bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorCode</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a3f95c86d00455fe62cc337e4edd594c5</anchor>
      <arglist>(qint64 code) &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>getErrorMessage</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>af9375ee7267946a8363eff205e61dca6</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getErrorMessage</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a1ffab4864655dbb940737a88c7ffeee9</anchor>
      <arglist>() const &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorMessage</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a0607320bf3cfcb9f949ff9e6412cf2ae</anchor>
      <arglist>(const QString &amp;msg) &amp;</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a642b8113dedd3c490e235440e14f804a</anchor>
      <arglist>(const DError &amp;x, const DError &amp;y) noexcept</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>afe3234e791d043daa0e5377257d14066</anchor>
      <arglist>(const DError &amp;x, const DError &amp;y) noexcept</arglist>
    </member>
    <member kind="friend">
      <type>friend QDebug</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a665cfb436d21a3342a6589fc9dd753cd</anchor>
      <arglist>(QDebug debug, const DError &amp;e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DExpandGroup</name>
    <filename>classDtk_1_1Widget_1_1DExpandGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DExpected</name>
    <filename>classDtk_1_1Core_1_1DExpected.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a69ec10f2c36b000be8849029f3392599</anchor>
      <arglist>() noexcept(std::is_nothrow_default_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a0fdd0c71df462c57587a0a309594654f</anchor>
      <arglist>(const DExpected &amp;_x) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value and std::is_nothrow_copy_constructible&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a3885d717f1e5f0b3396f3f2197ab6fe8</anchor>
      <arglist>(DExpected &amp;&amp;_x) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value and std::is_nothrow_move_constructible&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ac2b9605fb374e4ffe650af388ec9b638</anchor>
      <arglist>(const DExpected&lt; U, G &gt; &amp;_x) noexcept(std::is_nothrow_constructible&lt; T, const U &amp; &gt;::value and std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ac2b9605fb374e4ffe650af388ec9b638</anchor>
      <arglist>(const DExpected&lt; U, G &gt; &amp;_x) noexcept(std::is_nothrow_constructible&lt; T, const U &amp; &gt;::value and std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a92f81ba7b40bd250b8d0f4ad5ea12d9d</anchor>
      <arglist>(DExpected&lt; U, G &gt; &amp;&amp;_x) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value and std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a92f81ba7b40bd250b8d0f4ad5ea12d9d</anchor>
      <arglist>(DExpected&lt; U, G &gt; &amp;&amp;_x) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value and std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a82d3986b525839bc655acfdcdf04e767</anchor>
      <arglist>(U &amp;&amp;_v) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a82d3986b525839bc655acfdcdf04e767</anchor>
      <arglist>(U &amp;&amp;_v) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aab0aaa6e88fd6a4b88db2bb8fd67d278</anchor>
      <arglist>(const DUnexpected&lt; G &gt; &amp;_u) noexcept(std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aab0aaa6e88fd6a4b88db2bb8fd67d278</anchor>
      <arglist>(const DUnexpected&lt; G &gt; &amp;_u) noexcept(std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1f4ff83978dec9dbeac6e4419d56d093</anchor>
      <arglist>(DUnexpected&lt; G &gt; &amp;&amp;_u) noexcept(std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1f4ff83978dec9dbeac6e4419d56d093</anchor>
      <arglist>(DUnexpected&lt; G &gt; &amp;&amp;_u) noexcept(std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a057ad3f9d2270aa8ad666a5d8c3e79b6</anchor>
      <arglist>(emplace_tag, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; T, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a14155e23e9d7851adf158b5822bc4701</anchor>
      <arglist>(emplace_tag, std::initializer_list&lt; U &gt; _li, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; T, std::initializer_list&lt; U &gt; &amp;, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a7db3e241c34d47c0757c642b5723c63d</anchor>
      <arglist>(dunexpected_tag, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a3bd18418ea81915849b9ee697d06df4d</anchor>
      <arglist>(dunexpected_tag, std::initializer_list&lt; U &gt; _li, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, std::initializer_list&lt; U &gt; &amp;, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a868eab317dd4157380fbcbe680920590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aea8d3fb522c8fa0afe0d9fe3b63a4072</anchor>
      <arglist>(const DExpected &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a8871a0aefb27d498de245f7b0b557b62</anchor>
      <arglist>(const DExpected &amp;_x) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value and std::is_nothrow_copy_constructible&lt; E &gt;::value and std::is_nothrow_copy_assignable&lt; T &gt;::value and std::is_nothrow_copy_assignable&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ae78e9a5d4c6fd62a32f5ddaec4681930</anchor>
      <arglist>(DExpected &amp;&amp;_x) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value and std::is_nothrow_move_constructible&lt; E &gt;::value and std::is_nothrow_move_assignable&lt; T &gt;::value and std::is_nothrow_move_assignable&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a686c33e3f3b2328d64907c63440b157d</anchor>
      <arglist>(U &amp;&amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a759bd8ec2e916cf3ef532fbc35685f00</anchor>
      <arglist>(const DUnexpected&lt; G &gt; &amp;_e)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aef86cced3146c6b22bcd92385d9db4d6</anchor>
      <arglist>(DUnexpected&lt; G &gt; &amp;&amp;_e)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aa27cccc579e09335ad2ae63d56bcde05</anchor>
      <arglist>(Args &amp;&amp;...args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a586c1512390b7d6bbad8bb14d0effb71</anchor>
      <arglist>(std::initializer_list&lt; U &gt; li, Args &amp;&amp;...args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a9ca748c1377ed5c102d5d0bb812873cf</anchor>
      <arglist>(DExpected &amp;_x) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value and std::is_nothrow_move_constructible&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ae4458c405bb84dba4883ecc5dcf2da22</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1b27a56b75fd7d2ca1cb24c0b2c5c1a7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a4d006887ff523514ec24ac5170817335</anchor>
      <arglist>() const &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a6321f3fec693cf839039f14e4f67d693</anchor>
      <arglist>() &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;&amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a227ed93e76212ff78657124075247ba7</anchor>
      <arglist>() const &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;&amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ae6b8eea66d835028be8f96e9b7361378</anchor>
      <arglist>() &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>af03f63f886ba4a531713ff973d842c37</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>hasValue</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aa99f8be0bd8a8e434180cc78b9dab7a7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>afaa80017d0f01ebc06663708348e9ef1</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>afffd46786e0836baa0ad77ffe6ae6d44</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;&amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aabf12f9357bd3414dc6d53fbc8fc25bc</anchor>
      <arglist>() const &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>T &amp;&amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a40b622bdbd0916871ba693ee4146ac87</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>const E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a929c7922684a3eb5173bc8fd4572ff8e</anchor>
      <arglist>() const &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1d2e0451b444935f233daf4df12cb20e</anchor>
      <arglist>() &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>const E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a7ad0baf5f44f65b8c474e799aef80278</anchor>
      <arglist>() const &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a526a47bcc5fe7bc1627879f98e5c72b2</anchor>
      <arglist>() &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value_or</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a08f5cb42876dd8ca17d370d7c8b3d047</anchor>
      <arglist>(U &amp;&amp;_v) const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value_or</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a2f5a3fa81f055f3de495c7ebff313d2b</anchor>
      <arglist>(U &amp;&amp;_v) &amp;&amp;</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a88a0694bfd5c0b41d5a8d553180f7646</anchor>
      <arglist>(const DExpected &amp;_x, const DExpected&lt; U, E2 &gt; &amp;_y) noexcept(noexcept(bool(*_x== *_y)) and noexcept(bool(_x.error()==_y.error())))</arglist>
    </member>
    <member kind="friend">
      <type>constexpr friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1f24af9647de655339be53d386d9cc26</anchor>
      <arglist>(const DExpected &amp;_x, const U &amp;_v) noexcept(noexcept(bool(*_x==_v)))</arglist>
    </member>
    <member kind="friend">
      <type>constexpr friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a08ec6bed0eec7501afd2f52ef09ce181</anchor>
      <arglist>(const DExpected &amp;_x, const DUnexpected&lt; E2 &gt; &amp;_e) noexcept(noexcept(bool(_x.error()==_e.error())))</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>af9f13a88a03183783ed7d55ada334570</anchor>
      <arglist>(DExpected &amp;_x, DExpected &amp;_y) noexcept(noexcept(_x.swap(_y)))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DExpected&lt; void, E &gt;</name>
    <filename>classDtk_1_1Core_1_1DExpected_3_01void_00_01E_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DExportedInterface</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DExportedInterface.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DExportedInterfaceDBusInterface</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DExportedInterfaceDBusInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DExportedInterfacePrivate</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DExportedInterfacePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFileChooserEdit</name>
    <filename>classDFileChooserEdit.html</filename>
    <base>DLineEdit</base>
    <member kind="signal">
      <type>void</type>
      <name>fileChoosed</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>aa4d84f1436535e870a71709b1bcd776e</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dialogOpened</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a61a5fc9d9aeec5d16e53de481c727590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dialogClosed</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a7cfc4513ccb814ab5204abd66719a4ba</anchor>
      <arglist>(int code)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFileChooserEdit</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a3f476d9ff776d0f75258378b600c6649</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileMode</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a6eccd9366099554b5ff4db1c199ef018</anchor>
      <arglist>(QFileDialog::FileMode mode)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog::FileMode</type>
      <name>fileMode</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a31c91202cd36bd9fea9154a9834ee727</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameFilters</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>ada10d58b34e147115cfcbfa00114f639</anchor>
      <arglist>(const QStringList &amp;filters)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>nameFilters</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a97787d7657bd7e87e80311a997774b72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDialogDisplayPosition</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>aac09bdccec37b9946a91cfc6621cd50b</anchor>
      <arglist>(DialogDisplayPosition dialogDisplayPosition)</arglist>
    </member>
    <member kind="function">
      <type>DFileChooserEdit::DialogDisplayPosition</type>
      <name>dialogDisplayPosition</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a573054d1fc0b77cfcb006af0a82e3e0b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFileChooserEdit</name>
    <filename>classDtk_1_1Widget_1_1DFileChooserEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileChooserEditExample</name>
    <filename>classDFileChooserEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFileChooserEditPrivate</name>
    <filename>classDFileChooserEditPrivate.html</filename>
    <base protection="private">DLineEditPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFileDialog</name>
    <filename>classDFileDialog.html</filename>
    <base>QFileDialog</base>
    <class kind="struct">DFileDialog::DComboBoxOptions</class>
    <class kind="struct">DFileDialog::DLineEditOptions</class>
    <member kind="function">
      <type>void</type>
      <name>addComboBox</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a113591b57763bb43a17267bb99030411</anchor>
      <arglist>(const QString &amp;text, const QStringList &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComboBox</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a0da8f2e5b3f53c2ebc0f9a4314d8de81</anchor>
      <arglist>(const QString &amp;text, const DComboBoxOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLineEdit</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>ac377056c749c1fe946ef3d091003e83d</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLineEdit</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a43374f93f4ee60b95dbf4b88e42a4052</anchor>
      <arglist>(const QString &amp;text, const DLineEditOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowMixedSelection</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>af202e900bd6fa485047cdebd88f28501</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getComboBoxValue</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a6115a32a9b27c8e50b587a576462794d</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getLineEditValue</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a9808ebd2d88215f9e5d03b1a539c569c</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFileDialog</name>
    <filename>classDtk_1_1Widget_1_1DFileDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDialogExample</name>
    <filename>classDFileDialogExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFileDrag</name>
    <filename>classDFileDrag.html</filename>
    <base>QDrag</base>
    <member kind="signal">
      <type>void</type>
      <name>targetUrlChanged</name>
      <anchorfile>classDFileDrag.html</anchorfile>
      <anchor>a2c0cd15f6f1c6454d9905807b24e5878</anchor>
      <arglist>(QUrl url)</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>targetUrl</name>
      <anchorfile>classDFileDrag.html</anchorfile>
      <anchor>a3553c2ff3a9f3bf483b8054b7270e904</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeData</name>
      <anchorfile>classDFileDrag.html</anchorfile>
      <anchor>adf42b1fc2931eb081a7e48add02f0a59</anchor>
      <arglist>(QMimeData *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFileDrag</name>
    <filename>classDtk_1_1Gui_1_1DFileDrag.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDragClient</name>
    <filename>classDFileDragClient.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>progressChanged</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a01d0156804a0f2084a4f568bf0201ce7</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>stateChanged</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a1a32f6927bf6c58d37de165db86db1c6</anchor>
      <arglist>(DFileDragState state)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>serverDestroyed</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a275736acc5abe6080bd603ad9bb22ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>progress</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a4044d58d2755f4bbe8aca5612c0f54b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DFileDragState</type>
      <name>state</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a8affafb13a36f2aabb8027979f562a67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkMimeData</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>acbd4c7c7090d14e8472c13a4c107f043</anchor>
      <arglist>(const QMimeData *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTargetData</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>ab4a54b86071a1acc38fa41061c2aace2</anchor>
      <arglist>(const QMimeData *data, QString key, QVariant value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTargetUrl</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a4c506e38d2d207919f1bf1c621d6ba14</anchor>
      <arglist>(const QMimeData *data, QUrl url)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFileDragClient</name>
    <filename>classDtk_1_1Gui_1_1DFileDragClient.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDragClientPrivate</name>
    <filename>classDFileDragClientPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDragServer</name>
    <filename>classDFileDragServer.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setProgress</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>af3d5c150495d2eda9ba0995af8f5c269</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>aa84e47e5951fed9906062245744955c4</anchor>
      <arglist>(DFileDragState state)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>targetDataChanged</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>a9752d1aac5ddcabffd9e47e6d1a29dd0</anchor>
      <arglist>(const QString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>targetData</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>a0170ec299c1dc773e1905c73f68afe19</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFileDragServer</name>
    <filename>classDtk_1_1Gui_1_1DFileDragServer.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileIconProvider</name>
    <filename>classDFileIconProvider.html</filename>
    <base>QFileIconProvider</base>
  </compound>
  <compound kind="class">
    <name>DFileIconProviderPrivate</name>
    <filename>classDFileIconProviderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileServices</name>
    <filename>classDtk_1_1Core_1_1DFileServices.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileSystemWatcher</name>
    <filename>classDtk_1_1Core_1_1DFileSystemWatcher.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type></type>
      <name>DFileSystemWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a898df68bda1a1b3f31ce54ffb2dbfc0d</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFileSystemWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a2cb634cb4a19e5d9ad1baecc6ae2936e</anchor>
      <arglist>(const QStringList &amp;paths, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DFileSystemWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>af0261247601d380db10af96412b9ba55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPath</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a596b42f0264af6c2ca6186e1fa234a7c</anchor>
      <arglist>(const QString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>addPaths</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a95f9b90e40f268873682ea191996bb9c</anchor>
      <arglist>(const QStringList &amp;files)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removePath</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a723bb916c339ffe791e521c3bf300ea0</anchor>
      <arglist>(const QString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>removePaths</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>afd0a393eb251aa01d927abccde5f2057</anchor>
      <arglist>(const QStringList &amp;files)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>files</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a3aabd837ad02f5403ac619dd00ac83b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>directories</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>af5b02cad6c6588395e1562750713bfe7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileSystemWatcherPrivate</name>
    <filename>classDtk_1_1Core_1_1DFileSystemWatcherPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <base>Dtk::Core::DObjectPrivate</base>
    <base>Dtk::Core::DObjectPrivate</base>
    <member kind="function">
      <type>void</type>
      <name>_q_readFromInotify</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcherPrivate.html</anchorfile>
      <anchor>a02d1916e14c3d770ac85bebe153df0c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFileThumbnailProviderPrivate</name>
    <filename>classDFileThumbnailProviderPrivate.html</filename>
    <base>DThumbnailProvider</base>
    <base>DThumbnailProvider</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcher</name>
    <filename>classDtk_1_1Core_1_1DFileWatcher.html</filename>
    <base>Dtk::Core::DBaseFileWatcher</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcherManager</name>
    <filename>classDtk_1_1Core_1_1DFileWatcherManager.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type>DFileWatcher *</type>
      <name>add</name>
      <anchorfile>classDtk_1_1Core_1_1DFileWatcherManager.html</anchorfile>
      <anchor>a688f6d112cfb42cf310430b9bb843c38</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DFileWatcherManager.html</anchorfile>
      <anchor>ae2b829d8576b30c37af8d8eeb09e30ca</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcherManagerPrivate</name>
    <filename>classDtk_1_1Core_1_1DFileWatcherManagerPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcherPrivate</name>
    <filename>classDtk_1_1Core_1_1DFileWatcherPrivate.html</filename>
    <base protection="private">Dtk::Core::DBaseFileWatcherPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFloatingButton</name>
    <filename>classDFloatingButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DFloatingButton</name>
      <anchorfile>classDFloatingButton.html</anchorfile>
      <anchor>aa5469ef21b7e9a10cf06fb5ba913d462</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFloatingButtonExample</name>
    <filename>classDFloatingButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFloatingMessage</name>
    <filename>classDFloatingMessage.html</filename>
    <base>DFloatingWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a356135eaa6a210e267fcec78319bc593</anchor>
      <arglist>(const QIcon &amp;ico)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>ae398619560a825b287553b3d84c71141</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a4e853d0b19f5ab6ac81123cdea9754cc</anchor>
      <arglist>(QWidget *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDuration</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a2a5cfea17af78221a467eadeef161687</anchor>
      <arglist>(int msec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a923f8ab92157d958dfbef208a7937212</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFloatingMessage</name>
    <filename>classDtk_1_1Widget_1_1DFloatingMessage.html</filename>
  </compound>
  <compound kind="class">
    <name>DFloatingMessagePrivate</name>
    <filename>classDFloatingMessagePrivate.html</filename>
    <base>DFloatingWidgetPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFloatingWidget</name>
    <filename>classDFloatingWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setBlurBackgroundEnabled</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a11b246c9bc1c4a8845637595d268b2b1</anchor>
      <arglist>(bool blurBackgroundEnabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFloatingWidget</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>acce00f3a2a92cee5ae6d3b02c208075e</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a923f8ab92157d958dfbef208a7937212</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFramRadius</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>aafd5a9c8a4b1179335f5502c0df9186c</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initStyleOption</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a8373bb2e19368f95e48bebe2ae291fec</anchor>
      <arglist>(DStyleOptionFloatingWidget *option) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blurBackgroundIsEnabled</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a3389e489461f52d9695bab3ab3e74a04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DBlurEffectWidget *</type>
      <name>blurBackground</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a891ee8948dcc17ff3bd6afc62746758d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DFloatingWidget</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>ac4e8042b6ba99adaee59e10d22d54d88</anchor>
      <arglist>(DFloatingWidgetPrivate &amp;dd, QWidget *parent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>adc149c56fd7c4c627d6de403a56425c8</anchor>
      <arglist>(QEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFloatingWidgetPrivate</name>
    <filename>classDFloatingWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFlowLayout</name>
    <filename>classDFlowLayout.html</filename>
    <base>QLayout</base>
    <member kind="slot">
      <type>void</type>
      <name>setHorizontalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a444857ae4f995d270e77bb7e34e95b64</anchor>
      <arglist>(int horizontalSpacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVerticalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a1b2a386a24c7d93b9101a9c633905f55</anchor>
      <arglist>(int verticalSpacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a83004594feda3e5f7a37425c767f2ab7</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFlow</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a3a95898b832ec4f8e479a17d03c0e27a</anchor>
      <arglist>(Flow flow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>add3c8bdc620b58797847010257b3043d</anchor>
      <arglist>(int index, QLayoutItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a4606788589276afac1f53faa5bd75007</anchor>
      <arglist>(int index, QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLayout</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>abd3290649ff9fead5422b0c7009663f7</anchor>
      <arglist>(int index, QLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>af38f734c02e01cc90085b8453b18712a</anchor>
      <arglist>(int index, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertStretch</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a41f5302b0afb2693e935d45d69a86174</anchor>
      <arglist>(int index, int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacerItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>af001b54375f07343857f7d0f19affc57</anchor>
      <arglist>(int index, QSpacerItem *spacerItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a24395bc6981864663f63cca7fa1d38dc</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStretch</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a7e4d125f9a8cf7d70cb1f34fbc8f53c4</anchor>
      <arglist>(int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacerItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a62cb6c5a3c7631f0175923dacc900263</anchor>
      <arglist>(QSpacerItem *spacerItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a3ca7f32828c63774ef30fe8fd30c409e</anchor>
      <arglist>(QLayoutItem *item) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasHeightForWidth</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>ac4733374419f239f6f2ac442615fec51</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>heightForWidth</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>af204722516914f09161374289237cbf4</anchor>
      <arglist>(int) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a1dd33b25505bc6739d99575f5c71e5de</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>QLayoutItem *</type>
      <name>takeAt</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a63a409d74a598a8a4444174f076ef0b2</anchor>
      <arglist>(int index) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>horizontalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a50a788fcb9cf4f01feb1e3e2980b0da5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>ab8036a67baf95e7f5acfe83358cb4dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Flow</type>
      <name>flow</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a6f4c6548e7a137494194c6337cf2e83b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFlowLayout</name>
    <filename>classDtk_1_1Widget_1_1DFlowLayout.html</filename>
  </compound>
  <compound kind="class">
    <name>DFlowLayoutPrivate</name>
    <filename>classDFlowLayoutPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontComboBox</name>
    <filename>classDFontComboBox.html</filename>
    <base>DComboBox</base>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentFont</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a2ea244a4602eda079656d8d9e3a1fdad</anchor>
      <arglist>(const QFont &amp;f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFontComboBox</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a29295d3d4492049803258a3b7a2c0421</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWritingSystem</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a4ea7ae951731446a5a3fcc0bfa96e0c5</anchor>
      <arglist>(QFontDatabase::WritingSystem)</arglist>
    </member>
    <member kind="function">
      <type>QFontDatabase::WritingSystem</type>
      <name>writingSystem</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>ae6d6683728b10a8dd431346ec1ad5913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontFilters</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>abc9ba0d4762f72452dc4d24177975d94</anchor>
      <arglist>(QFontComboBox::FontFilters filters)</arglist>
    </member>
    <member kind="function">
      <type>QFontComboBox::FontFilters</type>
      <name>fontFilters</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>ab5d1eed8ff005caa7a39495b41679407</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QFont</type>
      <name>currentFont</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a0a38f057e6eecb02656e303de83189cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a0fb1c0088cb88dcf4e451b7c03909ee7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>event</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>ac02b887455a24504cda00d1d1de28957</anchor>
      <arglist>(QEvent *e) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFontComboBoxExample</name>
    <filename>classDFontComboBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFontComboBoxPrivate</name>
    <filename>classDFontComboBoxPrivate.html</filename>
    <base>DComboBoxPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFontManager</name>
    <filename>classDFontManager.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>Q_INVOKABLE int</type>
      <name>fontPixelSize</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a288368436a44e45ce511ed2ccb68801b</anchor>
      <arglist>(SizeType type) const</arglist>
    </member>
    <member kind="function">
      <type>Q_INVOKABLE void</type>
      <name>setFontPixelSize</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a219a729130d0d97c0b9e6c3ee13696ce</anchor>
      <arglist>(SizeType type, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaseFont</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a073047e1c74acbf01a551967b7aa0411</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QFont</type>
      <name>get</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a6fb5e0a1de5877644eae1fca8ad16145</anchor>
      <arglist>(int pixelSize, const QFont &amp;base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFontManager</name>
    <filename>classDtk_1_1Gui_1_1DFontManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontManagerPrivate</name>
    <filename>classDFontManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontSizeManager</name>
    <filename>classDFontSizeManager.html</filename>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a1882fe37243ec33dca65b7e549420296</anchor>
      <arglist>(QWidget *widget, SizeType type, int weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unbind</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a21d1a132e973d1be037e4a9066baa5f4</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>quint16</type>
      <name>fontPixelSize</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>ad1668e295e236a3cd79d35bb7d199ee4</anchor>
      <arglist>(SizeType type) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontPixelSize</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a87e6d4fe0e47448080059cfd61d44fe5</anchor>
      <arglist>(SizeType type, quint16 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontGenericPixelSize</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>ae51e5a4367f947716d256cf1ed3e3564</anchor>
      <arglist>(quint16 size)</arglist>
    </member>
    <member kind="function">
      <type>const QFont</type>
      <name>get</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a88655d29842b22bc027a4c882c29813c</anchor>
      <arglist>(SizeType type, int weight, const QFont &amp;base=QFont()) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DFontSizeManager *</type>
      <name>instance</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a4d38b4d13ee70801eb8f9f53851469b4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFontSizeManager</name>
    <filename>classDtk_1_1Widget_1_1DFontSizeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontSizeManagerPrivate</name>
    <filename>classDFontSizeManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DForeignWindow</name>
    <filename>classDForeignWindow.html</filename>
    <base>QWindow</base>
    <member kind="signal">
      <type>void</type>
      <name>wmClassChanged</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>aaad3cc1043a896236756fe0371183c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>pidChanged</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>a424eadf0537e565295498eda505e0ff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DForeignWindow</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>abe67965134550275b0cfc445872c4024</anchor>
      <arglist>(QWindow *parent=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DForeignWindow *</type>
      <name>fromWinId</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>ab5416d7037a8dc71654db6c4386958d0</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>wmClass</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>a4a44fdbbd12323932f2f52af9b4487bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint32</type>
      <name>pid</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>adf06aa24cb3c3875185c46c33ed7b01d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DForeignWindow</name>
    <filename>classDtk_1_1Gui_1_1DForeignWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>DForeignWindowPrivate</name>
    <filename>classDForeignWindowPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFrame</name>
    <filename>classDFrame.html</filename>
    <base>QFrame</base>
    <member kind="function">
      <type></type>
      <name>DFrame</name>
      <anchorfile>classDFrame.html</anchorfile>
      <anchor>ab8aea70683e87356f13b12c3232b11fd</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrameRounded</name>
      <anchorfile>classDFrame.html</anchorfile>
      <anchor>ab70885116a3f88b39f6b746850b3b93d</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundRole</name>
      <anchorfile>classDFrame.html</anchorfile>
      <anchor>aa7e121179b92692772c6eeb971948e0f</anchor>
      <arglist>(DGUI_NAMESPACE::DPalette::ColorType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFrameExample</name>
    <filename>classDFrameExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFramePrivate</name>
    <filename>classDFramePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsClipEffect</name>
    <filename>classDGraphicsClipEffect.html</filename>
    <base>QGraphicsEffect</base>
    <member kind="slot">
      <type>void</type>
      <name>setMargins</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a95adde3ff7730b38090e70db34d6e2af</anchor>
      <arglist>(const QMargins &amp;margins)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a8a8871f0814ccea9657c0b36d6a8c9f3</anchor>
      <arglist>(const QPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>marginsChanged</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a8e15bf128a6d841c976008a49987f047</anchor>
      <arglist>(QMargins margins)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>clipPathChanged</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>af93423586a6ee14660ddde915da1f815</anchor>
      <arglist>(QPainterPath clipPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DGraphicsClipEffect</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a337122610c814a47f0386eada3d4f7bf</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="property">
      <type>QMargins</type>
      <name>margins</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a889a0275a4c6c1d19de2082d7f16d2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a355c6d91153fb7bace3fd21eb9c7d201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DGraphicsClipEffect</name>
    <filename>classDtk_1_1Widget_1_1DGraphicsClipEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsClipEffectPrivate</name>
    <filename>classDGraphicsClipEffectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsCropItem</name>
    <filename>classDGraphicsCropItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="class">
    <name>DGraphicsGlowEffect</name>
    <filename>classDGraphicsGlowEffect.html</filename>
    <base>QGraphicsEffect</base>
    <member kind="function">
      <type></type>
      <name>DGraphicsGlowEffect</name>
      <anchorfile>classDGraphicsGlowEffect.html</anchorfile>
      <anchor>acab9769de8a44fc993b30177d1168135</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classDGraphicsGlowEffect.html</anchorfile>
      <anchor>a6e703d0a4bbee5a8cb7cabe94057a612</anchor>
      <arglist>(QPainter *painter)</arglist>
    </member>
    <member kind="function">
      <type>QRectF</type>
      <name>boundingRectFor</name>
      <anchorfile>classDGraphicsGlowEffect.html</anchorfile>
      <anchor>a11d351e515f68fb236a02634c6806a9b</anchor>
      <arglist>(const QRectF &amp;rect) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DGraphicsGlowEffect</name>
    <filename>classDtk_1_1Widget_1_1DGraphicsGlowEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsMovieItem</name>
    <filename>classDGraphicsMovieItem.html</filename>
    <base>QObject</base>
    <base>QGraphicsPixmapItem</base>
  </compound>
  <compound kind="class">
    <name>DGraphicsPixmapItem</name>
    <filename>classDGraphicsPixmapItem.html</filename>
    <base>QGraphicsPixmapItem</base>
  </compound>
  <compound kind="class">
    <name>DGraphicsSVGItem</name>
    <filename>classDGraphicsSVGItem.html</filename>
    <base>QGraphicsObject</base>
  </compound>
  <compound kind="class">
    <name>DGroupBoxExample</name>
    <filename>classDGroupBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DGuiApplicationHelper</name>
    <filename>classDGuiApplicationHelper.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>ColorType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a95bb3c2345b862eb18aebb372351099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a2baabc46b6bf60f6b430da872d7ba386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DarkType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a6882189c1f3cd4aae73d4ec9a505655d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Attribute</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseInactiveColorGroup</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caeff4d0f8dd5d66a2cccb9ae9d35bdab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorCompositing</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca4b2fd01fb675d8834a977785369b1488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ReadOnlyLimit</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca9b429f61321b3c1623f2f3d3a24963f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinPlatformTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cae9fd7d42031f1ae533fb8bac7f22ecf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDXcbPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caebd2551a8fbf187ef3c77fea39afc8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsXWindowPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca0477d73aad74e1f0f28ef39745a85fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsTableEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caa2f8de4bba85fadf6df1e46fa09ae6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cad7394061402858d07d1c3a012130460b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a95bb3c2345b862eb18aebb372351099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a2baabc46b6bf60f6b430da872d7ba386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DarkType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a6882189c1f3cd4aae73d4ec9a505655d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseInactiveColorGroup</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caeff4d0f8dd5d66a2cccb9ae9d35bdab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorCompositing</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca4b2fd01fb675d8834a977785369b1488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ReadOnlyLimit</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca9b429f61321b3c1623f2f3d3a24963f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinPlatformTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cae9fd7d42031f1ae533fb8bac7f22ecf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDXcbPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caebd2551a8fbf187ef3c77fea39afc8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsXWindowPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca0477d73aad74e1f0f28ef39745a85fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsTableEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caa2f8de4bba85fadf6df1e46fa09ae6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cad7394061402858d07d1c3a012130460b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPaletteType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a9a100f0f248307b7cc2df722a8aff68e</anchor>
      <arglist>(ColorType paletteType)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>handleHelpAction</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a23eec3eb5148c6b235229354a12bbcf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>newProcessInstance</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ab94fab6c42b86328baffcbb7bb3de0ad</anchor>
      <arglist>(qint64 pid, const QStringList &amp;arguments)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>applicationPaletteChanged</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a5001b4c491748c4b04bf45b97e2bb003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DPlatformTheme *</type>
      <name>systemTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a54696b5f532a5deaad028efdf4069fa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DPlatformTheme *</type>
      <name>applicationTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a68b559d15c50f259ff5a88bee40eb372</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED DPlatformTheme *</type>
      <name>windowTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ad47af29164477016275cafc944c28783</anchor>
      <arglist>(QWindow *window) const</arglist>
    </member>
    <member kind="function">
      <type>DPalette</type>
      <name>applicationPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>affc1f7774ce419a1ca73eab31f13cac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a88d71049a24d357f21a3fcf01575c48c</anchor>
      <arglist>(const DPalette &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED DPalette</type>
      <name>windowPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a36bc2b0660c97a4bdb2ba559151e4ccf</anchor>
      <arglist>(QWindow *window) const</arglist>
    </member>
    <member kind="function">
      <type>const DFontManager *</type>
      <name>fontManager</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a577e7dd7a88636632917bd1b88e1c98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ColorType</type>
      <name>themeType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ae52eaafd5dac53d984f343818dc14621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ColorType</type>
      <name>paletteType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ad3c12b8c91f93ef04a9f212842113aa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasUserManual</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a348f427c0f2e68b390a16a6b8ad5be09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED void</type>
      <name>registerInstanceCreator</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a168bc69f3dd3a98b978f6441b110e8f0</anchor>
      <arglist>(HelperCreator creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DGuiApplicationHelper *</type>
      <name>instance</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a4a9d84ced740d42bf39666aaa4d3c089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>adjustColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a9cde0c1e68ad96a4f51983dcd2e74cea</anchor>
      <arglist>(const QColor &amp;base, qint8 hueFloat, qint8 saturationFloat, qint8 lightnessFloat, qint8 redFloat, qint8 greenFloat, qint8 blueFloat, qint8 alphaFloat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QImage</type>
      <name>adjustColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a30a0a5a3123d5e71415210cfbb5b8e7f</anchor>
      <arglist>(const QImage &amp;base, qint8 hueFloat, qint8 saturationFloat, qint8 lightnessFloat, qint8 redFloat, qint8 greenFloat, qint8 blueFloat, qint8 alphaFloat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>blendColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>abc1784e93e1b0acaa2120832245087c5</anchor>
      <arglist>(const QColor &amp;substrate, const QColor &amp;superstratum)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DPalette</type>
      <name>standardPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aa88a702eaaada0055b51d9b8617ab648</anchor>
      <arglist>(ColorType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePaletteColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a148d4077f71412e3f71fdf3f62b21ca6</anchor>
      <arglist>(DPalette &amp;base, QPalette::ColorRole role, ColorType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePaletteColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ab1c178b05f397b57c042e7ca564af836</anchor>
      <arglist>(DPalette &amp;base, DPalette::ColorType role, ColorType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ab881c07f42d47c801ceb75c92937fc0a</anchor>
      <arglist>(DPalette &amp;base, ColorType type=UnknownType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DPalette</type>
      <name>fetchPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a80dbc8f823db2a49230e24734d4e5723</anchor>
      <arglist>(const DPlatformTheme *theme)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTabletEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a80c3706fe396568897da92d9db1e882c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSpecialEffectsEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a52569ac7a7e3a57f2d7e2466791e57b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorType</type>
      <name>toColorType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ac3667e460316b989a6f54463b7afcaa0</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorType</type>
      <name>toColorType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a25d6cc357e5f856da4c1e7765eabe420</anchor>
      <arglist>(const QPalette &amp;palette)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setSingleInstance</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ac3172ba90dcda102e3a3ac3b68ffebe3</anchor>
      <arglist>(const QString &amp;key, SingleScope singleScope=UserScope)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSingleInstanceInterval</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a299390a91b1c3a5aebdccba40d424c92</anchor>
      <arglist>(int interval=3000)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED void</type>
      <name>setSingelInstanceInterval</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>acf91b183ef7e5566a9770b558db42451</anchor>
      <arglist>(int interval=3000)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DGuiApplicationHelper</name>
    <filename>classDtk_1_1Gui_1_1DGuiApplicationHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DHBoxWidget</name>
    <filename>classDHBoxWidget.html</filename>
    <base>DBoxWidget</base>
    <member kind="function">
      <type></type>
      <name>DHBoxWidget</name>
      <anchorfile>classDHBoxWidget.html</anchorfile>
      <anchor>a0ac4da3eabc56d580e11d256d05c0113</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DHBoxWidget</name>
    <filename>classDtk_1_1Widget_1_1DHBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DHeaderLine</name>
    <filename>classDHeaderLine.html</filename>
    <base>DBaseLine</base>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDHeaderLine.html</anchorfile>
      <anchor>af67d950ff2a59401a6e44013e22a244c</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classDHeaderLine.html</anchorfile>
      <anchor>a512cd9a86037b3cb70a5ad1b7d8bcbe0</anchor>
      <arglist>(QWidget *content)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>title</name>
      <anchorfile>classDHeaderLine.html</anchorfile>
      <anchor>a6058870ba9c4efc22c6b1abfa05381e7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DHeaderLine</name>
    <filename>classDtk_1_1Widget_1_1DHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>DHeaderViewExample</name>
    <filename>classDHeaderViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DHiDPIHelper</name>
    <filename>classDHiDPIHelper.html</filename>
    <member kind="function" static="yes">
      <type>static QPixmap</type>
      <name>loadNxPixmap</name>
      <anchorfile>classDHiDPIHelper.html</anchorfile>
      <anchor>a1253c2f29100a572e4b681e2183ea3a2</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DHiDPIHelper</name>
    <filename>classDtk_1_1Widget_1_1DHiDPIHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DHorizontalLine</name>
    <filename>classDHorizontalLine.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>DHorizontalLineExample</name>
    <filename>classDHorizontalLineExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DialogExampleWindow</name>
    <filename>classDialogExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DIcon</name>
    <filename>classDIcon.html</filename>
    <base>QIcon</base>
    <member kind="function">
      <type>QPixmap</type>
      <name>pixmap</name>
      <anchorfile>classDIcon.html</anchorfile>
      <anchor>a3a6f361f26375942b0c4e759e4778b34</anchor>
      <arglist>(const QSize &amp;size, qreal devicePixelRatio, Mode mode=Normal, State state=Off)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DIconButton</name>
    <filename>classDIconButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="slot">
      <type>void</type>
      <name>setFlat</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a3536d66463fdab86d7ed86361e074092</anchor>
      <arglist>(bool flat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DIconButton</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a4b7ecb018499c41559e74d4d484b08fb</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a7b038759d1d45a329f556cc00d857973</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a8aea02b46bf40a044f8ce1cc3e778626</anchor>
      <arglist>(QStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a41c563306065adafeb63ded24c80e44f</anchor>
      <arglist>(DStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>ab7f787e8752b8d0f88c02f8aec2fc3ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFlat</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>aa2662ada83b270302e3cf18c4dca70ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewNotification</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>aa29eb954631d8d0c88fa312fcd7560c0</anchor>
      <arglist>(const bool set_new)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DIconButtonExample</name>
    <filename>classDIconButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DIconButtonPrivate</name>
    <filename>classDIconButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DImageButton</name>
    <filename>classDtk_1_1Widget_1_1DImageButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageButtonPrivate</name>
    <filename>classDImageButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageHandler</name>
    <filename>classDImageHandler.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DImageHandler</name>
    <filename>classDtk_1_1Gui_1_1DImageHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageHandlerPrivate</name>
    <filename>classDImageHandlerPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DImageViewer</name>
    <filename>classDImageViewer.html</filename>
    <base>QGraphicsView</base>
    <member kind="signal">
      <type>void</type>
      <name>imageChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ac5adf77bc60e4fa05e0dfe0528c48b75</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fileNameChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ae9f427a7f4a3f8ea2eed2cc066bb1c6e</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>scaleFactorChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a852767d919704c91452113be4f12efd1</anchor>
      <arglist>(qreal scaleFactor)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rotateAngleChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a9e16d6faaeb51162ca02c8aacc28df7a</anchor>
      <arglist>(int angle)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>transformChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a9adcd16430cf68d357543df3b37b1c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>requestPreviousImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ae92f05ec00f3fd159d0f53f6b2e79433</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>requestNextImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a47bd7ea7e2225f19350b774b15fb1194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cropImageChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a0d31ad7447de85145bae738938d9fb9e</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>adbc9948a15ea14d084ffb8ef9e1c0cf5</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>aa3203939333926e7705f7fb90139d224</anchor>
      <arglist>(const QImage &amp;image, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a9e8aedfca1e7d39ffd29dd4a96e232d3</anchor>
      <arglist>(const QString &amp;fileName, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a7f69d0ec70e9ffe922de9b710bed1bc9</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>QImage</type>
      <name>image</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ae504ac1cbe5ca720cb540f4da4b2c159</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a6d167a1a2cc7a1cb6f625da26ae72529</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a4514160d5b6e71bfebfd067b87fe7ab9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>aa5fcaca1acd5650274d3f571c12840bd</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>scaleFactor</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>acecfbd6208cd75f626392a6f495a9742</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScaleFactor</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a4893b464ce2e23a612fc28881a2b6c7a</anchor>
      <arglist>(qreal factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>af7137e46d7f4e0c69b28ec09d64110be</anchor>
      <arglist>(qreal factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autoFitImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>acaa14ce4c5e206b91c7710352c739892</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fitToWidget</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a896a3a26375b304ce29d64bd00900ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fitNormalSize</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a62bca7f91922d48987d199c9eca8c7dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateClockwise</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a108f9247ca10e0ae82445039de16d807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateCounterclockwise</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a77cfe6d6278dc4b6ec0b173ec2f72be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rotateAngle</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a1db4d3b714713570151cf585f403cc49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRotateAngle</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a6225fb828157ffcd9ba72a92c2296eff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ad9467f063385e675c8d51e2ce32c0bf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>centerOn</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a5562e20850a10a9fa5cbd27aa1468193</anchor>
      <arglist>(qreal x, qreal y)</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>visibleImageRect</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a4b5f5f1e5762ff894c735195349aa113</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>scaleAtPoint</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a56d0e89d9c4e3329499450ba11a625b5</anchor>
      <arglist>(QPoint pos, qreal factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginCropImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a8adeb14830f706c5f2a2a6236ecb6fd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endCropImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a663b36c3b49e8480bbdca4180f6e2659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCropImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a8b4d6a4b3415a5233e20006bd1eafedf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCropAspectRatio</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a7ea61df176b60bc48e4ecdecc9b595c8</anchor>
      <arglist>(qreal w, qreal h)</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>cropImageRect</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a761323a5e0197ee0459d41ef9aa7a5b1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DImageViewer</name>
    <filename>classDtk_1_1Widget_1_1DImageViewer.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageViewerPrivate</name>
    <filename>classDImageViewerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DImageViewerPrivate</name>
    <filename>classDtk_1_1Widget_1_1DImageViewerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDialog</name>
    <filename>classDInputDialog.html</filename>
    <base>DDialog</base>
    <member kind="signal">
      <type>void</type>
      <name>textValueChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ad769df7720e537b022250c5da3c4748a</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>textValueSelected</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a8801a2f0ebbbb972300b0bc029dfa88b</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>intValueChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a7dcb01a2055a92f73f28bd52ded9c8eb</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>intValueSelected</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2f8d95bd17d84bce18ebfd21da60554c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>doubleValueChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a1d7b366aa802ec2038a12cd8eb649ff7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>doubleValueSelected</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a4a459da35e84d68fc35da3161d274619</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cancelButtonClicked</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a0257002ec6e733efdfc9976d37261170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>okButtonClicked</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ace16659ee46a80bcff67f0d251a23154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>comboBoxCurrentIndexChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aa83836ad4531b505209c5fcfe0a75ead</anchor>
      <arglist>(int comboBoxCurrentIndex)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>textAlertChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a9e1403c1f28a68a4bdca359d2da5d364</anchor>
      <arglist>(bool textAlert)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DInputDialog</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a41f0769bb1b237eaeca37bccbfb9f67a</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setInputMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a84718d1b240dcd5697d1911ff32d7120</anchor>
      <arglist>(InputMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setTextValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aa6d3c6a5b30c81e4921ff4258cc6e190</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setTextEchoMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a702459e67510adea50ab6393c39510bf</anchor>
      <arglist>(QLineEdit::EchoMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setComboBoxEditable</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aae99f94b7de24c9a4f84a751025b762d</anchor>
      <arglist>(bool editable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComboBoxEditable</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a5a0e80801fed5df8855518f0c06323e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setComboBoxItems</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2fc69761a9278213b66c139be6e79e17</anchor>
      <arglist>(const QStringList &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>comboBoxItems</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a27e8971da9441fda6a37c20d9b11b74b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setComboBoxCurrentIndex</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ab1458cc918cdf17bb8e8730da6c303c3</anchor>
      <arglist>(int comboBoxCurrentIndex)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a10b8273a5cc242d11e80483ea5582b8a</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a4d2753c773ec37bcfbbac66c1ba16fbe</anchor>
      <arglist>(int min)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>af574779c3634c521ac31e44ae546bbc8</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntRange</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a525965553f46ce357993bf050fa02986</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntStep</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a8b4713eca44de101c70bbef8e447a347</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a61ff7ac9bff8bbf7e1501fa9fbe026f7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a7b6f958a36ed1714fa9cbaf0ab76d6cb</anchor>
      <arglist>(double min)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2e92d558c0f5c97da1e035538c5dba90</anchor>
      <arglist>(double max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleRange</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>acbf36dce83ea00742c6543412dd2df73</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleDecimals</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ad087eaf722f4487a1a1028cbbc010c1f</anchor>
      <arglist>(int decimals)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setOkButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ab5329f2e3b225b5996d23b2b222757b7</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setOkButtonEnabled</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>adb2842733aa295ac906e2c7304ff871c</anchor>
      <arglist>(const bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>okButtonIsEnabled</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a37d6cbac6867fde5723881a90cbc0393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setCancelButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a46dc13635044797abbabe5e782895c24</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setTextAlert</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>acb63eac5ab88b5779a40fb716f499a50</anchor>
      <arglist>(bool textAlert)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextAlert</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a02457f7495e17b481a549a6e23b3f7d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>getText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a20f55c03a0206c5e430f7125bfdbb8a3</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, QLineEdit::EchoMode echo=QLineEdit::Normal, const QString &amp;text=QString(), bool *ok=0, Qt::WindowFlags flags=0, Qt::InputMethodHints inputMethodHints=Qt::ImhNone)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>getItem</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ad4967aae2a0b8aade4884d3a3312b0ea</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, const QStringList &amp;items, int current=0, bool editable=true, bool *ok=0, Qt::WindowFlags flags=0, Qt::InputMethodHints inputMethodHints=Qt::ImhNone)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getInt</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a6b20934ad53a7621f5b96b1962d1513f</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, int value=0, int minValue=-2147483647, int maxValue=2147483647, int step=1, bool *ok=0, Qt::WindowFlags flags=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getDouble</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a6f1a1c3cd2bdfbc6cc042fa6474fd4d4</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, double value=0, double minValue=-2147483647, double maxValue=2147483647, int decimals=1, bool *ok=0, Qt::WindowFlags flags=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a26f453e1d5f83b7f06f28dd044259b72</anchor>
      <arglist>(QShowEvent *e)</arglist>
    </member>
    <member kind="property">
      <type>InputMode</type>
      <name>inputMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a979b3976777ba1ecc121e6dd67a1ca8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>textValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ac7dc0821c33ec8adaa3b1c0454c94e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a884c8f1b31c1ba76dd45c9231e2a7284</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>doubleValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a80797c2d1965485b989adf829ddda801</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QLineEdit::EchoMode</type>
      <name>textEchoMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a7adfd9a04ce831c7f1d030f337dd80f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>comboBoxEditable</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aa62d805ddb6ca08cd2fe684b28e2c2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QStringList</type>
      <name>comboBoxItems</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a429b2389094f2ebba0ff3e8fc2c42e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>comboBoxCurrentIndex</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a61f33a14adf944bf5802403680e5bbc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a41156a2fefb1790727dc93895a8cf6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ade7da6e4faebe51bdea4b8f4db5cb020</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intStep</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a61f80f8e07deeb51cb809318dff840aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>double</type>
      <name>doubleMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a9b1b5df259c209749267dba8ae12cfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>double</type>
      <name>doubleMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a9292dc8f198b3cd558d84b30415b0b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>doubleDecimals</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ae3a5fcfc08276cfe3002e0a06efb827f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>okButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a5d1e14f85c53590a13e7cdf8af2e411b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>cancelButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a86683a9254c4326adcea873d412bc8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>textAlert</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2fe552c4bc6af78fdeb9febff7dc12cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DInputDialog</name>
    <filename>classDtk_1_1Widget_1_1DInputDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDialogPrivate</name>
    <filename>classDInputDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>DIpv4LineEdit</name>
    <filename>classDIpv4LineEdit.html</filename>
    <base>QLineEdit</base>
    <member kind="slot">
      <type>void</type>
      <name>setCursorPosition</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a977b42eb0f5262513c64ee3528143f80</anchor>
      <arglist>(int cursorPosition)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setReadOnly</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>af61f77ac0b905ebc9da40a2f12690ec9</anchor>
      <arglist>(bool readOnly)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSelection</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a93fcc16a0cdc96902f6165068ce8c5e2</anchor>
      <arglist>(int start, int length)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectAll</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aa87f02ed688d7bd9d902fc94ef93257a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DIpv4LineEdit</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aa1bdce3f2644c91dad7c73b99ae28b03</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>displayText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ae23488ff0476599eb96e28094a8da934</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ae2a9cbf81b3853a37fd63c77a982ccd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ac3acc4c9cba0200625e7335485c6884a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAcceptableInput</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aaeeb40433fd41c82153a7399e495ad61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a926d3b426497e94173ee669f9280b118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>displayText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a5015c45f7e71257304aae6c86c13ca16</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aca3e0bd1d36a4bb00d3bd0415c2f2892</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a44a76cc4c8e721d83f771fa11bbb48cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>selectedText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a4d6a519104fa65a478b743d13756e419</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>acceptableInput</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ac12fdfec17b40e055adf1b8ca9ee9f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>readOnly</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a09d29b84134d86df5129313799d34a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>placeholderText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a7e4f79f8c948aa84fdb5d962bb9f5462</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>clearButtonEnabled</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a696c521b66ed4b8f163605e685f4de88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DIpv4LineEdit</name>
    <filename>classDtk_1_1Widget_1_1DIpv4LineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DIpv4LineEditExample</name>
    <filename>classDIpv4LineEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DIpv4LineEditPrivate</name>
    <filename>classDIpv4LineEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DirImageEntry</name>
    <filename>classDirImageEntry.html</filename>
    <base>ImageEntry</base>
  </compound>
  <compound kind="class">
    <name>DKeyboardMonitor</name>
    <filename>classDKeyboardMonitor.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="class">
    <name>DKeyLabel</name>
    <filename>classDKeyLabel.html</filename>
    <base>DFrame</base>
  </compound>
  <compound kind="class">
    <name>DKeySequenceEdit</name>
    <filename>classDKeySequenceEdit.html</filename>
    <base>QLineEdit</base>
    <member kind="function">
      <type></type>
      <name>DKeySequenceEdit</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>aa2731cd78f83eacc6b3ca6cf018e6850</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>ac5e9a193c460938590bd87eaec158b05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setKeySequence</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>a3f1d583885c468b23dc09ae39a74581d</anchor>
      <arglist>(const QKeySequence &amp;keySequence)</arglist>
    </member>
    <member kind="function">
      <type>QKeySequence</type>
      <name>keySequence</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>a3b5bf22efb4b5db597171d9af119658d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShortcutDirection</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>a3902f5d618d3a0b591dd0344b782da4f</anchor>
      <arglist>(Qt::AlignmentFlag alig)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getKeySequence</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>ac213cd6daff7e1670c4c66c2b86e6754</anchor>
      <arglist>(QKeySequence sequence)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DKeySequenceEditExample</name>
    <filename>classDKeySequenceEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DKeySequenceEditPrivate</name>
    <filename>classDKeySequenceEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DKeyWidget</name>
    <filename>classDKeyWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DLabel</name>
    <filename>classDLabel.html</filename>
    <base>QLabel</base>
    <member kind="function">
      <type></type>
      <name>DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>aebd85739449fc220e672188957def357</anchor>
      <arglist>(QWidget *parent=nullptr, Qt::WindowFlags f=Qt::WindowFlags())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a7e37df0447992113e4359a73196af957</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a42f69497d8e3bfc4d2da5d023743f647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundRole</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>ae346ec7bc4497e67570a1d781767d739</anchor>
      <arglist>(QPalette::ColorRole role)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundRole</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a9840bd489ac153b5e0d897d627c5f931</anchor>
      <arglist>(DPalette::ColorType color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElideMode</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a07f72f0f8c919151b3b6cbf9fbba00bd</anchor>
      <arglist>(Qt::TextElideMode elideMode)</arglist>
    </member>
    <member kind="function">
      <type>Qt::TextElideMode</type>
      <name>elideMode</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a37e9814b57c971e139170aed780a8b07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>ae1847c41881b10ec4ca2ef0622693794</anchor>
      <arglist>(DLabelPrivate &amp;dd, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initPainter</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>aeed6953db9b354e79079d1e7ee7b2b62</anchor>
      <arglist>(QPainter *painter) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a5060bb4ddf413f9fb9b43f14663883c0</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DLabel</name>
    <filename>classDtk_1_1Widget_1_1DLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>DLabelPrivate</name>
    <filename>classDLabelPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DLCDNumberExample</name>
    <filename>classDLCDNumberExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DLibFreeImage</name>
    <filename>classDLibFreeImage.html</filename>
  </compound>
  <compound kind="class">
    <name>DLineEdit</name>
    <filename>classDLineEdit.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DLineEdit</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>aa661aa34b08bca84ef7a8583cddec7c5</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a4943f717a676ec58518fe97062b1375d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>af36d555231707218d81f168e2a60d76d</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlertMessageAlignment</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a8f61255f0ca25a64471a1d5f7597501b</anchor>
      <arglist>(Qt::Alignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAlertMessage</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>acbc07e19f725f662801abc33b5a6ef03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftWidgets</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a2cd0d182f8013c377d3f6a20509a44d3</anchor>
      <arglist>(const QList&lt; QWidget * &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightWidgets</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a5830ee05be2bfdacf212e3dffc741b5e</anchor>
      <arglist>(const QList&lt; QWidget * &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftWidgetsVisible</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a01a5c8614925a3d8752a98094eb41fd2</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightWidgetsVisible</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a1161ffbb92a1cf776d58a780674968a1</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClearButtonEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ac3317a78798534ac644f556f6cf5ba00</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClearButtonEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a0d800b8ca598dbdb14864ee3e4b08f4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a6036abbc33a908907499780173086f88</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>text</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>af888c2aea961ca10da95a3b4d27a9f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ae83af2a9df031205af1643ff94dfb033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit::EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ada9469dda250396d22645fac55e4e8e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a075ce0174b4deaebedde2e1986709abf</anchor>
      <arglist>(QLineEdit::EchoMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContextMenuPolicy</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a1cbeabc4abbafa69e456313dbf30c1a7</anchor>
      <arglist>(Qt::ContextMenuPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>speechToTextIsEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a35b6cd2b01855df6aa4f5cf5420c6249</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeechToTextEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a207a440f3c5c644d63154fbe0e410655</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToSpeechIsEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>afead7a51be0ca44449d8472424a76e4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToSpeechEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a153666a079ff70d0dba9a647352baa8d</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToTranslateIsEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ac16848a137c4699c5ece203940f9c528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToTranslateEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a1e62f8dc7a8acd1da88b5620cd50f609</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copyEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a53299af75ae1429adb396277d09162ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCopyEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>af3fe85e01d6be2afc6e260d02125b338</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cutEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a63d415acd3fbe55919f20931675541eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCutEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a843154136c3cf7fd206098422d41eb19</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>aa853c3d36da7655ec69650fa9a077226</anchor>
      <arglist>(QObject *watched, QEvent *event) override</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>alert</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a739e6d05e4bd65ff9854def89d9c9960</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DLineEdit</name>
    <filename>classDtk_1_1Widget_1_1DLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DLineEditExample</name>
    <filename>classDLineEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DFileDialog::DLineEditOptions</name>
    <filename>structDFileDialog_1_1DLineEditOptions.html</filename>
  </compound>
  <compound kind="class">
    <name>DLineEditPrivate</name>
    <filename>classDLineEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DListView</name>
    <filename>classDListView.html</filename>
    <base>QListView</base>
    <member kind="function">
      <type>bool</type>
      <name>isActiveRect</name>
      <anchorfile>classDListView.html</anchorfile>
      <anchor>ac7562ca28b793119dc60d3195c533fbb</anchor>
      <arglist>(const QRect &amp;rect) const</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDListView.html</anchorfile>
      <anchor>a0ce3f8f6a083ddbf6c3bd45d81f453e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Qt::Orientation</type>
      <name>orientation</name>
      <anchorfile>classDListView.html</anchorfile>
      <anchor>a45891f6bd9e2512afca43083240891b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DListViewExample</name>
    <filename>classDListViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DListViewPrivate</name>
    <filename>classDListViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoadingIndicator</name>
    <filename>classDLoadingIndicator.html</filename>
    <base>QGraphicsView</base>
    <member kind="enumeration">
      <type></type>
      <name>RotationDirection</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cbab7af88b64e8a3aac305924491b1d4e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Counterclockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cba655b8bc509d407f52e33b64bf20585e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cbab7af88b64e8a3aac305924491b1d4e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Counterclockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cba655b8bc509d407f52e33b64bf20585e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a3c3b86d9e0a09d35eb6eadb16bb5ac52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>acce3d2bd2dd286b71e404408c94bcd5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAniEasingCurve</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a5dfeec7aed72bace6671b3812e65cb3d</anchor>
      <arglist>(const QEasingCurve &amp;easing)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DLoadingIndicator</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>adb5066aa85224301df325766c38dce0e</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>RotationDirection</type>
      <name>direction</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a36ed27b12abf63e5d08bcd9f2a35b042</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>backgroundColor</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>af26a442d8aa04c44f9c8cca029f3d254</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>loading</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a95e38e9633fed1a4c0a39587a3d77666</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>smooth</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a12d514bc6d4dc260a2149211f2cb3493</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPixmap</type>
      <name>imageSource</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>ae117367f775533a5c6be22ebd0ec7dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>widgetSource</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a37a3a4ad2f52924a1ca3897b7c31dc45</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>aniDuration</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a815545b1eb658674b6f8f6ce46f6aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QEasingCurve::Type</type>
      <name>aniEasingType</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a593fda6f6627ea26b3d127733a7f65a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>RotationDirection</type>
      <name>direction</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a0d1164dbf393fb920ff49b49d4a0711d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>qreal</type>
      <name>rotate</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>aac9fdb1b3d1711d96e594d017b0fb81b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DLoadingIndicator</name>
    <filename>classDtk_1_1Widget_1_1DLoadingIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoadingIndicatorPrivate</name>
    <filename>classDLoadingIndicatorPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DLogManager</name>
    <filename>classDtk_1_1Core_1_1DLogManager.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerConsoleAppender</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a75eaa3fb937257500a338b93265f175e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerFileAppender</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a7dd9d18d92668bc6003431156b681050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>getlogFilePath</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>ab8f63169474d6356514b8138970f6a51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setlogFilePath</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a17cce4af36f998bc8b496843cfb9c37f</anchor>
      <arglist>(const QString &amp;logFilePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLogFormat</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a3c54be6fb5294f3bf386d5a06affa2ff</anchor>
      <arglist>(const QString &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DMainWindow</name>
    <filename>classDMainWindow.html</filename>
    <base>QMainWindow</base>
    <member kind="slot">
      <type>void</type>
      <name>setWindowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>abf2ae1508316883197121706c5fe39ae</anchor>
      <arglist>(int windowRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBorderWidth</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a0712e2cf9d495f81c59301663eaec59c</anchor>
      <arglist>(int borderWidth)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBorderColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a230949e3277fae04479aec0428ce6665</anchor>
      <arglist>(const QColor &amp;borderColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a0c0907a9acfca0908a173a86aac65d11</anchor>
      <arglist>(int shadowRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowOffset</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a7f73f69fe03da09397a3d98819ad45a6</anchor>
      <arglist>(const QPoint &amp;shadowOffset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a9c3e19749a495817783a1483fad2971a</anchor>
      <arglist>(const QColor &amp;shadowColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ab8e2db8d009aa5d5f97cfc1ed70b2cf7</anchor>
      <arglist>(const QPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFrameMask</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a3590e416fff6e4c010160f1cf4d16b84</anchor>
      <arglist>(const QRegion &amp;frameMask)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTranslucentBackground</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a74a710fd50a442018121163893df5ce5</anchor>
      <arglist>(bool translucentBackground)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableSystemResize</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ab8907a4fa6be21ff4ff6d651bae6505c</anchor>
      <arglist>(bool enableSystemResize)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableSystemMove</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a8e6d7a86d0ef3d4d1a30247a8ef95055</anchor>
      <arglist>(bool enableSystemMove)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableBlurWindow</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>aab5f93bf6b82f8c94b9998e1f3cfd4fe</anchor>
      <arglist>(bool enableBlurWindow)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAutoInputMaskByClipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a72dd82a366ee55bdbfca6a514850bf09</anchor>
      <arglist>(bool autoInputMaskByClipPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a1db4e2018cb41379bc3f80fd9eb45404</anchor>
      <arglist>(const QIcon &amp;icon, const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ac25bfa06f4093be05039e4e08de318b9</anchor>
      <arglist>(DFloatingMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>DTitlebar *</type>
      <name>titlebar</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ad44b053369899c3238e33a4576402792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDXcbWindow</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a00418b7294d1df29fe69e16abea8308f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a7b84f8abf32d7b9527379a870999dafa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>windowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a067eae241a20649bed297afc5345ce91</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>borderWidth</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ad160a625393e3dbf1b8961dfa9088b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>borderColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a23d9d6813f59b946606f8c619d2c2d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>shadowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>af5a6202786a7c85e4d1990f08e75e014</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPoint</type>
      <name>shadowOffset</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ace2018c032f2b80610afdb4dd3278ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>shadowColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a2f044b842bed98b1ba5179a8cb764c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a487dd0c87b79b3b029f007287a513bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QRegion</type>
      <name>frameMask</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a61231ad182b760b7cad1cdcbbbcacf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>translucentBackground</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a2ac18d7653ccb5216261278028134464</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ac48e78de67085875f571705ad58f240a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemMove</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a815d4adc9b48388859d9a2844c01d3ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableBlurWindow</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a80057bf094f82325427595015d8aca54</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoInputMaskByClipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>aac3ed8de931e3b5ee504185638283ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>titlebarShadowEnabled</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a54fb033c470dfda352731f7fd2090e60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DMainWindow</name>
    <filename>classDtk_1_1Widget_1_1DMainWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>DMainWindowExample</name>
    <filename>classDMainWindowExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DMainWindowPrivate</name>
    <filename>classDMainWindowPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DMenuExample</name>
    <filename>classDMenuExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DMessageManager</name>
    <filename>classDMessageManager.html</filename>
    <base>QObject</base>
    <base>QObject</base>
    <member kind="function">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a741a1b2ed704a7dc0c517caa4d4019e9</anchor>
      <arglist>(QWidget *par, DFloatingMessage *floMsg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a9810d61f821eb880e48e6e0eb3ffa0ee</anchor>
      <arglist>(QWidget *par, const QIcon &amp;icon, const QString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setContentMargens</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>ab7c1295f3e92ef7b3fad204f3b843ecd</anchor>
      <arglist>(QWidget *par, const QMargins &amp;margins)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DMessageManager *</type>
      <name>instance</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a73e4a26ac05586b5b46c7c92e4c69c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a7e72fe455cfb7dfc16243b799923b410</anchor>
      <arglist>(QObject *watched, QEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DMessageManagerExample</name>
    <filename>classDMessageManagerExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DMovableTabWidget</name>
    <filename>classDMovableTabWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DMPRISControl</name>
    <filename>classDMPRISControl.html</filename>
    <base>QFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>setPictureVisible</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>ae2c46ff8a4850b165592c49ff49deff8</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPictureSize</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>acd7e099807a63e0c8bc8844c42e7124b</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mprisAcquired</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>af77f2832d327bd9508205e60684c3dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mprisChanged</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>a84800472cb873b33c42b6b97aaa780d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mprisLosted</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>a60a940f4772a055914cb664178b0db05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DMPRISControl</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>a0abe40115893d379d27c458399b50f64</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWorking</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>ae5ee6e6372a85deb563a96f19c564fb2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DMPRISControl</name>
    <filename>classDtk_1_1Widget_1_1DMPRISControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DMPRISControlPrivate</name>
    <filename>classDMPRISControlPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DMPRISMonitor</name>
    <filename>classDMPRISMonitor.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DNativeSettings</name>
    <filename>classDNativeSettings.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DNativeSettings</name>
    <filename>classDtk_1_1Gui_1_1DNativeSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>DNativeSettingsPrivate</name>
    <filename>classDNativeSettingsPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DUtil::DNotifyData</name>
    <filename>structDtk_1_1Core_1_1DUtil_1_1DNotifyData.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DNotifySender</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DNotifySender.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DObject</name>
    <filename>classDtk_1_1Core_1_1DObject.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>DObject</name>
      <anchorfile>classDtk_1_1Core_1_1DObject.html</anchorfile>
      <anchor>adbed6e66a1393a6045fb24e50300db7f</anchor>
      <arglist>(DObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DObject</name>
      <anchorfile>classDtk_1_1Core_1_1DObject.html</anchorfile>
      <anchor>a64d70b82c64f7d7e71d4775854b25206</anchor>
      <arglist>(DObjectPrivate &amp;dd, DObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DObjectPrivate</name>
    <filename>classDtk_1_1Core_1_1DObjectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPageIndicator</name>
    <filename>classDPageIndicator.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DPageIndicator</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ab7789c5054c56825e3ca03c8bc733986</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextPage</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ac27ef14a647f3ab4fd1391935e1c8fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>previousPage</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>a3c74435bd07d3f9c3e08bc539b68b91a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>pointColor</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>aced54d81378553e6fc6aafebf12c5fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>secondaryPointColor</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ab9448c5dadf2b830045631a71841fb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>pointRadius</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>acb95b8213a45fa8b12bdc3e77b5d7985</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>secondaryPointRadius</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ae57a83a0537deaeed5627dbdc2658ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>pageCount</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>a670e0e75b766fe9ee46d2788da8f0ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>currentPage</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ae490c57259aef4492790710ececef20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>pointDistance</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>a71e362918ee4aa2bffcdd5cfe930fd0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPageIndicator</name>
    <filename>classDtk_1_1Widget_1_1DPageIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>DPageIndicatorPrivate</name>
    <filename>classDPageIndicatorPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPalette</name>
    <filename>classDPalette.html</filename>
    <base>QPalette</base>
    <member kind="function">
      <type></type>
      <name>DPalette</name>
      <anchorfile>classDPalette.html</anchorfile>
      <anchor>aba3c56adaa86d09a5f6f0a6a2c437b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPalette</name>
      <anchorfile>classDPalette.html</anchorfile>
      <anchor>a7b22752fd3734d2572fe6bacdd7032b1</anchor>
      <arglist>(const QPalette &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPalette</name>
      <anchorfile>classDPalette.html</anchorfile>
      <anchor>aaf09fcdbb77242a8438a447cfc79897a</anchor>
      <arglist>(const DPalette &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>const QBrush &amp;</type>
      <name>brush</name>
      <anchorfile>classDPalette.html</anchorfile>
      <anchor>ac281cd92c2cb603716846abebc086d3d</anchor>
      <arglist>(ColorGroup cg, ColorType ct) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBrush</name>
      <anchorfile>classDPalette.html</anchorfile>
      <anchor>aa00475f6596a5edd35cdced6f27a20e9</anchor>
      <arglist>(ColorGroup cg, ColorType ct, const QBrush &amp;brush)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPalette</name>
    <filename>classDtk_1_1Gui_1_1DPalette.html</filename>
  </compound>
  <compound kind="struct">
    <name>DPaletteData</name>
    <filename>structDPaletteData.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DPaletteHelper</name>
    <filename>classDPaletteHelper.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>DPalette</type>
      <name>palette</name>
      <anchorfile>classDPaletteHelper.html</anchorfile>
      <anchor>ae66bb4e8c61643a57596cd9fd81cd925</anchor>
      <arglist>(const QWidget *widget, const QPalette &amp;base=QPalette()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPalette</name>
      <anchorfile>classDPaletteHelper.html</anchorfile>
      <anchor>a5a016ba82cc6031c62bb3ebda2eabcf7</anchor>
      <arglist>(QWidget *widget, const DPalette &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPalette</name>
      <anchorfile>classDPaletteHelper.html</anchorfile>
      <anchor>a3be37722bf585dd680492dd741ca64ed</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPaletteHelperPrivate</name>
    <filename>classDPaletteHelperPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPalettePrivate</name>
    <filename>classDPalettePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPasswordEdit</name>
    <filename>classDPasswordEdit.html</filename>
    <base>DLineEdit</base>
    <member kind="function">
      <type></type>
      <name>DPasswordEdit</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>a39f19102a490d338fa09a34c35d4a9d0</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>a434d1cf3d55b7cec0cecd0adc8361429</anchor>
      <arglist>(QLineEdit::EchoMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoButtonIsVisible</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>adc2d87502e2e579c74a0444cbc2b6785</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>echoButtonIsVisible</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>ab6ab508599c16d97dffad5699869458e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>isEchoMode</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>a71cb87707ffbb69109000c0ada23bb82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPasswordEdit</name>
    <filename>classDtk_1_1Widget_1_1DPasswordEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DPasswordEditExample</name>
    <filename>classDPasswordEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DPasswordEditPrivate</name>
    <filename>classDPasswordEditPrivate.html</filename>
    <base protection="private">DLineEditPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DPathBuf</name>
    <filename>classDtk_1_1Core_1_1DPathBuf.html</filename>
    <member kind="function">
      <type></type>
      <name>DPathBuf</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a2831dcece57d0f40cce47357424cc28a</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf</type>
      <name>operator/</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a90c38df84bf0462a68fd457343715b06</anchor>
      <arglist>(const QString &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf &amp;</type>
      <name>operator/=</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a7253a93ab4d85fdffb093ef21b4d4905</anchor>
      <arglist>(const QString &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf</type>
      <name>operator/</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a04d2fba12191b534d1ca64f127997ca8</anchor>
      <arglist>(const char *p) const</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf &amp;</type>
      <name>operator/=</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a0de456a569c07afe3279f1f94901e548</anchor>
      <arglist>(const char *p)</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf &amp;</type>
      <name>join</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>afc3fa93c57c3facf6a95cdc9a105482b</anchor>
      <arglist>(const QString &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a8d6940c803d60d057cb19c96b394d3c8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPictureSequenceView</name>
    <filename>classDPictureSequenceView.html</filename>
    <base>QGraphicsView</base>
    <member kind="function">
      <type>void</type>
      <name>setPictureSequence</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>ac09371d53773cc9549b19679c5c30a7c</anchor>
      <arglist>(const QString &amp;srcFormat, const QPair&lt; int, int &gt; &amp;range, const int fieldWidth=0, const bool autoScale=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPictureSequence</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a4b7eed20ff312055c10a34488ad559ac</anchor>
      <arglist>(const QStringList &amp;sequence, const bool autoScale=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPictureSequence</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a74710a3f0ce4340d25b3ce112d9c79d8</anchor>
      <arglist>(const QList&lt; QPixmap &gt; &amp;sequence, const bool autoScale=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a082b32064e2d9ab7338ab81719a2e5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a941ba22e8cfe8e244d968fb2072480c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a6c15729f5945847877a64d85106144a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>speed</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>afd120fee5eafa1956d792656c0c539d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>singleShot</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a12799ee97717f19179a82a8eb10d7aa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPictureSequenceView</name>
    <filename>classDtk_1_1Widget_1_1DPictureSequenceView.html</filename>
  </compound>
  <compound kind="class">
    <name>DPictureSequenceViewPrivate</name>
    <filename>classDPictureSequenceViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformHandle</name>
    <filename>classDPlatformHandle.html</filename>
    <base>QObject</base>
    <class kind="struct">DPlatformHandle::WMBlurArea</class>
    <member kind="signal">
      <type>void</type>
      <name>frameMarginsChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a845dbc8d40ab70865b6a7731f1a6d6c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowRadiusChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>ab1e032a9f8338658f182430c202f92ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>borderWidthChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a825bb81c64c1460194826b2a183671bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>borderColorChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9dd80b510a674b98c53e4a149e0d7a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>shadowRadiusChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>ab158aab5564de25bf3e87b2bcf941480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>shadowOffsetChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>af6518f63f4dbbb859f07f425e9c34c7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>shadowColorChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a180aba3d23acdd3ef8f41fad519c4a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>clipPathChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a5235efca4c5c9c3a6ead078788d30d9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>frameMaskChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a8dd52ef16e924b1399a2d26161d2eb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>translucentBackgroundChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a88bdb8289e83ba74189a4b3376d5420a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enableSystemResizeChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a2865e19535533fc41a09290e1da0fb2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enableSystemMoveChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a867185aced745da4b6d2b2b7e0213060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enableBlurWindowChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aeb76d667f43f22b999a385a069307f9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autoInputMaskByClipPathChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a52a54995c7d015714916fa95e8bce9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPlatformHandle</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a14b80834f809255088d7ec212352bf7f</anchor>
      <arglist>(QWindow *window, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a363a1c10ff4cf65a99ab2ad2190d7aa1</anchor>
      <arglist>(const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9cd159ce97aba6625f8c0bba202a5030</anchor>
      <arglist>(const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>pluginVersion</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a554ca579eadef8661ba9137841d43145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDXcbPlatform</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a35f657dbe43e39173d3273c606a90e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>af3b721488a8806b2c9c1234f1502a938</anchor>
      <arglist>(QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9e9d88df1f55fbe4719437e442a2a70f</anchor>
      <arglist>(QWindow *window, bool redirectContent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEnabledDXcb</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>adf6e1f96fe6c171bff4df8b8122bacca</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setEnabledNoTitlebarForWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>adc29447f924d81d9a2920f67f6eb44b0</anchor>
      <arglist>(QWindow *window, bool enable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEnabledNoTitlebar</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>ac9a2fc45da432972e4c484c285701f68</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a12799d43fdde33892ed039d56bb0cd9e</anchor>
      <arglist>(QWindow *window, const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a583f28cc2ab7f9054c158b66ea4dec0c</anchor>
      <arglist>(QWindow *window, const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowWallpaperParaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a75bdab76f6827c87997e1adce95eaafc</anchor>
      <arglist>(QWindow *window, const QRect &amp;area, WallpaperScaleMode sMode, WallpaperFillMode fMode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>connectWindowManagerChangedSignal</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aa1109073d6261e00664235db0beda245</anchor>
      <arglist>(QObject *object, std::function&lt; void()&gt; slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>connectHasBlurWindowChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a25b9adb9a27f49e5cbb90041cb69e518</anchor>
      <arglist>(QObject *object, std::function&lt; void()&gt; slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDisableWindowOverrideCursor</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6bc5638992be7c42f2a2b9d0a25c71b4</anchor>
      <arglist>(QWindow *window, bool disable)</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>windowRadius</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6d0904a0b267e9d34635ccc31eb196bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>borderWidth</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9562072e251825f5307f256e707c6f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>borderColor</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a3ccd7beb3a23ebcd17bf51aa680fd7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>shadowRadius</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>afeea74766ff390d26d6a6f3ff44c9170</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPoint</type>
      <name>shadowOffset</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aab3f6cbcc69fe9a3046918384a33fa63</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>shadowColor</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a2798b07e7b02a25e311f0e679227ee29</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a1e93560464a6e1683dced96ba886cbdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QRegion</type>
      <name>frameMask</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a35a29cfc9048abd255d78be4b576e585</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QMargins</type>
      <name>frameMargins</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aa3be0a553c8620caed45a55014f6ffa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>translucentBackground</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a10d0602fb432db6ec94dd65ea19898d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a21e084c76bd05c1cad9eb0b0fce22a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemMove</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a3b3e9667c10a30bd5c6e39d57c01e7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableBlurWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6c07df44e93a692fcd1bcbd827344ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoInputMaskByClipPath</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6bb9133c8732f5f27c6167e8c2a5a170</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>WId</type>
      <name>realWindowId</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a84106ee177acd75c90901d81747776e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPlatformHandle</name>
    <filename>classDtk_1_1Gui_1_1DPlatformHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformTheme</name>
    <filename>classDPlatformTheme.html</filename>
    <base>DNativeSettings</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPlatformTheme</name>
    <filename>classDtk_1_1Gui_1_1DPlatformTheme.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformThemePrivate</name>
    <filename>classDPlatformThemePrivate.html</filename>
    <base>DNativeSettingsPrivate</base>
  </compound>
  <compound kind="class">
    <name>DPlatformWindowHandle</name>
    <filename>classDPlatformWindowHandle.html</filename>
    <base>DPlatformHandle</base>
    <member kind="function">
      <type></type>
      <name>DPlatformWindowHandle</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a0b0851a3935f0ad09c03156f1ec85ff2</anchor>
      <arglist>(QWidget *widget, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a363a1c10ff4cf65a99ab2ad2190d7aa1</anchor>
      <arglist>(const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a9cd159ce97aba6625f8c0bba202a5030</anchor>
      <arglist>(const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>adf7c61cf1f4fbe2bcb029142ecf4c633</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>af891bfd4fccf35434160d9360404b718</anchor>
      <arglist>(QWidget *widget, bool redirectContent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEnabledDXcb</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a39dc22cf756d9158512151c974891d7d</anchor>
      <arglist>(const QWidget *widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a012ce27978d089f2ab821355dde12777</anchor>
      <arglist>(QWidget *widget, const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a1282227032ddaf195b27bf3e974de9e7</anchor>
      <arglist>(QWidget *widget, const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowWallpaperParaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>add1f8ab398fe66c7313551612ef0c78b</anchor>
      <arglist>(QWidget *widget, const QRect &amp;area, WallpaperScaleMode sMode, WallpaperFillMode fMode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a12799d43fdde33892ed039d56bb0cd9e</anchor>
      <arglist>(QWindow *window, const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a583f28cc2ab7f9054c158b66ea4dec0c</anchor>
      <arglist>(QWindow *window, const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowWallpaperParaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a75bdab76f6827c87997e1adce95eaafc</anchor>
      <arglist>(QWindow *window, const QRect &amp;area, WallpaperScaleMode sMode, WallpaperFillMode fMode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPlatformWindowHandle</name>
    <filename>classDtk_1_1Widget_1_1DPlatformWindowHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrinter</name>
    <filename>classDPrinter.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPickColorWidget</name>
    <filename>classDPrintPickColorWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>slotColorPick</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>abe1b67ceb7f4bc594b2bc47f9fcd679f</anchor>
      <arglist>(QString uuid, QString colorName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>slotEditColor</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>a4009fd852aa097c8e6f193351818b9aa</anchor>
      <arglist>(QString str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRgbEdit</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>a4b06f128f82fa3b03ee56b0e3e2830d1</anchor>
      <arglist>(QColor color, bool btnColor=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertColor</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>a5e3f35c853dd24d1412c990d365f1b4f</anchor>
      <arglist>(QColor color, bool btnColor=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewColorModeInfo</name>
    <filename>classDPrintPreviewColorModeInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewCopiesInfo</name>
    <filename>classDPrintPreviewCopiesInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewDialog</name>
    <filename>classDPrintPreviewDialog.html</filename>
    <base>DDialog</base>
    <member kind="function">
      <type>void</type>
      <name>setDocName</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>a56b79cb43f7c88d3bfe8b98568916881</anchor>
      <arglist>(const QString &amp;)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>docName</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>ad6d240ee580cfdb4d55b60c2799a568f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPrintFromPath</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>a5ebe66a2f5ae6848b203a0abfaf29649</anchor>
      <arglist>(const QString &amp;path=QString())</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>printFromPath</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>a70c4399f381a24133c590a40d156529e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeEvent</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>ab52fb6ffad897736ae465fb0638cf547</anchor>
      <arglist>(QResizeEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPrintPreviewDialog</name>
    <filename>classDtk_1_1Widget_1_1DPrintPreviewDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewDialogPrivate</name>
    <filename>classDPrintPreviewDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
    <member kind="function">
      <type>void</type>
      <name>initWaterSettings</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a7b3dd8b06f40cc3aed37893dbd4a1270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupPrinter</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a148f5d296f1d6bf68942aad1100bc6ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMininumMargins</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a46e8004f25ff988ee3b02c8aa2470588</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>marginsUpdate</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a55a5dd740280c2d0a75673f5ed4c8324</anchor>
      <arglist>(bool isPrinterChanged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustMargins</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a1d8f120e99a96965197ba7c340896f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageIsLegal</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a78e16dbcb6fb59c9303da31f57a799ab</anchor>
      <arglist>(bool islegal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnable</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5a37e479cfe244dc5bca7c4429b14fab</anchor>
      <arglist>(const int &amp;value, DComboBox *combox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTurnPageBtnStatus</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a572569a00c3d207df6cfbffd46012799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>watermarkTypeChoosed</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5b0933eaa93c0060a1ec68b384814128</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>customPictureWatermarkChoosed</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a4ce835450d27a5c42f16999efad8c712</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waterMarkBtnClicked</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a712a3d074130cc588d0d518583a29b65</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disablePrintSettings</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>aba6a81fa3aa6cabd4ea41792e6dc4432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageLayoutEnable</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a271afddc6d7c0717c31ecbf58c0182d8</anchor>
      <arglist>(const bool &amp;checked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_printerChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a9141fcdfa86a054c19f5f1947fc6b840</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_pageRangeChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a90ba33367891b724b395d2588095af3f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_pageMarginChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a044f201cf07920ad72ad1a17f731549a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_ColorModeChange</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a557713714d53fd8ffb25001c8765b9ec</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_startPrint</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a641430fc2e3c3e99b8d2d65a9eb2a7f3</anchor>
      <arglist>(bool clicked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_orientationChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a8a3cafc9232eda7e57e93e9f11451c7c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_customPagesFinished</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a6e6f567e7d78f79edec751d215ab6b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_marginspinChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>afa97d50e20677625088fc0a9964b0147</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_marginEditFinished</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5c4c0344dc6d3afc5705633cca11f12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_currentPageSpinChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a34c686d1faa7367db0e98abe130b8289</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_checkStateChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a7a361695d993f0938fd6f14f7ae77739</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_textWaterMarkModeChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>ad1a70f3cbce4a29d57e1c927cdee807a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_customTextWatermarkFinished</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a6fe4a66f1b028023eac19e4c25a50641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_colorButtonCliked</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>aab2c6194327eca58c16996b05414026a</anchor>
      <arglist>(bool cliked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_selectColorButton</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>adb3af75093628f4ef6316ec335b0f426</anchor>
      <arglist>(QColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_pagePersheetComboIndexChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a78dcda494e789afe311a7e4932374379</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_printOrderComboIndexChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5830fa02126991e445bdd8384b39d004</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewNUpPrintInfo</name>
    <filename>classDPrintPreviewNUpPrintInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewOrientationInfo</name>
    <filename>classDPrintPreviewOrientationInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPageOrderInfo</name>
    <filename>classDPrintPreviewPageOrderInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPageRangeInfo</name>
    <filename>classDPrintPreviewPageRangeInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPaperMarginsInfo</name>
    <filename>classDPrintPreviewPaperMarginsInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPaperSizeInfo</name>
    <filename>classDPrintPreviewPaperSizeInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPrintDuplexInfo</name>
    <filename>classDPrintPreviewPrintDuplexInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPrinterInfo</name>
    <filename>classDPrintPreviewPrinterInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewScalingInfo</name>
    <filename>classDPrintPreviewScalingInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewSettingInfo</name>
    <filename>classDPrintPreviewSettingInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewSettingInterface</name>
    <filename>classDPrintPreviewSettingInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWatermarkInfo</name>
    <filename>classDPrintPreviewWatermarkInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWidget</name>
    <filename>classDPrintPreviewWidget.html</filename>
    <base>DFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>updatePreview</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a5e26e80ae7c54589a06fbb55bbc132f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnFront</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a858a1d70ef3974c2a4cb0ebb36f75992</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnBack</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a421b7e008d9b328298747ce9ff46e5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnBegin</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a7d61a6fdec4d29a5105c0d2bb5e53d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnEnd</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a82337fe3c174ef97b059972ebf261bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentPage</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae2202b074481ebb1c2eaaab42c5fd827</anchor>
      <arglist>(int page)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPrintPreviewWidget</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a1aeff62f6660758f781bb05a829a9f12</anchor>
      <arglist>(DPrinter *printer, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ada0f65fd4d07738d0a7f6f37df73f001</anchor>
      <arglist>(bool visible) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRange</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a70ffe4ae7f77b6bc1cce1e0098d48776</anchor>
      <arglist>(const QVector&lt; int &gt; &amp;rangePages)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRange</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>adcc85972a71a1d15f4d90d208f8e78f0</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRangeALL</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ad23f9700f7049e90ea3942ef483b6207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED void</type>
      <name>setReGenerate</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af00e2aa0c2da81660aa610cbd6f2c2f8</anchor>
      <arglist>(bool generate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRangeMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a711b9921c9fa3d5367da02c3a2d373d9</anchor>
      <arglist>(PageRange mode)</arglist>
    </member>
    <member kind="function">
      <type>PageRange</type>
      <name>pageRangeMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a437049d8af98767c31a91015576a8161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reviewChange</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af8f22dc98c1de5d92045862437d9bfd7</anchor>
      <arglist>(bool generate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pagesCount</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>aca8dfb2b9c4f7728e7ea4b0754bfca41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentPage</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>aa267dddaf5b75d52b29299a82e3a1e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>turnPageAble</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae4cf4f66641ab39bd50da2c2a387ceee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a3e3c6efe061e82c9aa3f120f813566e4</anchor>
      <arglist>(const DPrinter::ColorMode &amp;colorMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae99f61c5fef5230aee8e11076874f4ac</anchor>
      <arglist>(const DPrinter::Orientation &amp;pageOrientation)</arglist>
    </member>
    <member kind="function">
      <type>DPrinter::ColorMode</type>
      <name>getColorMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a635b3c1cf5df7ac60cc55683e9c0f573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a5d65c3c75a67d2fa30d31b62710bd1c0</anchor>
      <arglist>(qreal scale)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>getScale</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a410b8d852d0ddb7b18174e652e40a0cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateView</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a500ddb803d83a98247abdf7036c1efa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ab5fb27954ee0aedb42db47c2c636043b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshBegin</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a06e065126db8aae0e23cb4259902f51f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshEnd</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>aa8e2fc3273eaf228e0df4d67d1a0a854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkType</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a9c3f51275eadf67e739e1c8931c7dfc7</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMargImage</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a290520210ea29ac56babe235ffb392cb</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkRotate</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a8e3977e4c9a6f876bc1e392fcbd98e3d</anchor>
      <arglist>(qreal rotate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkScale</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>afa0fc9b8f8d7deb30e98a9f08e1fd46b</anchor>
      <arglist>(qreal scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkOpacity</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a44b8641937f6e34db5e7d159e5750e63</anchor>
      <arglist>(qreal opacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfidentialWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae78e798085db4ff1f7241387395ddfaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDraftWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>adaded194b56ec7f14890b394457fcbd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a5f90236a3c62a5b6b6b0da98bfd8dcbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>abf90138f101289b558a89606eb4e1e44</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a023417244ae609b825d12ca8b756d83b</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkFont</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>adc9ac7e7f128001be2b07d8de6555c96</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>waterMarkColor</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a3bc603d14afe12685fcbc21a6e73065d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkColor</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af49e10a29ccaad26a923ebdc00745185</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkLayout</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af15081ad88275ab16352ea72e671eb38</anchor>
      <arglist>(int layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImposition</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a46d8e09c7e088913e68eb9cefae75762</anchor>
      <arglist>(Imposition im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrder</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a45f92d42bf68a57fd67213cfe535d3e3</anchor>
      <arglist>(Order order)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPrintPreviewWidget</name>
    <filename>classDtk_1_1Widget_1_1DPrintPreviewWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWidgetPrivate</name>
    <filename>classDPrintPreviewWidgetPrivate.html</filename>
    <base>DFramePrivate</base>
    <class kind="struct">DPrintPreviewWidgetPrivate::NumberUpData</class>
  </compound>
  <compound kind="class">
    <name>DProgressBar</name>
    <filename>classDProgressBar.html</filename>
    <base>QProgressBar</base>
  </compound>
  <compound kind="class">
    <name>DProgressBarExample</name>
    <filename>classDProgressBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DPushButtonExample</name>
    <filename>classDPushButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DRadioButtonExample</name>
    <filename>classDRadioButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DraggableLabel</name>
    <filename>classDraggableLabel.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DRecentData</name>
    <filename>structDtk_1_1Core_1_1DRecentData.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DRecentManager</name>
    <filename>classDtk_1_1Core_1_1DRecentManager.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>addItem</name>
      <anchorfile>classDtk_1_1Core_1_1DRecentManager.html</anchorfile>
      <anchor>aa4e6bd89ef90e295d639fc84da7f90ce</anchor>
      <arglist>(const QString &amp;uri, DRecentData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeItem</name>
      <anchorfile>classDtk_1_1Core_1_1DRecentManager.html</anchorfile>
      <anchor>a7c098847b5e6c1c641883db9941c89e5</anchor>
      <arglist>(const QString &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeItems</name>
      <anchorfile>classDtk_1_1Core_1_1DRecentManager.html</anchorfile>
      <anchor>a9c799534ed4b30676ee9784d7f937353</anchor>
      <arglist>(const QStringList &amp;list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DRegionMonitor</name>
    <filename>classDRegionMonitor.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>RegisterdFlag</name>
      <anchorfile>classDRegionMonitor.html</anchorfile>
      <anchor>a2e35e5e9f947f316134b18935db633d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>RegisterdFlags</type>
      <name>registerdFlags</name>
      <anchorfile>classDRegionMonitor.html</anchorfile>
      <anchor>aa3084dcc78422a63ab35b89394a02e57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DRegionMonitor</name>
    <filename>classDtk_1_1Gui_1_1DRegionMonitor.html</filename>
  </compound>
  <compound kind="class">
    <name>DRegionMonitorPrivate</name>
    <filename>classDRegionMonitorPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DropArea</name>
    <filename>classDropArea.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>DRubberBandExample</name>
    <filename>classDRubberBandExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DtkCorePrivate::DSafeQueue</name>
    <filename>classDtk_1_1Core_1_1DtkCorePrivate_1_1DSafeQueue.html</filename>
    <templarg></templarg>
    <base>QQueue&lt; T &gt;</base>
  </compound>
  <compound kind="class">
    <name>DScrollBarExample</name>
    <filename>classDScrollBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSearchComboBox</name>
    <filename>classDSearchComboBox.html</filename>
    <base>DComboBox</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showPopup</name>
      <anchorfile>classDSearchComboBox.html</anchorfile>
      <anchor>ab43d5012a6dfc4fe09b25d404ff3c2fb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSearchComboBox</name>
    <filename>classDtk_1_1Widget_1_1DSearchComboBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DSearchComboBoxExample</name>
    <filename>classDSearchComboBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSearchComboBoxPrivate</name>
    <filename>classDSearchComboBoxPrivate.html</filename>
    <base>DComboBoxPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSearchEdit</name>
    <filename>classDSearchEdit.html</filename>
    <base>DLineEdit</base>
    <member kind="function">
      <type></type>
      <name>DSearchEdit</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a7061bf4acc92e85427080ce64bc3a8b0</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaceHolder</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a6582ab9dbcb452a21a0776d865b104c0</anchor>
      <arglist>(QString placeHolder)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>placeHolder</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a890d86b60db8349cc9c46116c51b2e77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEdit</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a1e570c9b1cfd4d26aad8069dd4c60dcb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSearchEdit</name>
    <filename>classDtk_1_1Widget_1_1DSearchEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DSearchEditExample</name>
    <filename>classDSearchEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSearchEditPrivate</name>
    <filename>classDSearchEditPrivate.html</filename>
    <base protection="private">DLineEditPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSecureString</name>
    <filename>classDtk_1_1Core_1_1DSecureString.html</filename>
    <base>QString</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSegmentedControl</name>
    <filename>classDtk_1_1Widget_1_1DSegmentedControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DSegmentedControlPrivate</name>
    <filename>classDSegmentedControlPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSegmentedHighlight</name>
    <filename>classDSegmentedHighlight.html</filename>
    <base>QToolButton</base>
    <member kind="function">
      <type></type>
      <name>DSegmentedHighlight</name>
      <anchorfile>classDSegmentedHighlight.html</anchorfile>
      <anchor>a1f4b56a09cb1c8523532057178968a59</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSegmentedHighlight</name>
    <filename>classDtk_1_1Widget_1_1DSegmentedHighlight.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettings</name>
    <filename>classDtk_1_1Core_1_1DSettings.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>afd6649a8b6094486622f6b77d495be55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>af8461847b2a4dc91043d54525061880d</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ac1dce271072dbd8a24dcfb0be0ce126b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSettings</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a9161232d6f59d01b7dee4c306a41b9a4</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackend</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a7e14ca3604c4c42fe8588b59deea4dc7</anchor>
      <arglist>(DSettingsBackend *backend=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QJsonObject</type>
      <name>meta</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ad12b7a3743559af82c6c4cfd7108f14f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a04366c416aca042e559a342bfaf46ca3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsOption &gt; &gt;</type>
      <name>options</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ad0011bfed67207736a870a4fcc678f4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsOption &gt;</type>
      <name>option</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a7edc0e0c28f32c0dd37929ae7cc08df6</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a4597686d44caa7a9a293ded07d144611</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupKeys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a87bbb2cfe49f395639052099153a2ccb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsGroup &gt; &gt;</type>
      <name>groups</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ac16782cccd6da5bde7f1e133fa10c924</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>group</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ad36d7d56bb9664cd6ac567358b8795ea</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>aabfda1a655ab4b0eea9b09101ab67390</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettings &gt;</type>
      <name>fromJson</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ae161fca500926526311861d3811fa8b7</anchor>
      <arglist>(const QByteArray &amp;json)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettings &gt;</type>
      <name>fromJsonFile</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a93154ad7a62d6fac43acffedb482503c</anchor>
      <arglist>(const QString &amp;filepath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsBackend</name>
    <filename>classDtk_1_1Core_1_1DSettingsBackend.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>optionChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>aa62dbd95a4eac26bb1cf5ccea5265cfe</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>aaf541e239844f9c1a82508a7fb1a9ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>af0131f2b427c1c5db3c2a9ae1dad900f</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSettingsBackend</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>a1c4a7e8e454b94c0c2b9f06e178eb73f</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>af9c0c3b610a93dd25889a371208c3773</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>acd2fd78f0d33b67bc484afab5d77b3f8</anchor>
      <arglist>(const QString &amp;key) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>a80da57c201534e8d9662956877f4a48a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>a1695d64f56a4aed4678d2c2c7d74980a</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsDConfigBackend</name>
    <filename>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</filename>
    <base>Dtk::Core::DSettingsBackend</base>
    <member kind="function">
      <type></type>
      <name>DSettingsDConfigBackend</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a391639afa5b7e80fefbdad3d312d4644</anchor>
      <arglist>(const QString &amp;name, const QString &amp;subpath=QString(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>acc2ec5d01d86b169ca59e914e78e5a78</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a426e5898bdc06bcc688ca7cc1e918b36</anchor>
      <arglist>(const QString &amp;key) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a67fbdb78ddb13546246ca95cc80fa210</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a641d029b8d2c9f152902e18c01606894</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsDConfigBackendPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsDConfigBackendPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsDialog</name>
    <filename>classDSettingsDialog.html</filename>
    <base>DAbstractDialog</base>
  </compound>
  <compound kind="class">
    <name>DSettingsDialogPrivate</name>
    <filename>classDSettingsDialogPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsGroup</name>
    <filename>classDtk_1_1Core_1_1DSettingsGroup.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DSettingsGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a09d183d6e7fcaf58e665a683f658413f</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>parentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a570c427567efc9d819ac9633081e0a45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a913ac2834ab1291367f30c115c7a7a12</anchor>
      <arglist>(QPointer&lt; DSettingsGroup &gt; parentGroup)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>key</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a250c594e6a301cbc749038d879103802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>ae989c0d23ee05873baba3b36acf511f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a113fe4d2556d340e5fa3bc867a182225</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>childGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a708dc3bf8f7c7ef5495c11c1f02d13ca</anchor>
      <arglist>(const QString &amp;groupKey) const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsOption &gt;</type>
      <name>option</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a32fd804ed63ef5c0727a9fc039e9fc91</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsGroup &gt; &gt;</type>
      <name>childGroups</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>ac38e0c6fbbd51922413f84e1cb1108d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsOption &gt; &gt;</type>
      <name>childOptions</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a85008ef304230b132bba47135c627fac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsOption &gt; &gt;</type>
      <name>options</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>abbdbdbd29ebbecbbf7ee5e828c74fe62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettingsGroup &gt;</type>
      <name>fromJson</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a5401175cedd9ed5c22d0bacc17efe4ca</anchor>
      <arglist>(const QString &amp;prefixKey, const QJsonObject &amp;group)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsGroupPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsOption</name>
    <filename>classDtk_1_1Core_1_1DSettingsOption.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a557385cf362ad50e8576ca44f1345146</anchor>
      <arglist>(QVariant value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a2dcb27716ea88b96f25efa9009a31e52</anchor>
      <arglist>(const QString &amp;dataType, QVariant value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>aa33a8ae87df405b8fd06c873bd026712</anchor>
      <arglist>(QVariant value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dataChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>abbbdf2b47eec35df9e37909e184612fb</anchor>
      <arglist>(const QString &amp;dataType, QVariant value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSettingsOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>aaec0ceefdfe2f431327b31316d2750d1</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>parentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a64dcb2445a78532c4e3ed5183e8337e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>af97d96abf8a428f99361166d9ed8679a</anchor>
      <arglist>(QPointer&lt; DSettingsGroup &gt; parentGroup)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>key</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a6652cb5ad18c5c45485a206f174a368f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a93721333111f2bfceef63c8ba76885f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canReset</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a430a4d2e652375bcd96c6ac7ea947e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>defaultValue</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>aafc5ef7c58c42762ea67882552602e2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a92417b5c5cc11d3bbf86ff26d457641a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>data</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a1138075be3899ae6b2e7d0c3d7f71c50</anchor>
      <arglist>(const QString &amp;dataType) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>viewType</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a8c78f69648c9f610914a73e28e76bffb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a2732dbf68d81b850dd4b76fe1f7a74ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettingsOption &gt;</type>
      <name>fromJson</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a49099a1678fab0c1edc50b67e621a777</anchor>
      <arglist>(const QString &amp;prefixKey, const QJsonObject &amp;json)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsOptionPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsOptionPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsWidgetFactory</name>
    <filename>classDSettingsWidgetFactory.html</filename>
    <base>QObject</base>
    <member kind="typedef">
      <type>QWidget *()</type>
      <name>WidgetCreateHandler</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a668674938916ca9c3fec5827405366a9</anchor>
      <arglist>(QObject *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a47bd780b13cffde1060f4d285c4cbdd3</anchor>
      <arglist>(const QString &amp;viewType, std::function&lt; WidgetCreateHandler &gt; handler)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>createWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>aa19df5a40136e23d2e042a6775e1b544</anchor>
      <arglist>(QPointer&lt; DTK_CORE_NAMESPACE::DSettingsOption &gt; option)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>createWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a107e5e424b2c79abe6dee09d45c05470</anchor>
      <arglist>(const QByteArray &amp;translateContext, QPointer&lt; DTK_CORE_NAMESPACE::DSettingsOption &gt; option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED QWidget *</type>
      <name>createTwoColumWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a71bd4949a01b53d09f8459c07ac7596e</anchor>
      <arglist>(DTK_CORE_NAMESPACE::DSettingsOption *option, QWidget *rightWidget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED QWidget *</type>
      <name>createTwoColumWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>af537111ac38912930bc9ee1a9715a9e0</anchor>
      <arglist>(const QByteArray &amp;translateContext, DTK_CORE_NAMESPACE::DSettingsOption *option, QWidget *rightWidget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSettingsWidgetFactory</name>
    <filename>classDtk_1_1Widget_1_1DSettingsWidgetFactory.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsWidgetFactoryPrivate</name>
    <filename>classDSettingsWidgetFactoryPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSGApplication</name>
    <filename>classDtk_1_1Core_1_1DSGApplication.html</filename>
  </compound>
  <compound kind="class">
    <name>DShadowLine</name>
    <filename>classDShadowLine.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DShadowLine</name>
      <anchorfile>classDShadowLine.html</anchorfile>
      <anchor>acf0337b85b04ef1cb102d120a69b270b</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DShadowLinePrivate</name>
    <filename>classDShadowLinePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DShortcutEditLabel</name>
    <filename>classDShortcutEditLabel.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>DSidebarHelper</name>
    <filename>classDSidebarHelper.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSimpleListItem</name>
    <filename>classDSimpleListItem.html</filename>
    <base>QObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>sameAs</name>
      <anchorfile>classDSimpleListItem.html</anchorfile>
      <anchor>ac39af04ed2ae370f25b0e876af8ab28d</anchor>
      <arglist>(DSimpleListItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawBackground</name>
      <anchorfile>classDSimpleListItem.html</anchorfile>
      <anchor>aeb57f8291ed21f59e93389d3c6303e35</anchor>
      <arglist>(QRect rect, QPainter *painter, int index, bool isSelect, bool isHover)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawForeground</name>
      <anchorfile>classDSimpleListItem.html</anchorfile>
      <anchor>abb17ddcebef5fd622099753afe606adf</anchor>
      <arglist>(QRect rect, QPainter *painter, int column, int index, bool isSelect, bool isHover)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSimpleListItem</name>
    <filename>classDtk_1_1Widget_1_1DSimpleListItem.html</filename>
  </compound>
  <compound kind="class">
    <name>DSimpleListView</name>
    <filename>classDSimpleListView.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setRowHeight</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a7bda81ced35dad95a06d36ed1f5bcd71</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnTitleInfo</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab332523b3dc557cbe6a8181036e09c6c</anchor>
      <arglist>(QList&lt; QString &gt; titles, QList&lt; int &gt; widths, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnHideFlags</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ad1e82c693629f63022c830392ef6708f</anchor>
      <arglist>(QList&lt; bool &gt; toggleHideFlags, int alwaysVisibleColumn=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSortingAlgorithms</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>aad58cc953fd47a3f20f4b045df5612b9</anchor>
      <arglist>(QList&lt; SortAlgorithm &gt; *algorithms, int sortColumn=-1, bool descendingSort=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSearchAlgorithm</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab7350792bc21e88dcbed4cf925f5650e</anchor>
      <arglist>(SearchAlgorithm algorithm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipRadius</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a89c482f04201aa4cd1678ff206ae47ca</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrame</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>acc198ca190e6bcb63f476ca372010c11</anchor>
      <arglist>(bool enableFrame, QColor color=QColor(&quot;#000000&quot;), double opacity=0.1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a68050b0015fa84bd7576ebf530d45950</anchor>
      <arglist>(QList&lt; DSimpleListItem * &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a6eea0c196d8b5decb346fc3bde155805</anchor>
      <arglist>(DSimpleListItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a32d83aeec9ee1fca9e940993293d959a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelections</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a5387d47283cdab9575914cc3cb9cb112</anchor>
      <arglist>(QList&lt; DSimpleListItem * &gt; items, bool recordLastSelection=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelections</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a41437f1c968676cbd62e43df4322bba3</anchor>
      <arglist>(bool clearLastSelection=true)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DSimpleListItem * &gt;</type>
      <name>getSelections</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>af4e1c867ebcf3088bd9d078b9b979354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a2f0e8fd77346c0d977614de614995bc0</anchor>
      <arglist>(QList&lt; DSimpleListItem * &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>search</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a527335b858d598b60ff06536f3e209f8</anchor>
      <arglist>(QString searchContent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleSelect</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ae470772153e14775200d3f73c4ebd1af</anchor>
      <arglist>(bool singleSelect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keepSelectWhenClickBlank</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab4e80fdc77954ea7a861561346677547</anchor>
      <arglist>(bool keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectAllItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ade4c80d0ac7d4469919db72556d66235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectFirstItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab6f121283a098a7b0a6dc58f818ae444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectLastItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab74dfca4437c778f0b389c70896aafdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectNextItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a91348efe3fffec9bd9701616d6a692b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPrevItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>aba5bb6080d10120be94019243fe4d8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectPageDown</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a90363134827174b264bd1a6518e8bbe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectPageUp</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>af3c9d3f0896a99ecc3f9080245eef317</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToEnd</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ac1ed0e289b46bb2708fcbe2525bff290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToHome</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a51de339bbe10949fc4b5248595c3b2a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToNext</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a15b29adecd217bd0b679334807b3a646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToPrev</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>abad834de4970133dfeb2bda1c08c8b9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollPageDown</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a6f1d935a37378080c2bc0b597a9e635c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollPageUp</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>af3dc25ed88ab487b941d78afa57d3cf9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSimpleListView</name>
    <filename>classDtk_1_1Widget_1_1DSimpleListView.html</filename>
  </compound>
  <compound kind="class">
    <name>DSimpleListViewPrivate</name>
    <filename>classDSimpleListViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSingleton</name>
    <filename>classDtk_1_1Core_1_1DSingleton.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>DSingleton&lt; Singleton &gt;</name>
    <filename>classDtk_1_1Core_1_1DSingleton.html</filename>
  </compound>
  <compound kind="class">
    <name>DSizegripExample</name>
    <filename>classDSizegripExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSlider</name>
    <filename>classDSlider.html</filename>
    <base>QWidget</base>
    <member kind="signal">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a59dfaf1bf476a1288ac324c4a2c3a315</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sliderMoved</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a2ebc63d3e128907af409b9b4f2721a70</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sliderReleased</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>acbd859f4128be4990b05a5c7788bbeee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rangeChanged</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>afeb1ce8cf77b5f7669e4ef09a79565aa</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>actionTriggered</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>aa8eb1bd0babafbcee8d4c6e262a9188e</anchor>
      <arglist>(int action)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconClicked</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a5c31c68ec5cf3224802091d2cfe0f7d1</anchor>
      <arglist>(SliderIcons icon, bool checked)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Orientation</type>
      <name>orientation</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>aebb5363ab2b1240ba08e63855135a24f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSlider *</type>
      <name>slider</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a0ec22309009e3cf61bc820e56f9fff45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftIcon</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a6b643c186ffd8d01bc021de01007678f</anchor>
      <arglist>(const QIcon &amp;left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightIcon</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>af29fc03cebda04d6a645f16292d3bcbf</anchor>
      <arglist>(const QIcon &amp;right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconSize</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a03e0f7256b165d203689bec3b0dcfb29</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a29c8805c3065b94ef9f27b7911d36980</anchor>
      <arglist>(int min)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>ab007f56c39efa3b3327e533a73eecb7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a324d798989ae80d6b4860a28e5327ea1</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>adcd55c60d7155ac1d955fffcb4789aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageStep</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a9149d20239cbd0d300aabe180e5049ac</anchor>
      <arglist>(int pageStep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pageStep</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a3795e272ec5995d4a7a70e01fdfcb24a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a9447a699a58735a138069be3b297a59b</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a01c94ca7f06a6725ad17a3039f1157b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftTicks</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a57207d01a1effc99f774f0abd0c47031</anchor>
      <arglist>(const QStringList &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightTicks</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a769432a34948a84c1ed99916109438fb</anchor>
      <arglist>(const QStringList &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBelowTicks</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a7ad5a3142552ba8617f86b07e3e1b1d3</anchor>
      <arglist>(const QStringList &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkPositions</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a411252c2a7d9bb8275cf4ad4129506b5</anchor>
      <arglist>(QList&lt; int &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseWheelEnabled</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a06c733a81c32815dc85d9d1bf7127464</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTipValue</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>ae35d73a59dd82004d7e65dd4b16b3405</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>QSlider::TickPosition</type>
      <name>tickPosition</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a86a23f1cff92d76ddfb36a313aef9ef7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a83784dd0605fccac46482926632ffd37</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandleVisible</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a7031e237b5f314225bcce9455d78c243</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleVisible</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>adf4ae9c0593fc2d873338e94f067a63a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabledAcrossStyle</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a4193c3612a252539e29730b5ffa80c8f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a522b48a49a1847797d36cbc54029b7c7</anchor>
      <arglist>(QObject *watched, QEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSlider</name>
    <filename>classDtk_1_1Widget_1_1DSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>DSliderExample</name>
    <filename>classDSliderExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSliderPrivate</name>
    <filename>classDSliderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSlideStackWidgetTransition</name>
    <filename>classDSlideStackWidgetTransition.html</filename>
    <base>DAbstractStackWidgetTransition</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSnapStandardPathsPrivate</name>
    <filename>classDtk_1_1Core_1_1DSnapStandardPathsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinBox</name>
    <filename>classDSpinBox.html</filename>
    <base>QSpinBox</base>
    <member kind="signal">
      <type>void</type>
      <name>alertChanged</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>adc73dad572b700a621f3f2255c89a67d</anchor>
      <arglist>(bool alert)</arglist>
    </member>
    <member kind="signal">
      <type>D_DECL_DEPRECATED void</type>
      <name>defaultValueChanged</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>ac84ad79c09aa966ab4b963111766fc04</anchor>
      <arglist>(int defaultValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSpinBox</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>a81298d435e84b79e266d0ad416260a9d</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>aab84f33ab717b843cebc973c7ff9e800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAlert</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>a922d0ab1a23a0d1b23253319cfd1c591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>aa0cf810a3a802c4ccdea82f0cf888f79</anchor>
      <arglist>(const QString &amp;text, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>abd3f4730a4e39d58e5a456c5b33fc12e</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED int</type>
      <name>defaultValue</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>a7a8ab449a658658692c48977e0c55337</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>alert</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>aa0cd7e19b95a714aa275d0d881fdee66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSpinBox</name>
    <filename>classDtk_1_1Widget_1_1DSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinBoxExample</name>
    <filename>classDSpinBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSpinBoxPrivate</name>
    <filename>classDSpinBoxPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinner</name>
    <filename>classDSpinner.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>ab0c871a4346e59884488953d4a3165f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>ad0496e81c3e84e5f422b7c9bcfec0073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>a2ede6f296d68792aed146447609f5a00</anchor>
      <arglist>(QColor color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSpinner</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>aa381c0709e274ac703ad2396241be5dc</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>a13337e836802c26c840173add40839d8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSpinner</name>
    <filename>classDtk_1_1Widget_1_1DSpinner.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinnerExample</name>
    <filename>classDSpinnerExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSpinnerPrivate</name>
    <filename>classDSpinnerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSplitScreenButton</name>
    <filename>classDSplitScreenButton.html</filename>
    <base>DIconButton</base>
  </compound>
  <compound kind="class">
    <name>DSplitScreenWidget</name>
    <filename>classDSplitScreenWidget.html</filename>
    <base>DArrowRectangle</base>
  </compound>
  <compound kind="class">
    <name>DSplitterExample</name>
    <filename>classDSplitterExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DStackWidget</name>
    <filename>classDStackWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>int</type>
      <name>pushWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a3517a34832f08b78a1d1648dfa171873</anchor>
      <arglist>(QWidget *widget, bool enableTransition=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>aa937c1b7849aaf0cd00e176ab8b1ae67</anchor>
      <arglist>(int index, QWidget *widget, bool enableTransition=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>popWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a3d50362e7da3ebc35a145bbcd06a0816</anchor>
      <arglist>(QWidget *widget=nullptr, bool isDelete=true, int count=1, bool enableTransition=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ac0e698b6e63d57dc002e6fb25ab4177c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ad2e6adcd1d8bb1cef87ac41ba2e4bc96</anchor>
      <arglist>(QWidget *widget) const</arglist>
    </member>
    <member kind="slot">
      <type>QWidget *</type>
      <name>getWidgetByIndex</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a1760d857d5a410c227cddd68609b5138</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTransition</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a604e8e98420eebef7ff367166fcfecaa</anchor>
      <arglist>(DAbstractStackWidgetTransition *transition)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAnimationDuration</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ae2b0c19a3052c7cf4fbbbecac4e8bb25</anchor>
      <arglist>(int animationDuration)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAnimationType</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>af5f329a87ad3949c2d44e7e89826883f</anchor>
      <arglist>(QEasingCurve::Type animationType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>busyChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a7c0736ab3dc8b14a34fc8adbc6499b11</anchor>
      <arglist>(bool busy)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>depthChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a10e44ee75108917d42cf49fa9e28d2b8</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentIndexChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>abcaade2cbd958cf14fddc8647d1fccd8</anchor>
      <arglist>(int currentIndex)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentWidgetChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ae5ae21af0b824919a4a34b4b500dd5d1</anchor>
      <arglist>(QWidget *currentWidget)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>switchWidgetFinished</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a11d7c0f9e84a02f94bf70ca6e61ca075</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DStackWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a55ac207966a3b7816b860ba6c1a6f54e</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>busy</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a6fcc088fcb47630b71f4ea713b8b04d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a9e3ae594aabd4562d0434e9a7f4d35a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ae1284c77f6c92b6677bd94807e75bc71</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a24a9011e75fd17a65aeafb63376fa394</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>DAbstractStackWidgetTransition *</type>
      <name>transition</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a27c00f830cb825fcc43a99694fbbf515</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>animationDuration</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ac8ff0b9ccd9f9381fb8491c9a86a3f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QEasingCurve::Type</type>
      <name>animationType</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a80f8830a63390778163a5c773285e772</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStackWidget</name>
    <filename>classDtk_1_1Widget_1_1DStackWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DStackWidgetPrivate</name>
    <filename>classDStackWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DStandardItem</name>
    <filename>classDStandardItem.html</filename>
    <base>QStandardItem</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DStandardItem</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>ad5c7f7992db7d6df8105d88d199f26fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>ad5ae056693628b762f745882d44215f3</anchor>
      <arglist>(Qt::Edge edge, const DViewItemActionList &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>DViewItemActionList</type>
      <name>actionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>ab704b928f0925200e2493493b0585963</anchor>
      <arglist>(Qt::Edge edge) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextActionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>a06f31e8d6d7f17b2cb7adfbb7f71bf7f</anchor>
      <arglist>(const DViewItemActionList &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>DViewItemActionList</type>
      <name>textActionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>a0e3fd18224fd75401889f66a52fc2e02</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStandardItem</name>
    <filename>classDtk_1_1Widget_1_1DStandardItem.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DStandardPaths</name>
    <filename>classDtk_1_1Core_1_1DStandardPaths.html</filename>
  </compound>
  <compound kind="class">
    <name>DStatusBarExample</name>
    <filename>classDStatusBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DStyle</name>
    <filename>classDStyle.html</filename>
    <base>QCommonStyle</base>
    <member kind="function">
      <type></type>
      <name>DStyle</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a9dacd7d2c67a28213e6c15af46bbd3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPrimitive</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>aa8e5cf6767aa7ceb9b7c5183bf84fdde</anchor>
      <arglist>(QStyle::PrimitiveElement pe, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawControl</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a495fb28d4d38d1cc4b49ba30cb0d70db</anchor>
      <arglist>(QStyle::ControlElement ce, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pixelMetric</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a88d3e8859d7f5b326ece3ad4a02a0515</anchor>
      <arglist>(QStyle::PixelMetric m, const QStyleOption *opt=nullptr, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>styleHint</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a0d274aca8713402935ba393c24f14a39</anchor>
      <arglist>(StyleHint sh, const QStyleOption *opt, const QWidget *w, QStyleHintReturn *shret) const override</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>subElementRect</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a0299226c4f4c0fb577f7e5a0acb43e80</anchor>
      <arglist>(QStyle::SubElement r, const QStyleOption *opt, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeFromContents</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a5f9233dd63ca9dd0df1f0a7d0a3f7285</anchor>
      <arglist>(QStyle::ContentsType ct, const QStyleOption *opt, const QSize &amp;contentsSize, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>standardIcon</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>aef9f5e751ad7130e9b4956343c100a51</anchor>
      <arglist>(QStyle::StandardPixmap st, const QStyleOption *opt=nullptr, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>QPalette</type>
      <name>standardPalette</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>afb0631ec71cc182d88ba42cd7db7e31d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a2f5c6a976f32634f5bd31d8e66c69cec</anchor>
      <arglist>(const QStyleOption *option, const QBrush &amp;base, QPalette::ColorGroup cg=QPalette::Normal, QPalette::ColorRole role=QPalette::NoRole) const</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af668ae5890493be6fad3a48e6717f426</anchor>
      <arglist>(StyleState state, const QStyleOption *option, const QBrush &amp;base, QPalette::ColorGroup cg=QPalette::Normal, QPalette::ColorRole role=QPalette::NoRole) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af338d2e199a6c011c3e0be77b0021fb1</anchor>
      <arglist>(StateFlags flags, const QBrush &amp;base, QPalette::ColorGroup cg=QPalette::Normal, QPalette::ColorRole role=QPalette::NoRole, const QStyleOption *option=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a28285c8bffdf1fe6fdba721f62a64091</anchor>
      <arglist>(const QStyleOption *option, const QBrush &amp;base, DPalette::ColorGroup cg=DPalette::Normal, DPalette::ColorType type=DPalette::ItemBackground) const</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>aa95bd14f945422e081db0024d8690092</anchor>
      <arglist>(StyleState state, const QStyleOption *option, const QBrush &amp;base, DPalette::ColorGroup cg=DPalette::Normal, DPalette::ColorType type=DPalette::ItemBackground) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a3cf731d8f94211c6cad460062f009e35</anchor>
      <arglist>(StateFlags flags, const QBrush &amp;base, DPalette::ColorGroup cg=DPalette::Normal, DPalette::ColorType type=DPalette::ItemBackground, const QStyleOption *option=nullptr) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>adjustColor</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>ae77f31eba45fcc95023d27f0ca899778</anchor>
      <arglist>(const QColor &amp;base, qint8 hueFloat=0, qint8 saturationFloat=0, qint8 lightnessFloat=0, qint8 redFloat=0, qint8 greenFloat=0, qint8 blueFloat=0, qint8 alphaFloat=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>blendColor</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a8adaaeda71a3e23c0630cc0353353d2d</anchor>
      <arglist>(const QColor &amp;substrate, const QColor &amp;superstratum)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPair&lt; QIcon::Mode, QIcon::State &gt;</type>
      <name>toIconModeState</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a027e03d29fe92f7acf6468b43f1c53fa</anchor>
      <arglist>(const QStyleOption *option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTooltipTextFormat</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a192dd1f55b27e2fd4ac4f1f668baf86c</anchor>
      <arglist>(Qt::TextFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Qt::TextFormat</type>
      <name>tooltipTextFormat</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a1199dfe07678dc1badce0489c8fc88e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawPrimitive</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af4317fbe7ac4dec3d611b2f7416ad30f</anchor>
      <arglist>(const QStyle *style, DStyle::PrimitiveElement pe, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawControl</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>adf42b504462345989669610d5602ecd2</anchor>
      <arglist>(const QStyle *style, DStyle::ControlElement ce, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>pixelMetric</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>afe31693ba8092cf475ec23c8785d91df</anchor>
      <arglist>(const QStyle *style, DStyle::PixelMetric m, const QStyleOption *opt=nullptr, const QWidget *widget=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QRect</type>
      <name>subElementRect</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a9757e986c1f8994d0c177bdf86818c01</anchor>
      <arglist>(const QStyle *style, DStyle::SubElement r, const QStyleOption *opt, const QWidget *widget=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QSize</type>
      <name>sizeFromContents</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a4d7eee3989a491453969bccb2c7df1ad</anchor>
      <arglist>(const QStyle *style, DStyle::ContentsType ct, const QStyleOption *opt, const QSize &amp;contentsSize, const QWidget *widget=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyle</name>
    <filename>classDtk_1_1Widget_1_1DStyle.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyledIconEngine</name>
    <filename>classDStyledIconEngine.html</filename>
    <base>QIconEngine</base>
    <member kind="function">
      <type></type>
      <name>DStyledIconEngine</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>ae16e51825700dd586bf4c40c1c015c2c</anchor>
      <arglist>(DrawFun drawFun, const QString &amp;iconName=QString())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindDrawFun</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a13987fdfd95ec89a27276432a31b8650</anchor>
      <arglist>(DrawFun drawFun)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconName</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>aacb0fa3184b53db72ac9453a3e0673df</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>QPixmap</type>
      <name>pixmap</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a04be99e1f71c28aeed5dcd01523c93cc</anchor>
      <arglist>(const QSize &amp;size, QIcon::Mode mode, QIcon::State state) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>aa444e38048795a8483eac482f6b96ec3</anchor>
      <arglist>(QPainter *painter, const QPalette &amp;palette, const QRectF &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a0f616fe3ee488b71e33ccbe7eb8b56d9</anchor>
      <arglist>(QPainter *painter, const QRect &amp;rect, QIcon::Mode mode, QIcon::State state) override</arglist>
    </member>
    <member kind="function">
      <type>QIconEngine *</type>
      <name>clone</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a694e493ef7ad843477d86851e741c772</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyledIconEngine</name>
    <filename>classDtk_1_1Widget_1_1DStyledIconEngine.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyledItemDelegate</name>
    <filename>classDStyledItemDelegate.html</filename>
    <base>QStyledItemDelegate</base>
  </compound>
  <compound kind="class">
    <name>DStyledItemDelegatePrivate</name>
    <filename>classDStyledItemDelegatePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleHelper</name>
    <filename>classDStyleHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOption</name>
    <filename>classDStyleOption.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classDStyleOption.html</anchorfile>
      <anchor>af663e511395279eda9bc9a2e7360498f</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyleOption</name>
    <filename>classDtk_1_1Widget_1_1DStyleOption.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOptionBackgroundGroup</name>
    <filename>classDStyleOptionBackgroundGroup.html</filename>
    <base>QStyleOption</base>
    <base>DStyleOption</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionButton</name>
    <filename>classDStyleOptionButton.html</filename>
    <base>QStyleOptionButton</base>
    <base>DStyleOption</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classDStyleOptionButton.html</anchorfile>
      <anchor>af561d3cec57b2e58e8a43489e77a7075</anchor>
      <arglist>(const QWidget *widget) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyleOptionButton</name>
    <filename>classDtk_1_1Widget_1_1DStyleOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOptionButtonBoxButton</name>
    <filename>classDStyleOptionButtonBoxButton.html</filename>
    <base>DStyleOptionButton</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionFloatingWidget</name>
    <filename>classDStyleOptionFloatingWidget.html</filename>
    <base>QStyleOption</base>
    <base>DStyleOption</base>
    <member kind="function">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classDStyleOptionFloatingWidget.html</anchorfile>
      <anchor>af663e511395279eda9bc9a2e7360498f</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DStyleOptionIcon</name>
    <filename>classDStyleOptionIcon.html</filename>
    <base>QStyleOption</base>
    <base>DStyleOption</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionIconV2</name>
    <filename>classDStyleOptionIconV2.html</filename>
    <base>DStyleOptionIcon</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionLineEdit</name>
    <filename>classDStyleOptionLineEdit.html</filename>
    <base>DStyleOption</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classDStyleOptionLineEdit.html</anchorfile>
      <anchor>a5a26da9c610eeb8b8f77738813ad326a</anchor>
      <arglist>(const QWidget *widget) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyleOptionLineEdit</name>
    <filename>classDtk_1_1Widget_1_1DStyleOptionLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOptionViewItem</name>
    <filename>classDStyleOptionViewItem.html</filename>
    <base>QStyleOptionViewItem</base>
    <base>DStyleOption</base>
  </compound>
  <compound kind="class">
    <name>DStylePainter</name>
    <filename>classDStylePainter.html</filename>
    <base>QPainter</base>
  </compound>
  <compound kind="class">
    <name>DSuggestButton</name>
    <filename>classDSuggestButton.html</filename>
    <base>QPushButton</base>
    <member kind="function">
      <type></type>
      <name>DSuggestButton</name>
      <anchorfile>classDSuggestButton.html</anchorfile>
      <anchor>abd320b5ab581a5d6ef3a6e06a86648b5</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSuggestButton</name>
      <anchorfile>classDSuggestButton.html</anchorfile>
      <anchor>a2e687ea1fc24f2b255447c5d7097a0eb</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSuggestButton</name>
    <filename>classDtk_1_1Widget_1_1DSuggestButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DSuggestButtonExample</name>
    <filename>classDSuggestButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSvgRenderer</name>
    <filename>classDSvgRenderer.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DSvgRenderer</name>
    <filename>classDtk_1_1Gui_1_1DSvgRenderer.html</filename>
  </compound>
  <compound kind="class">
    <name>DSvgRendererPrivate</name>
    <filename>classDSvgRendererPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSwitchButton</name>
    <filename>classDSwitchButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="function">
      <type></type>
      <name>DSwitchButton</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>a38b3f16e5789fd43a85d224625cccb31</anchor>
      <arglist>(QWidget *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>a527f858b29edb731340ea26401547e52</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>a2a3ef9aeb1692dc685f4d5272aaba4d9</anchor>
      <arglist>(QPaintEvent *e) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initStyleOption</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>ae23952997e5ed6c52b09471db57914c4</anchor>
      <arglist>(DStyleOptionButton *option) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DSwitchButtonExample</name>
    <filename>classDSwitchButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSwitchButtonPrivate</name>
    <filename>classDSwitchButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSwitchHeaderLine</name>
    <filename>classDSwitchHeaderLine.html</filename>
    <base>DHeaderLine</base>
    <member kind="signal">
      <type>void</type>
      <name>checkedChanged</name>
      <anchorfile>classDSwitchHeaderLine.html</anchorfile>
      <anchor>a1ff874781484affd1bd198a15b402856</anchor>
      <arglist>(bool arg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSwitchHeaderLine</name>
      <anchorfile>classDSwitchHeaderLine.html</anchorfile>
      <anchor>a792706274125c858bea45563df4fc446</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpand</name>
      <anchorfile>classDSwitchHeaderLine.html</anchorfile>
      <anchor>a32de45ce6e5316eac79e45bdec46a4d1</anchor>
      <arglist>(bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSwitchHeaderLine</name>
    <filename>classDtk_1_1Widget_1_1DSwitchHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>DSwitchLineExpand</name>
    <filename>classDSwitchLineExpand.html</filename>
    <base>Dtk::Widget::DBaseExpand</base>
    <member kind="function">
      <type></type>
      <name>DSwitchLineExpand</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>ac1db12cfcbfb71d33ba8ab3475242003</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>a4be2ca3a9882beb199342cd78e2eff23</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpand</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>ada68b90ab991ea54e4d9ba4a1425ae6c</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>DBaseLine *</type>
      <name>header</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>aea5e61ca22dd2bd8f8baee5dd37bd793</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSwitchLineExpand</name>
    <filename>classDtk_1_1Widget_1_1DSwitchLineExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSysInfo</name>
    <filename>classDtk_1_1Core_1_1DSysInfo.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ProductType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a83e0d06dcacf2abf19fdd231497a9b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeepinType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>abce779af6b5c5e03e2a7f3b55e78ae32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogoType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a8c98faa519cd1ee5301171d8df6c86c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OrgType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a210c7bb23430c7eae5b16fa46d5176f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UosType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a9f811bf21c840fafa7809ee01865cb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UosEdition</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a95c282f42eda222e5b9925122fe2a434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UosArch</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a10e74d156a2a34e26b14fcfc22dffc30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDDE</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a398f5ab3b2041dcb561a8894b33c8e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DeepinType</type>
      <name>deepinType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ab33b06301e17e7656b6fad41f0243fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>deepinTypeDisplayName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a97accb5c769bc26d817a2976f1004941</anchor>
      <arglist>(const QLocale &amp;locale=QLocale::system())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>deepinVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>af4ec150bd572ae1236f7724af2598174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>deepinCopyright</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>adebc9bbf6aa29e1ee2d13067d7ce9c71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static UosEdition</type>
      <name>uosEditionType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ab382f97a6730d92ba67bf2bc7aa65b49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>uosSystemName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a22734a9f4e9bf3c9abccf162516effd9</anchor>
      <arglist>(const QLocale &amp;locale=QLocale::system())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>spVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a78ecfd5631fbdab6b215d57cb98857f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>udpateVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>aac5ecc8cb37eafac81f102e7ec1017e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>majorVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>aaedb6ace0392bd73a788773e7306686b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>minorVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ab83ca93abf90445d2867c8f733bd2795</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>buildVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a097282526af96a2b4e28bff943415688</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>distributionInfoPath</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ad363e68110ed064bc0702262246de067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>distributionInfoSectionName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ac74b182295bbf18482ced1d706a66303</anchor>
      <arglist>(OrgType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>distributionOrgName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a06e3fec6a0dcec38462971f2a34d1526</anchor>
      <arglist>(OrgType type=Distribution, const QLocale &amp;locale=QLocale::system())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPair&lt; QString, QString &gt;</type>
      <name>distributionOrgWebsite</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a509a66b7f6d55544645bebdc7c9e5c49</anchor>
      <arglist>(OrgType type=Distribution)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>distributionOrgLogo</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ab1386f1e92ad98d98df5bb857f221e60</anchor>
      <arglist>(OrgType orgType=Distribution, LogoType type=Normal, const QString &amp;fallback=QString())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>operatingSystemName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>aeea96b6200c111ea74064a808d28416c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProductType</type>
      <name>productType</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a5a7892cfb99400c4bc386427b5471487</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>productVersion</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a01b5c8976e2c27aa63ad9db4f866ef61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isCommunityEdition</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a2e72c98f4270e26918dc20a94f652590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>computerName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a0827e0ae34797f46b077a6b351308084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>cpuModelName</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ae783ea28b31750c34a1979927b3ee9ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static qint64</type>
      <name>memoryInstalledSize</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ab6c4314dbd0de7b0d4b63273295d1f75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static qint64</type>
      <name>memoryTotalSize</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a7a213c1587f714ef50b1d78121a6f083</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static qint64</type>
      <name>systemDiskSize</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a8e0a8d596d68f72d3c1fbc42d24a5ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QDateTime</type>
      <name>bootTime</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a719502ceb4f003b9076687dacf9d83da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QDateTime</type>
      <name>shutdownTime</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>ae7905fa996833dd4856a67cdc8838d4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static qint64</type>
      <name>uptime</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>a789d9a9aa676c99cf509f568a39a9f6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Arch</type>
      <name>arch</name>
      <anchorfile>classDtk_1_1Core_1_1DSysInfo.html</anchorfile>
      <anchor>af48c66bfe8dcceea5ed7f309fa921ad1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSysInfoPrivate</name>
    <filename>classDtk_1_1Core_1_1DSysInfoPrivate.html</filename>
    <class kind="struct">Dtk::Core::DSysInfoPrivate::MinVersion</class>
    <class kind="struct">Dtk::Core::DSysInfoPrivate::OSBuild</class>
  </compound>
  <compound kind="class">
    <name>DTabBar</name>
    <filename>classDTabBar.html</filename>
    <base>QWidget</base>
    <base>Dtk::Core::DObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a4bef51815a38b75b9c4419fc14c6d5cf</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVisibleAddButton</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ae65f579393d1a2112179620bc3cd4a70</anchor>
      <arglist>(bool visibleAddButton)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setStartDragDistance</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>afa534b951f8bab9641d88bd0e2bc494f</anchor>
      <arglist>(int startDragDistance)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskColor</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ab2812da3b9924e1339bf8f549e836ceb</anchor>
      <arglist>(QColor maskColor)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentChanged</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a314b26fbc471512c0b3eaa61758cb9cd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabCloseRequested</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a402be1cba59eae93fcc8fb7db15ce49b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabMoved</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a8e5f587d6eeb166fbfaca0b6a769f757</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabIsInserted</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a125ae6d14c271d2e64b757d464958c85</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabIsRemoved</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a3657a3184fe6022fe1469076385f9a17</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabBarClicked</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aa2c9f81a7eac819e9c2821cb8acfe5d5</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabBarDoubleClicked</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ac78db95e52a5d1c0a976f60508c7c523</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabAddRequested</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a1da67d5b2242738edb8fa00b2695c479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabReleaseRequested</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a7e776e7cfe17ba87dd296e110978fdef</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabDroped</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a633d5f98ac360a0b29ac07a29e8aa5f1</anchor>
      <arglist>(int index, Qt::DropAction action, QObject *target)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragActionChanged</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a41bd7eaea127b9eb2349752127192270</anchor>
      <arglist>(Qt::DropAction action)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragStarted</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a8f201dc142f91da8ab6515a54835a801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragEnd</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aebd48e15e7db708ee0e0d22d8cd529d2</anchor>
      <arglist>(Qt::DropAction action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabMinimumSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a7fca71906348b00d9244b4186ae30795</anchor>
      <arglist>(int index, const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabMaximumSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a560c90472f82aa7f958f0b57ae6c0cd4</anchor>
      <arglist>(int index, const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>visibleAddButton</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a462b155e022fa8f9f6d94024b27e898d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QTabBar::Shape</type>
      <name>shape</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ac621d4cbdad3830d2ec9ecc94504bd71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShape</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>afd172ccd6cc21adafa0db7b9a968f26b</anchor>
      <arglist>(QTabBar::Shape shape)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a0fb6badbc0c592254524d3e78e20967f</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>afe18d64cfe3e2aecdc14abe58be78bbd</anchor>
      <arglist>(const QIcon &amp;icon, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>af9023d2dde0b662e4b1bca198cc37cc1</anchor>
      <arglist>(int index, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a7c7459237922ebbfedf02e41290d244d</anchor>
      <arglist>(int index, const QIcon &amp;icon, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a3773339d5abb64f6efaa07712dac1562</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a56d3c5f52e0ff95ae4ee9de453edf163</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a78eb45ac610258bd7db7bfcacec1917a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a757229790fbfd401f631a4090618b9d0</anchor>
      <arglist>(int index, bool)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>tabText</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ab7f333c44c407f8001e759da4c003c87</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a04dce705a35a6eaf7e0fdeb5e9f6765d</anchor>
      <arglist>(int index, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>tabIcon</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>af8159b4b786c3ad14cd17504dde81ec9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabIcon</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a5946c18cc2da45037997ed04afd70a2a</anchor>
      <arglist>(int index, const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>Qt::TextElideMode</type>
      <name>elideMode</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aa08827a177aa22f4470dc4f2df0c4630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElideMode</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a663cf6e2089c494901d6a96be318e165</anchor>
      <arglist>(Qt::TextElideMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a4bf0382a5116e5491299f085b96f0911</anchor>
      <arglist>(int index, const QString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>tabToolTip</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a22c0b08a112cad309f02ace94bfd1496</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabData</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a106ce3aec8a6837692dfd47a06a68778</anchor>
      <arglist>(int index, const QVariant &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>tabData</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aa44f0fe546cc5ac12131a9ec438388c8</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>tabRect</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a6f9765258a09409f34f0762c0a65ffd3</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tabAt</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>af848181cdbcfed3b1b27c8db014b3560</anchor>
      <arglist>(const QPoint &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>adafbedcddd5f512d62499c2628dbed86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a10ed5f9dedc4c04cd6d22bcd9cce725e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>acc784f59ca02accd5523233f0ee2776f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ad45e1b62e095a75a58ec7ebe9f1e8ce5</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tabsClosable</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a0b2ca94bbb5b9d917b020da6184a4840</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabsClosable</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a9d855b03765044e865a4d01904c6a9f2</anchor>
      <arglist>(bool closable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabledEmbedStyle</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a61caa5f95a108c31642583ba16bfa543</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabLabelAlignment</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a3796303a3ef45813443710225a2644cd</anchor>
      <arglist>(Qt::Alignment alignment)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTabBar</name>
    <filename>classDtk_1_1Widget_1_1DTabBar.html</filename>
  </compound>
  <compound kind="class">
    <name>DTabBarExample</name>
    <filename>classDTabBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTabBarPrivate</name>
    <filename>classDTabBarPrivate.html</filename>
    <base>QTabBar</base>
    <base>Dtk::Core::DObjectPrivate</base>
    <class kind="class">DTabBarPrivate::FullWidget</class>
    <class kind="struct">DTabBarPrivate::TabBarAnimation</class>
  </compound>
  <compound kind="class">
    <name>DTabletWindowOptionButton</name>
    <filename>classDTabletWindowOptionButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DTabletWindowOptionButton</name>
      <anchorfile>classDTabletWindowOptionButton.html</anchorfile>
      <anchor>a62ae0f52f3c60a6a5a3500d2a46a629c</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTabletWindowOptionButton</name>
    <filename>classDtk_1_1Widget_1_1DTabletWindowOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DTableWidgetExample</name>
    <filename>classDTableWidgetExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTaskbarControl</name>
    <filename>classDTaskbarControl.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>void</type>
      <name>setProgress</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>adcd1e2fa14a512628b11916983e70692</anchor>
      <arglist>(bool progressVisible, double progress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCounter</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a4f76a2e56a53f728ade3da76780b7d96</anchor>
      <arglist>(bool counterVisible, int counter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>counter</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a8db77215dda2cf0e0f106e3628467792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCounterVisible</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a885f9956aa37e8bbe8d372e58d43e2ac</anchor>
      <arglist>(bool counterVisible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>counterVisible</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a6ad5df4445d9419cd746bfaf172efe01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrgency</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a25ba04ade8f92ef2cf1567f7c65c41fe</anchor>
      <arglist>(bool val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DTaskbarControl</name>
    <filename>classDtk_1_1Gui_1_1DTaskbarControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DTaskbarControlPrivate</name>
    <filename>classDTaskbarControlPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DTest</name>
    <filename>classDTest.html</filename>
  </compound>
  <compound kind="class">
    <name>DTestWithParam</name>
    <filename>classDTestWithParam.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>DTestWithParam&lt; int &gt;</name>
    <filename>classDTestWithParam.html</filename>
  </compound>
  <compound kind="class">
    <name>DTextEdit</name>
    <filename>classDTextEdit.html</filename>
    <base>QTextEdit</base>
    <member kind="function">
      <type></type>
      <name>DTextEdit</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>ace46cfb2f7276ed31b0efd570c3fc09b</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>speechToTextIsEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>ab70ab1701aa03aaa79986d24b5d888f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeechToTextEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a2a2a498ff959cd98c9d9c99a323ffa7a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToSpeechIsEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a6fee3fdcdc1c13868b0689951b70cc59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToSpeechEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a5a73975487b6315d411d90d5facb7c61</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToTranslateIsEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a39d6d17dacbed637a9d78e9c465578ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToTranslateEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a2430c646234338ed37a5539cc3222d3a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTextEditExample</name>
    <filename>classDTextEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTextEditPrivate</name>
    <filename>classDTextEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTextEncoding</name>
    <filename>classDtk_1_1Core_1_1DTextEncoding.html</filename>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>detectTextEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>ae48dc30613676f53fc7d543916679446</anchor>
      <arglist>(const QByteArray &amp;content)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>detectFileEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>af0b7eb7a80abfe8c02824b6d903cae2d</anchor>
      <arglist>(const QString &amp;fileName, bool *isOk=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertTextEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>a7ab11dbdce97d9c63fe3a583697633a5</anchor>
      <arglist>(QByteArray &amp;content, QByteArray &amp;outContent, const QByteArray &amp;toEncoding, const QByteArray &amp;fromEncoding=QByteArray(), QString *errString=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertFileEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>a4276cda37a02fc7d0f9a84617bc35dc9</anchor>
      <arglist>(const QString &amp;fileName, const QByteArray &amp;toEncoding, const QByteArray &amp;fromEncoding=QByteArray(), QString *errString=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertFileEncodingTo</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>a5dbba51d416ef0baae596843e84f94e3</anchor>
      <arglist>(const QString &amp;fromFile, const QString &amp;toFile, const QByteArray &amp;toEncoding, const QByteArray &amp;fromEncoding=QByteArray(), QString *errString=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DThemeHelper</name>
    <filename>classDThemeHelper.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DThemeManager</name>
    <filename>classDThemeManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>updateQss</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>ae78d35e3396040ba0506f72913f8fd41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>updateThemeOnParentChanged</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a50461d25217c0069c551acb33741b538</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>themeChanged</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a6b56394eb917d65eb34411ad5b18b6ba</anchor>
      <arglist>(QString theme)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>widgetThemeChanged</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a935500d53724a48ecf339facc2588b35</anchor>
      <arglist>(QWidget *widget, QString theme)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>theme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a1269cd50955112bacbc948de208363a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>theme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a0ce31d252aaf5f0d0638d8fe60a1e28d</anchor>
      <arglist>(const QWidget *widget, QWidget **baseWidget=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTheme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a154a40bbfa3b0f451e4dcad7c575cb8d</anchor>
      <arglist>(const QString theme)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTheme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a4471415713f48eedfd02e302cd64c246</anchor>
      <arglist>(QWidget *widget, const QString theme)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getQssForWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a904bddbfb290bd10129e351703e35ddd</anchor>
      <arglist>(const QString className, const QString &amp;theme=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getQssForWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a20c8d31f86378099233c494d42ce8e2a</anchor>
      <arglist>(const QWidget *widget) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DThemeManager *</type>
      <name>instance</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a6740a7b80d374761330d8ce9731c8bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a281a42fe36381f6ce3a39dfc303ffddf</anchor>
      <arglist>(QWidget *widget, QStringList properties=QStringList())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>aa9861fc8c5a234002c2a7f0afc174fba</anchor>
      <arglist>(QWidget *widget, const QString &amp;filename, const QStringList &amp;properties=QStringList())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DThemeManager</name>
    <filename>classDtk_1_1Widget_1_1DThemeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DThemeManagerPrivate</name>
    <filename>classDThemeManagerPrivate.html</filename>
    <member kind="function">
      <type>QString</type>
      <name>getQssContent</name>
      <anchorfile>classDThemeManagerPrivate.html</anchorfile>
      <anchor>a23c193f8b6c74104c271049e1c9bd322</anchor>
      <arglist>(const QString &amp;themeURL) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DThemeManagerStaticPrivate</name>
    <filename>classDThemeManagerStaticPrivate.html</filename>
    <base>DThemeManager</base>
  </compound>
  <compound kind="class">
    <name>DThumbnailProvider</name>
    <filename>classDThumbnailProvider.html</filename>
    <base>QThread</base>
    <member kind="function">
      <type>bool</type>
      <name>hasThumbnail</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>aa838450f7957307d263dde9944198cc1</anchor>
      <arglist>(const QFileInfo &amp;info) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>thumbnailFilePath</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>ac676eda030e0df7a743221d659d67729</anchor>
      <arglist>(const QFileInfo &amp;info, Size size) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>createThumbnail</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>a3ed30f951ff09a168a4142fcaf51260f</anchor>
      <arglist>(const QFileInfo &amp;info, Size size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInProduceQueue</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>ab56048abaea9c0e1d2d4296596680779</anchor>
      <arglist>(const QFileInfo &amp;info, Size size)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>aee7b946ff28292d3d1b0fc895d4bf024</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>defaultSizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>abb323b96d17b3c63201b30be3ff40652</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultSizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>a79ed0ac0a44cf2a4c3a781cec0678d87</anchor>
      <arglist>(qint64 size)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>sizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>a3849d0fd5753622b0a990ee029e2e7df</anchor>
      <arglist>(const QMimeType &amp;mimeType) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>ad414f5d051dab487223b62201bc1ee77</anchor>
      <arglist>(const QMimeType &amp;mimeType, qint64 size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DThumbnailProvider</name>
    <filename>classDtk_1_1Gui_1_1DThumbnailProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>DThumbnailProviderPrivate</name>
    <filename>classDThumbnailProviderPrivate.html</filename>
    <class kind="struct">DThumbnailProviderPrivate::ProduceInfo</class>
  </compound>
  <compound kind="class">
    <name>DTickEffect</name>
    <filename>classDTickEffect.html</filename>
    <base>QGraphicsEffect</base>
    <member kind="signal">
      <type>void</type>
      <name>finished</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>aee6bd933e885b4aafff8722419ce1c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>stateChanged</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>aac9cbf82b5a6c7248c92832f40a2787e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DTickEffect</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a8d5399bff8812f4d44631432c6551b91</anchor>
      <arglist>(QWidget *widget, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a11e1fa598c1800d90cba57fd24f89705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a143a1534ee3e8cdbbe427759bb5c0d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>aaefb304efff02faaa484819dbe7424ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a965b31c5e9d8a98fed3186cb53a14076</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a172e761d375dccea61db598c4738b1ba</anchor>
      <arglist>(Direction direction)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTickEffect</name>
    <filename>classDtk_1_1Widget_1_1DTickEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>DTickEffectPrivate</name>
    <filename>classDTickEffectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimedLoop</name>
    <filename>classDtk_1_1Core_1_1DTimedLoop.html</filename>
    <base>QEventLoop</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimedLoopPrivate</name>
    <filename>classDtk_1_1Core_1_1DTimedLoopPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <class kind="class">Dtk::Core::DTimedLoopPrivate::LoopGuard</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimeUnitFormatter</name>
    <filename>classDtk_1_1Core_1_1DTimeUnitFormatter.html</filename>
    <base>Dtk::Core::DAbstractUnitFormatter</base>
    <member kind="enumeration">
      <type></type>
      <name>TimeUnits</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>a9e6584592385affd85e9c31ce6b752eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>unitStr</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>add8728441c4c1edd123a8d7152db6d39</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMax</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>ab0512bd396c99df42c45768b22d00aa6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMin</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>ad604070ed1c8fdb148f62216e4312fbc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>unitConvertRate</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>ab42cba7fdd1d477851a25f61e2457e73</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTipLabel</name>
    <filename>classDTipLabel.html</filename>
    <base>DLabel</base>
    <member kind="function">
      <type></type>
      <name>DTipLabel</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>adb2ea15eaba635434e4f900cb75d7bac</anchor>
      <arglist>(const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>aa936fb0170fa5107a0be02a24c61e996</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundRole</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>abd3ebd13541137d0ec9a2e83c16be0ba</anchor>
      <arglist>(DPalette::ColorType color)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initPainter</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>a311decf0fdcc88761f67578e8eb0f051</anchor>
      <arglist>(QPainter *painter) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>a45dab468861cd9c5692ecf23ffaca7a6</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTipLabel</name>
    <filename>classDtk_1_1Widget_1_1DTipLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>DTipLabelPrivate</name>
    <filename>classDTipLabelPrivate.html</filename>
    <base>DLabelPrivate</base>
  </compound>
  <compound kind="class">
    <name>DTitlebar</name>
    <filename>classDTitlebar.html</filename>
    <base>QFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>toggleWindowState</name>
      <anchorfile>classDTitlebar.html</anchorfile>
      <anchor>a40fc6cdfbd886f4db37be5ed61f30fbf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTitleBarExample</name>
    <filename>classDTitleBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTitlebarPrivate</name>
    <filename>classDTitlebarPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DtkBuildVersion</name>
    <filename>classDtkBuildVersion.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DToast</name>
    <filename>classDtk_1_1Widget_1_1DToast.html</filename>
  </compound>
  <compound kind="class">
    <name>DToastPrivate</name>
    <filename>classDToastPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DToolButton</name>
    <filename>classDToolButton.html</filename>
    <base>QToolButton</base>
    <member kind="function">
      <type>void</type>
      <name>setAlignment</name>
      <anchorfile>classDToolButton.html</anchorfile>
      <anchor>aabd2d99c53676970892cf380401ea8c0</anchor>
      <arglist>(Qt::Alignment flag)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDToolButton.html</anchorfile>
      <anchor>ac736fa5425a5060ebbffc99c94ffcb15</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DToolButtonExample</name>
    <filename>classDToolButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DToolTip</name>
    <filename>classDtk_1_1Widget_1_1DToolTip.html</filename>
  </compound>
  <compound kind="class">
    <name>DToolTip</name>
    <filename>classDToolTip.html</filename>
    <base>DTipLabel</base>
    <member kind="function">
      <type></type>
      <name>DToolTip</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>abbafc3ad0b2a8fe2eaa7168f51725a40</anchor>
      <arglist>(const QString &amp;text, bool completionClose=true)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>a00178f3f5be4bde5bf33dd765f5634cc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>aa9aa5f8f9f66ddbd50f4440032764a5b</anchor>
      <arglist>(const QPoint &amp;pos, int duration)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DToolTipExample</name>
    <filename>classDToolTipExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTrashManager</name>
    <filename>classDtk_1_1Core_1_1DTrashManager.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTrashManager_</name>
    <filename>classDtk_1_1Core_1_1DTrashManager__.html</filename>
    <base>Dtk::Core::DTrashManager</base>
    <base>Dtk::Core::DTrashManager</base>
  </compound>
  <compound kind="class">
    <name>DTrashManager_</name>
    <filename>classDTrashManager__.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTrashManagerPrivate</name>
    <filename>classDtk_1_1Core_1_1DTrashManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DTrashManagerPrivate</name>
    <filename>classDTrashManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DTreeViewExample</name>
    <filename>classDTreeViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUnexpected</name>
    <filename>classDtk_1_1Core_1_1DUnexpected.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a950b013ce5a33d5b57b664c017211313</anchor>
      <arglist>(const DUnexpected &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a0ce85c95e77da80d0f98fec9770325b1</anchor>
      <arglist>(DUnexpected &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a493c1c51a7567cd5c68ab39209204f7e</anchor>
      <arglist>(Er &amp;&amp;_e) noexcept(std::is_nothrow_constructible&lt; E, Er &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a0421e74191594a9c449625d62ea3adaf</anchor>
      <arglist>(emplace_tag, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a706044dd2a0a5ef63ec92afa34b7d96a</anchor>
      <arglist>(emplace_tag, std::initializer_list&lt; U &gt; _li, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, std::initializer_list&lt; U &gt; &amp;, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>DUnexpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a1a039d4b24f19bdd70613df9372d0b64</anchor>
      <arglist>(const DUnexpected &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>DUnexpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>ac7a903199abc13334c69a11b922f7b0c</anchor>
      <arglist>(DUnexpected &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr const E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a4b74f0e9ece5294b5a57924449519095</anchor>
      <arglist>() const &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>ad843d3b2aae4e9bf78a7553be5b5b72f</anchor>
      <arglist>() &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>ae5c8c53ae541ef9c1227907514e0e25f</anchor>
      <arglist>() const &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a7bdf7f49faa2854fe656447a7282c0b9</anchor>
      <arglist>() &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>abb5b1d0e8bcce68a05eea118c06fdc3d</anchor>
      <arglist>(DUnexpected &amp;_other)</arglist>
    </member>
    <member kind="friend">
      <type>constexpr friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a37b128bcb110d543e3e430c3bef14645</anchor>
      <arglist>(const DUnexpected &amp;_x, const DUnexpected&lt; Er &gt; _y)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>af8abb690c18e0202b0245252a4976b2b</anchor>
      <arglist>(DUnexpected &amp;_x, DUnexpected &amp;_y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DVariantListModel</name>
    <filename>classDVariantListModel.html</filename>
    <base>QAbstractListModel</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DVBoxWidget</name>
    <filename>classDtk_1_1Widget_1_1DVBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DVBoxWidget</name>
    <filename>classDVBoxWidget.html</filename>
    <base>DBoxWidget</base>
    <member kind="function">
      <type></type>
      <name>DVBoxWidget</name>
      <anchorfile>classDVBoxWidget.html</anchorfile>
      <anchor>a415e93c982ea2f7535261db5f8e1e522</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DVerticalLine</name>
    <filename>classDVerticalLine.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>DVerticalLineExample</name>
    <filename>classDVerticalLineExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DViewItemAction</name>
    <filename>classDtk_1_1Widget_1_1DViewItemAction.html</filename>
  </compound>
  <compound kind="class">
    <name>DViewItemAction</name>
    <filename>classDViewItemAction.html</filename>
    <base>QAction</base>
    <member kind="function">
      <type></type>
      <name>DViewItemAction</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a1658acf30956d5dacecfe93ad7d762a1</anchor>
      <arglist>(Qt::Alignment alignment=Qt::Alignment(), const QSize &amp;iconSize=QSize(), const QSize &amp;maxSize=QSize(), bool clickable=false)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ad81adef83a0528210d46e42af0238a0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a071bfd942854c2815bbdf6052dc81415</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>maximumSize</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>af1eaa8a68691b5460ac71f2ade3e37ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QMargins</type>
      <name>clickAreaMargins</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab3493db9c0f3c20c21bbde34a37b6182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickAreaMargins</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a3550339319cf763903319f6631c3d85c</anchor>
      <arglist>(const QMargins &amp;margins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextColorRole</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab11cf88053bb97ca5f4f7be4d53e4f72</anchor>
      <arglist>(DPalette::ColorType role)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextColorRole</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>abab85bdd9ee411b51957fdfefa366a68</anchor>
      <arglist>(DPalette::ColorRole role)</arglist>
    </member>
    <member kind="function">
      <type>DPalette::ColorType</type>
      <name>textColorType</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab3427b9739577ba1e3a3bdfd358e3450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DPalette::ColorRole</type>
      <name>textColorRole</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>abf7e3b245f5dea6ac53a7984d9afe193</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontSize</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a668392d3165801db3a6dd95ccf7dfd66</anchor>
      <arglist>(DFontSizeManager::SizeType size)</arglist>
    </member>
    <member kind="function">
      <type>QFont</type>
      <name>font</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a8b097a51d20a5e93ba9c23e7045809a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClickable</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>aaccc8e3eb655336b24e5f7cbcfa0668b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab3c6fed7b0d074f75994f9cb3492c28e</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>widget</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a1eba389c2d767a83f5de059481c23270</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DViewItemActionPrivate</name>
    <filename>classDViewItemActionPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DVtableHook</name>
    <filename>classDtk_1_1Core_1_1DVtableHook.html</filename>
    <class kind="struct">Dtk::Core::DVtableHook::CheckCompatibleArguments</class>
    <class kind="struct">Dtk::Core::DVtableHook::CheckCompatibleArguments&lt; List, List &gt;</class>
    <class kind="struct">Dtk::Core::DVtableHook::FunctionPointer</class>
    <class kind="struct">Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...) const &gt;</class>
    <class kind="struct">Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...)&gt;</class>
    <class kind="class">Dtk::Core::DVtableHook::OverrideDestruct</class>
    <class kind="struct">Dtk::Core::DVtableHook::StdFunWrap</class>
    <class kind="struct">Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...) const &gt;</class>
    <class kind="struct">Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...)&gt;</class>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getDestructFunIndex</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>af3335b0851cbf352b49288d781a114eb</anchor>
      <arglist>(quintptr **obj, std::function&lt; void(void)&gt; destoryObjFun)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasVtable</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>ad9bf13138d3bb82733f8ac2e15ade8dc</anchor>
      <arglist>(const void *obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static quintptr</type>
      <name>resetVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>aabc6c7b0bd66d421200d26fc3cb81580</anchor>
      <arglist>(const void *obj, quintptr functionOffset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static quintptr</type>
      <name>originalFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a132614b24c6a61667c2be9d87f9366c0</anchor>
      <arglist>(const void *obj, quintptr functionOffset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QFunctionPointer</type>
      <name>resolve</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a5acbbee11fa3e3a29116dc92b5825733</anchor>
      <arglist>(const char *symbol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>overrideVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a5aa6702895e7b1ff42973e66936749b0</anchor>
      <arglist>(quintptr *vfptr_t1, Fun1 fun1, quintptr *vfptr_t2, Fun2 fun2, bool forceWrite)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool ::type</type>
      <name>overrideVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a026daf635fcf4ed8f947326a53f5476f</anchor>
      <arglist>(quintptr *vfptr_t1, Fun1 fun1, Fun2 fun2, bool forceWrite)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>overrideVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a1c6ee5e0b50f1dc4d0bebd7c483960d8</anchor>
      <arglist>(const typename QtPrivate::FunctionPointer&lt; Fun1 &gt;::Object *t1, Fun1 fun1, Fun2 fun2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWarningButton</name>
    <filename>classDtk_1_1Widget_1_1DWarningButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWarningButton</name>
    <filename>classDWarningButton.html</filename>
    <base>QPushButton</base>
    <member kind="function">
      <type></type>
      <name>DWarningButton</name>
      <anchorfile>classDWarningButton.html</anchorfile>
      <anchor>a22b75b16a6305631be852d84daab6055</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initStyleOption</name>
      <anchorfile>classDWarningButton.html</anchorfile>
      <anchor>a5843d414bfc9720109d17ee02296f9b8</anchor>
      <arglist>(QStyleOptionButton *option) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWarningButtonExample</name>
    <filename>classDWarningButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWaterProgress</name>
    <filename>classDtk_1_1Widget_1_1DWaterProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>DWaterProgress</name>
    <filename>classDWaterProgress.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a7604f118c16739597e4da5bd8bdf3925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a5c3e6c619b127ae94ec834ad4b2ecb87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>aafe5e569192626a4789e9d3c780693cd</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTextVisible</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a3e27ff273e0ba66ae432a3caea45155a</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a695c1bec94c1a9f5cb5a8a34cdbda3e7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWaterProgressExample</name>
    <filename>classDWaterProgressExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DWaterProgressPrivate</name>
    <filename>classDWaterProgressPrivate.html</filename>
    <member kind="function">
      <type>void</type>
      <name>initUI</name>
      <anchorfile>classDWaterProgressPrivate.html</anchorfile>
      <anchor>a9479aa32dece5137a6f6751faed7b89f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowCloseButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowCloseButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowCloseButton</name>
    <filename>classDWindowCloseButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DWindowCloseButton</name>
      <anchorfile>classDWindowCloseButton.html</anchorfile>
      <anchor>aceea0844f7cba373e4ae74e014286993</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DWindowGroupLeader</name>
    <filename>classDtk_1_1Gui_1_1DWindowGroupLeader.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowGroupLeader</name>
    <filename>classDWindowGroupLeader.html</filename>
    <member kind="function">
      <type></type>
      <name>DWindowGroupLeader</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>ac1f3251da73804d558fbb877d79e0d64</anchor>
      <arglist>(quint32 groupId=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DWindowGroupLeader</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a099b53d70601304f4dd73201eeb1ee73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>groupLeaderId</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a988d6256932d50a7a9908decb8d10343</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>clientLeaderId</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a225094f84899f7339322173524dc9363</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWindow</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>abdd1d9f3bfecb9137a691b275bcdbc89</anchor>
      <arglist>(QWindow *window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWindow</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a9c692047778e89080db131c310c21916</anchor>
      <arglist>(QWindow *window)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowGroupLeaderPrivate</name>
    <filename>classDWindowGroupLeaderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DWindowManagerHelper</name>
    <filename>classDtk_1_1Gui_1_1DWindowManagerHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowManagerHelper</name>
    <filename>classDWindowManagerHelper.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>windowManagerChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a8e4e04a0c8f1b8dab31dffd02c53a4b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasBlurWindowChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a17eee66c740dbb3745b45bb4c79f996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasCompositeChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a2be7d6c0894a9c49274e9c8b7f69de34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasNoTitlebarChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>af82ca6cd17b87ea8d04fdd9c310efd22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasWallpaperEffectChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a81153d38faf3743248433325392dd7fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowListChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a6ae4c869f60c6f9e20983c0ab0f880e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowMotifWMHintsChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aee57e14861a350e1a91204037bc5e6e3</anchor>
      <arglist>(quint32 winId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBlurWindow</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a9d8049eb443e6e74f7956ee53d05493c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasComposite</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a15c73557e57ec826c796588235da9067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNoTitlebar</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a871757a459c300857630f62bd2d02e98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasWallpaperEffect</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aa11f2201b491cbc894852a2e7548e72e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>windowManagerNameString</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aede0872cc89b70173fa383d7822a04b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WMName</type>
      <name>windowManagerName</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aa236fdabbf24bec87f6e0f6a7e4506e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVector&lt; quint32 &gt;</type>
      <name>allWindowIdList</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a478b322303b7dc67973dbdfea4020565</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVector&lt; quint32 &gt;</type>
      <name>currentWorkspaceWindowIdList</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aceb9757b8e420dab428560c24b09b25a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DForeignWindow * &gt;</type>
      <name>currentWorkspaceWindows</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a6225c7cc9df459f5af43fe770682a7cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>windowFromPoint</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a2569633854d14776ab1ce715985e2880</anchor>
      <arglist>(const QPoint &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DWindowManagerHelper *</type>
      <name>instance</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ac7c478902c61d28b137ff2198164d737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMotifFunctions</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ad561e93d87fa1855e838b27b514f15bc</anchor>
      <arglist>(const QWindow *window, MotifFunctions hints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifFunctions</type>
      <name>setMotifFunctions</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a186b9916c340db55abaa9cb989c051be</anchor>
      <arglist>(const QWindow *window, MotifFunctions hints, bool on)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifFunctions</type>
      <name>getMotifFunctions</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ad95d3a6f1d24b1f382266784bc910d53</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMotifDecorations</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ad62bc88f923ee6e2077f380797635f21</anchor>
      <arglist>(const QWindow *window, MotifDecorations hints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifDecorations</type>
      <name>setMotifDecorations</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a115016382badfb72b46d8a2d17357517</anchor>
      <arglist>(const QWindow *window, MotifDecorations hints, bool on)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifDecorations</type>
      <name>getMotifDecorations</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a492dddd1de6837f03dea79a40d448841</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setWmWindowTypes</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a1b75247826a413dbd342af14c3108f9f</anchor>
      <arglist>(QWindow *window, WmWindowTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setWmClassName</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a243e055224674719952676cb0c4c6fba</anchor>
      <arglist>(const QByteArray &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>popupSystemWindowMenu</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a2ea9fc4f72173724caebdf38bbfaa5f3</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DWindowManagerHelper</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a138e23ca39a0896ede34f81b2407fe56</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasBlurWindow</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a578fb91ce8d8e2e8da4a5fab2289588f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasComposite</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a077754f2223ef12dc66d46dc10386ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasNoTitlebar</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>abeae2e698f8eed570c5ad5fc79fb41ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasWallpaperEffect</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a6d058b14a94b10f269ce7ebeea9c1afd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowManagerHelper_</name>
    <filename>classDWindowManagerHelper__.html</filename>
    <base>DWindowManagerHelper</base>
  </compound>
  <compound kind="class">
    <name>DWindowManagerHelperPrivate</name>
    <filename>classDWindowManagerHelperPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowMaxButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowMaxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowMaxButton</name>
    <filename>classDWindowMaxButton.html</filename>
    <base>DIconButton</base>
    <member kind="signal">
      <type>void</type>
      <name>maximizedChanged</name>
      <anchorfile>classDWindowMaxButton.html</anchorfile>
      <anchor>a53655aa5cd0352306f14818ef24a854c</anchor>
      <arglist>(bool isMaximized)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DWindowMaxButton</name>
      <anchorfile>classDWindowMaxButton.html</anchorfile>
      <anchor>ad71aae4654333537f57bc2492ae9f426</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>isMaximized</name>
      <anchorfile>classDWindowMaxButton.html</anchorfile>
      <anchor>a644b336a9441697e5074a45c26dfde60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowMaxButtonPrivate</name>
    <filename>classDWindowMaxButtonPrivate.html</filename>
    <base>DIconButtonPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowMinButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowMinButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowMinButton</name>
    <filename>classDWindowMinButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DWindowMinButton</name>
      <anchorfile>classDWindowMinButton.html</anchorfile>
      <anchor>a65ce5ba6a412bb3956ad5159a4fef0d7</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowOptionButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowOptionButton</name>
    <filename>classDWindowOptionButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DWindowOptionButton</name>
      <anchorfile>classDWindowOptionButton.html</anchorfile>
      <anchor>a46c68e33209e99fc3771e4ad852fd700</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowQuitFullButton</name>
    <filename>classDWindowQuitFullButton.html</filename>
    <base>DIconButton</base>
  </compound>
  <compound kind="class">
    <name>EditExampleWindow</name>
    <filename>classEditExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>EntryNode</name>
    <filename>structEntryNode.html</filename>
  </compound>
  <compound kind="class">
    <name>EntryPropertyParser</name>
    <filename>classEntryPropertyParser.html</filename>
  </compound>
  <compound kind="class">
    <name>ExampleWindowInterface</name>
    <filename>classExampleWindowInterface.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ExampStatusBar</name>
    <filename>classExampStatusBar.html</filename>
    <base>QStatusBar</base>
  </compound>
  <compound kind="class">
    <name>ExampTitlebar</name>
    <filename>classExampTitlebar.html</filename>
    <base>DTitlebar</base>
  </compound>
  <compound kind="class">
    <name>ExampWindow</name>
    <filename>classExampWindow.html</filename>
    <base>DMainWindow</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::FileAppender</name>
    <filename>classDtk_1_1Core_1_1FileAppender.html</filename>
    <base>Dtk::Core::AbstractStringAppender</base>
    <member kind="function">
      <type></type>
      <name>FileAppender</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>aabaa304b319baeb59715e757eac11891</anchor>
      <arglist>(const QString &amp;fileName=QString())</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>ac227460c051d06577f6d259095543a8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>a571109a39d62316c03519b4ace89767e</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>size</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>a7cf941865167cccbf4275b442ea865fb</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTabBarPrivate::FullWidget</name>
    <filename>classDTabBarPrivate_1_1FullWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DThreadUtil::FunctionCallProxy</name>
    <filename>classDtk_1_1Core_1_1DThreadUtil_1_1FunctionCallProxy.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::FunctionPointer</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1FunctionPointer.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...) const &gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1FunctionPointer_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...)&gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1FunctionPointer_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="class">
    <name>GraphicsView</name>
    <filename>classGraphicsView.html</filename>
    <base>QGraphicsView</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::GSettingsBackend</name>
    <filename>classDtk_1_1Core_1_1GSettingsBackend.html</filename>
    <base>Dtk::Core::DSettingsBackend</base>
    <member kind="function">
      <type></type>
      <name>GSettingsBackend</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>a6f9bc00eba6ec2096e82c3c9db05cc1a</anchor>
      <arglist>(DSettings *settings, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>a12ac28c2996fdd6b6a945205487ed2a4</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>ae46f737d28374f7c7a99cf620294c836</anchor>
      <arglist>(const QString &amp;key) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>aaa2c459c00c3743d064bdd5518073509</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>adb2b8532b657a907d3a1e502cb79b96c</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::GSettingsBackendPrivate</name>
    <filename>classDtk_1_1Core_1_1GSettingsBackendPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::Guard</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1Guard.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>ImageEntry</name>
    <filename>classImageEntry.html</filename>
  </compound>
  <compound kind="class">
    <name>ImageViewerExample</name>
    <filename>classImageViewerExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>ImageViewerExampleWindow</name>
    <filename>classImageViewerExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>KeySequenceEdit</name>
    <filename>classKeySequenceEdit.html</filename>
    <base>DKeySequenceEdit</base>
  </compound>
  <compound kind="struct">
    <name>DDciIconEntry::ScalableLayer::Layer</name>
    <filename>structDDciIconEntry_1_1ScalableLayer_1_1Layer.html</filename>
  </compound>
  <compound kind="class">
    <name>LayoutExampleWindow</name>
    <filename>classLayoutExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>LCDNumberExampleWindow</name>
    <filename>classLCDNumberExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LibICU</name>
    <filename>classDtk_1_1Core_1_1LibICU.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::Libuchardet</name>
    <filename>classDtk_1_1Core_1_1Libuchardet.html</filename>
  </compound>
  <compound kind="class">
    <name>ListViewExampleWindow</name>
    <filename>classListViewExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>LoadManualServiceWorker</name>
    <filename>classLoadManualServiceWorker.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LogDevice</name>
    <filename>classDtk_1_1Core_1_1LogDevice.html</filename>
    <base>QIODevice</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::Logger</name>
    <filename>classDtk_1_1Core_1_1Logger.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>LogLevel</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a4a76b1db357f61044ed67411d1c378b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Logger</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a8bf632cb87800101031e5c19773cca38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Logger</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>ae2f834f683f7379d92de6e413c5acb8b</anchor>
      <arglist>(const QString &amp;defaultCategory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Logger</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>ab4eea40e26ce45df1c18058f97d1b11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAppender</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a2bcdf12779fa8567bb2079edf027662d</anchor>
      <arglist>(AbstractAppender *appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCategoryAppender</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a95ef2b960342e8153edd908b2f05029c</anchor>
      <arglist>(const QString &amp;category, AbstractAppender *appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logToGlobalInstance</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a87f67b2b6ed4ffec4096ffd5e118beca</anchor>
      <arglist>(const QString &amp;category, bool logToGlobal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultCategory</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a4a88302ec9c667bc47529d234da516d4</anchor>
      <arglist>(const QString &amp;category)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>defaultCategory</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a4a372bad2146536722eafc6a8c086c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a7c89067d5a040ea79c481038dbdd565f</anchor>
      <arglist>(const QDateTime &amp;time, LogLevel level, const char *file, int line, const char *func, const char *category, const QString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>abc14a059bda2bdb2b22b71e4d6c71ef4</anchor>
      <arglist>(LogLevel level, const char *file, int line, const char *func, const char *category, const QString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>QDebug</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a7859e553c3fbb0b78802cd78c78389da</anchor>
      <arglist>(LogLevel level, const char *file, int line, const char *func, const char *category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeAssert</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a2e743f432d95b256c86e6ee5575270ba</anchor>
      <arglist>(const char *file, int line, const char *func, const char *condition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Logger *</type>
      <name>globalInstance</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>af7aa5612396574e4274660fe3c4e307a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>levelToString</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a9cb3cfe90fe951388a00ec2a2a76369d</anchor>
      <arglist>(LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LogLevel</type>
      <name>levelFromString</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a477f08222e3c87f3acf4b9a5da95bc85</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LoggerPrivate</name>
    <filename>classDtk_1_1Core_1_1LoggerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LoggerTimingHelper</name>
    <filename>classDtk_1_1Core_1_1LoggerTimingHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimedLoopPrivate::LoopGuard</name>
    <filename>classDtk_1_1Core_1_1DTimedLoopPrivate_1_1LoopGuard.html</filename>
  </compound>
  <compound kind="class">
    <name>MainWindow</name>
    <filename>classMainWindow.html</filename>
    <base>DMainWindow</base>
    <base>DMainWindow</base>
    <member kind="slot" protection="protected">
      <type>void</type>
      <name>menuItemInvoked</name>
      <anchorfile>classMainWindow.html</anchorfile>
      <anchor>a412e842d3d727cdb70787d6e8b7ab87d</anchor>
      <arglist>(QAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DtkCorePrivate::MainWorker</name>
    <filename>classDtk_1_1Core_1_1DtkCorePrivate_1_1MainWorker.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>MenuExampleWindow</name>
    <filename>classMenuExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>MessageLabel</name>
    <filename>classMessageLabel.html</filename>
    <base>QLabel</base>
    <base>QLabel</base>
    <base>QLabel</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DSysInfoPrivate::MinVersion</name>
    <filename>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_BC_D</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226ae1a539886af53a82ce6a542f4c9bf024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_Y_Z</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a20fcd66596bb70e1a4a71a79b266b8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_B_C</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a32470f77d16c7fe2479ffb80052c3e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_BC_D</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226ae1a539886af53a82ce6a542f4c9bf024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_Y_Z</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a20fcd66596bb70e1a4a71a79b266b8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_B_C</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a32470f77d16c7fe2479ffb80052c3e08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MockDTaskbarControl</name>
    <filename>classMockDTaskbarControl.html</filename>
    <base>DTaskbarControl</base>
  </compound>
  <compound kind="class">
    <name>MultiSingletonTester</name>
    <filename>classMultiSingletonTester.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>XUtils::MwmHints</name>
    <filename>structXUtils_1_1MwmHints.html</filename>
  </compound>
  <compound kind="class">
    <name>Navigation</name>
    <filename>classNavigation.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>NavigationDelegate</name>
    <filename>classNavigationDelegate.html</filename>
    <base>DStyledItemDelegate</base>
  </compound>
  <compound kind="class">
    <name>NavigationPrivate</name>
    <filename>classNavigationPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DDciFilePrivate::Node</name>
    <filename>structDtk_1_1Core_1_1DDciFilePrivate_1_1Node.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWidgetPrivate::NumberUpData::NumberItem</name>
    <filename>classDPrintPreviewWidgetPrivate_1_1NumberUpData_1_1NumberItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="struct">
    <name>DPrintPreviewWidgetPrivate::NumberUpData</name>
    <filename>structDPrintPreviewWidgetPrivate_1_1NumberUpData.html</filename>
    <class kind="class">DPrintPreviewWidgetPrivate::NumberUpData::NumberItem</class>
    <class kind="struct">DPrintPreviewWidgetPrivate::NumberUpData::WaterMarkProperty</class>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DSysInfoPrivate::OSBuild</name>
    <filename>structDtk_1_1Core_1_1DSysInfoPrivate_1_1OSBuild.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::OutputDebugAppender</name>
    <filename>classDtk_1_1Core_1_1OutputDebugAppender.html</filename>
    <base>Dtk::Core::AbstractStringAppender</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>append</name>
      <anchorfile>classDtk_1_1Core_1_1OutputDebugAppender.html</anchorfile>
      <anchor>a967ccfa7b072aed5e4740bfcf5971b91</anchor>
      <arglist>(const QDateTime &amp;time, Logger::LogLevel level, const char *file, int line, const char *func, const QString &amp;category, const QString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DVtableHook::OverrideDestruct</name>
    <filename>classDtk_1_1Core_1_1DVtableHook_1_1OverrideDestruct.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>PageItem</name>
    <filename>classPageItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="class">
    <name>PageWindowInterface</name>
    <filename>classPageWindowInterface.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="struct">
    <name>Pop</name>
    <filename>structPop.html</filename>
  </compound>
  <compound kind="class">
    <name>PopupMenuStyle</name>
    <filename>classPopupMenuStyle.html</filename>
    <base>QProxyStyle</base>
  </compound>
  <compound kind="class">
    <name>PreviewSettingsPluginHelper</name>
    <filename>classPreviewSettingsPluginHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>PrintPreviewSettingsPlugin</name>
    <filename>classPrintPreviewSettingsPlugin.html</filename>
    <base>QObject</base>
    <base>DPrintPreviewSettingInterface</base>
  </compound>
  <compound kind="struct">
    <name>DThumbnailProviderPrivate::ProduceInfo</name>
    <filename>structDThumbnailProviderPrivate_1_1ProduceInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>ProgressBarExampleWindow</name>
    <filename>classProgressBarExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::QSettingBackend</name>
    <filename>classDtk_1_1Core_1_1QSettingBackend.html</filename>
    <base>Dtk::Core::DSettingsBackend</base>
    <member kind="function">
      <type></type>
      <name>QSettingBackend</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>aca442d9d70d96f2dcee724f3db6d635c</anchor>
      <arglist>(const QString &amp;filepath, QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>a605acf726ee9b734f7ee722aa24f7cb5</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>ac008653f5d4364c32f39d41df46849e7</anchor>
      <arglist>(const QString &amp;key) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>ad485cbd3df7ec18fd272d04d6908f31d</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>a48f2d2eb49c33a556b51a9a24bbc8ac5</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::QSettingBackendPrivate</name>
    <filename>classDtk_1_1Core_1_1QSettingBackendPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::remove_cvref</name>
    <filename>structDtk_1_1Core_1_1remove__cvref.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::RollingFileAppender</name>
    <filename>classDtk_1_1Core_1_1RollingFileAppender.html</filename>
    <base>Dtk::Core::FileAppender</base>
    <member kind="enumeration">
      <type></type>
      <name>DatePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a993d4921afa93843ed79e7ea89722c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RollingFileAppender</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>ac4519e8fc7d10290b47974bea7e7cf4e</anchor>
      <arglist>(const QString &amp;fileName=QString())</arglist>
    </member>
    <member kind="function">
      <type>DatePattern</type>
      <name>datePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a54dcf2d38b87ec6cae557560bb6179f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a94e06d3cb5f6d1f4ce1a771572fde646</anchor>
      <arglist>(DatePattern datePattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a13ad1aa32a3d460291a1a355e96a4cae</anchor>
      <arglist>(const QString &amp;datePattern)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>datePatternString</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>acb2ff71acbb48d3281f2ad75892f736c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFilesLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a2f91ea75f3b4ba0cacbdd6e013718428</anchor>
      <arglist>(int limit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>logFilesLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a99d3343d001eb337e95441803f2117a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogSizeLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a507bb5a3694cb91570d18560d842bd24</anchor>
      <arglist>(int limit)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>logSizeLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a7500ec2fcaeee4c629ba344cc8f790e1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RSvg</name>
    <filename>classRSvg.html</filename>
  </compound>
  <compound kind="class">
    <name>RubberBandExampleWindow</name>
    <filename>classRubberBandExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DDciIconEntry::ScalableLayer</name>
    <filename>structDDciIconEntry_1_1ScalableLayer.html</filename>
    <class kind="struct">DDciIconEntry::ScalableLayer::Layer</class>
  </compound>
  <compound kind="class">
    <name>ScrollBarExampleWindow</name>
    <filename>classScrollBarExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>ShortcutEdit</name>
    <filename>classShortcutEdit.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ShortcutEditPrivate</name>
    <filename>classShortcutEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Singleton</name>
    <filename>classSingleton.html</filename>
    <base>QObject</base>
    <base>DSingleton&lt; Singleton &gt;</base>
  </compound>
  <compound kind="class">
    <name>SliderExampleWindow</name>
    <filename>classSliderExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>SliderStrip</name>
    <filename>classSliderStrip.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setScaleInfo</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>a6a195422bfab5d454cf7c0c8aa7a6d4d</anchor>
      <arglist>(QStringList scaleInfo, QSlider::TickPosition tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkList</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>a3e1041cc8fa08b850208047868cac9c9</anchor>
      <arglist>(QList&lt; int &gt; list, QSlider::TickPosition tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>getList</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>aaa9f2b779d3f48162f5cac5446ab1cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getScaleInfo</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>aff02103dd3d03b60ab1948ae0808cc71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>a76d370c312915c30471f13d18525cf2f</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>ae8148ce8b19e5f348b3addac0337166a</anchor>
      <arglist>(QEvent *e) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SpecialSlider</name>
    <filename>classSpecialSlider.html</filename>
    <base>QSlider</base>
  </compound>
  <compound kind="class">
    <name>SpinnerExampleWindow</name>
    <filename>classSpinnerExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>StartupNotificationMonitor</name>
    <filename>classStartupNotificationMonitor.html</filename>
    <base>QObject</base>
    <base>QAbstractNativeEventFilter</base>
    <member kind="signal">
      <type>void</type>
      <name>appStartup</name>
      <anchorfile>classStartupNotificationMonitor.html</anchorfile>
      <anchor>a551bf6841ac14f3d60161ef45eba88a1</anchor>
      <arglist>(QString id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>appStartupCompleted</name>
      <anchorfile>classStartupNotificationMonitor.html</anchorfile>
      <anchor>a8f80fb06c0a8ced61184e2b693ce3ba9</anchor>
      <arglist>(QString id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StartupNotificationMonitorSub</name>
    <filename>classStartupNotificationMonitorSub.html</filename>
    <base>StartupNotificationMonitor</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::StdFunWrap</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1StdFunWrap.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...) const &gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1StdFunWrap_3_01StdFun_00_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <base>Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...)&gt;</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...)&gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1StdFunWrap_3_01StdFun_00_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>SupportFormats</name>
    <filename>structSupportFormats.html</filename>
  </compound>
  <compound kind="struct">
    <name>DTabBarPrivate::TabBarAnimation</name>
    <filename>structDTabBarPrivate_1_1TabBarAnimation.html</filename>
    <base>QVariantAnimation</base>
  </compound>
  <compound kind="class">
    <name>TDFontManager</name>
    <filename>classTDFontManager.html</filename>
    <base>DTestWithParam&lt; int &gt;</base>
  </compound>
  <compound kind="class">
    <name>TDForeignWindow</name>
    <filename>classTDForeignWindow.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDGuiApplicationHelper</name>
    <filename>classTDGuiApplicationHelper.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDImageHandler</name>
    <filename>classTDImageHandler.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDPalette</name>
    <filename>classTDPalette.html</filename>
    <base>DTestWithParam&lt; int &gt;</base>
  </compound>
  <compound kind="class">
    <name>TDPlatformHandle</name>
    <filename>classTDPlatformHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>TDPlatformTheme</name>
    <filename>classTDPlatformTheme.html</filename>
  </compound>
  <compound kind="class">
    <name>TDRegionMonitor</name>
    <filename>classTDRegionMonitor.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDSvgRenderer</name>
    <filename>classTDSvgRenderer.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDTaskbarControl</name>
    <filename>classTDTaskbarControl.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDThumbnailProvider</name>
    <filename>classTDThumbnailProvider.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDWindowGroupLeader</name>
    <filename>classTDWindowGroupLeader.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDWindowMangerHelper</name>
    <filename>classTDWindowMangerHelper.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TestDCIFileHelper</name>
    <filename>classTestDCIFileHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>TestListItem</name>
    <filename>classTestListItem.html</filename>
    <base>DSimpleListItem</base>
    <base>DSimpleListItem</base>
    <member kind="function">
      <type>bool</type>
      <name>sameAs</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a2ecd754cd8ab181415a97f71eada7b27</anchor>
      <arglist>(DSimpleListItem *item) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawBackground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>aea38358bd8adb9016e1c6ad655dc23d6</anchor>
      <arglist>(QRect rect, QPainter *painter, int index, bool isSelect, bool isHover) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawForeground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a6b93edafcebbaadbbe78cee6791542ff</anchor>
      <arglist>(QRect rect, QPainter *painter, int column, int index, bool isSelect, bool isHover) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sameAs</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a2ecd754cd8ab181415a97f71eada7b27</anchor>
      <arglist>(DSimpleListItem *item) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawBackground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>aea38358bd8adb9016e1c6ad655dc23d6</anchor>
      <arglist>(QRect rect, QPainter *painter, int index, bool isSelect, bool isHover) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawForeground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a6b93edafcebbaadbbe78cee6791542ff</anchor>
      <arglist>(QRect rect, QPainter *painter, int column, int index, bool isSelect, bool isHover) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestPrintPreviewDialog</name>
    <filename>classTestPrintPreviewDialog.html</filename>
    <base>DPrintPreviewDialog</base>
    <base>DPrintPreviewDialog</base>
  </compound>
  <compound kind="class">
    <name>TestTaskbarWindow</name>
    <filename>classTestTaskbarWindow.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ThreadUtils</name>
    <filename>classThreadUtils.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>ToolTipExampleWindow</name>
    <filename>classToolTipExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DAbstractStackWidgetTransition::TransitionInfo</name>
    <filename>structDAbstractStackWidgetTransition_1_1TransitionInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ArrowButtonIcon</name>
    <filename>classut__ArrowButtonIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ColorButton</name>
    <filename>classut__ColorButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ColorLabel</name>
    <filename>classut__ColorLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ColorSlider</name>
    <filename>classut__ColorSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAboutDialog</name>
    <filename>classut__DAboutDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAbstractDialog</name>
    <filename>classut__DAbstractDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAlertcontrol</name>
    <filename>classut__DAlertcontrol.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAnchors</name>
    <filename>classut__DAnchors.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAnchorsBase</name>
    <filename>classut__DAnchorsBase.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowButton</name>
    <filename>classut__DArrowButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowLineDrawer</name>
    <filename>classut__DArrowLineDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowLineExpand</name>
    <filename>classut__DArrowLineExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowRectangle</name>
    <filename>classut__DArrowRectangle.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBackgroundGroup</name>
    <filename>classut__DBackgroundGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBaseExpand</name>
    <filename>classut__DBaseExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBaseLine</name>
    <filename>classut__DBaseLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBlurEffectWidget</name>
    <filename>classut__DBlurEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBoxWidget</name>
    <filename>classut__DBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DButtonBox</name>
    <filename>classut__DButtonBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DButtonBoxButton</name>
    <filename>classut__DButtonBoxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCapFSFileEngine</name>
    <filename>classut__DCapFSFileEngine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCI</name>
    <filename>classut__DCI.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCircleProgress</name>
    <filename>classut__DCircleProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DClipEffectWidget</name>
    <filename>classut__DClipEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DColoredProgressBar</name>
    <filename>classut__DColoredProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCommandLinkButton</name>
    <filename>classut__DCommandLinkButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DConfig</name>
    <filename>classut__DConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DConfigFile</name>
    <filename>classut__DConfigFile.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCrumbedit</name>
    <filename>classut__DCrumbedit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDialog</name>
    <filename>classut__DDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDialogCloseButton</name>
    <filename>classut__DDialogCloseButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDiskSizeFormatter</name>
    <filename>classut__DDiskSizeFormatter.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDoubleSpinBox</name>
    <filename>classut__DDoubleSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDrawer</name>
    <filename>classut__DDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDrawerGroup</name>
    <filename>classut__DDrawerGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DEnhancedWidget</name>
    <filename>classut__DEnhancedWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DesktopEntry</name>
    <filename>classut__DesktopEntry.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DExpandGroup</name>
    <filename>classut__DExpandGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileChooserEdit</name>
    <filename>classut__DFileChooserEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileDialog</name>
    <filename>classut__DFileDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileSystemWatcher</name>
    <filename>classut__DFileSystemWatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileWatcher</name>
    <filename>classut__DFileWatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileWatcherManager</name>
    <filename>classut__DFileWatcherManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFloatingButton</name>
    <filename>classut__DFloatingButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFloatingMessage</name>
    <filename>classut__DFloatingMessage.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFloatingWidget</name>
    <filename>classut__DFloatingWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFlowLayout</name>
    <filename>classut__DFlowLayout.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFontSizeManager</name>
    <filename>classut__DFontSizeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFrame</name>
    <filename>classut__DFrame.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DGraphicsClipEffect</name>
    <filename>classut__DGraphicsClipEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DGraphicsGlowEffect</name>
    <filename>classut__DGraphicsGlowEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DHeaderLine</name>
    <filename>classut__DHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DHorizontalLine</name>
    <filename>classut__DHorizontalLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DImageViewer</name>
    <filename>classut__DImageViewer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DInputDialog</name>
    <filename>classut__DInputDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DIpv4LineEdit</name>
    <filename>classut__DIpv4LineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DKeySequenceEdit</name>
    <filename>classut__DKeySequenceEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DLabel</name>
    <filename>classut__DLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DLineEdit</name>
    <filename>classut__DLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DListView</name>
    <filename>classut__DListView.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DLoadingIndicator</name>
    <filename>classut__DLoadingIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMainWindow</name>
    <filename>classut__DMainWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMessageManager</name>
    <filename>classut__DMessageManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMPRISControl</name>
    <filename>classut__DMPRISControl.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPageIndicator</name>
    <filename>classut__DPageIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPasswordEdit</name>
    <filename>classut__DPasswordEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPathBuf</name>
    <filename>classut__DPathBuf.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPictureSequenceView</name>
    <filename>classut__DPictureSequenceView.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPinyin</name>
    <filename>classut__DPinyin.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintColorPickWidget</name>
    <filename>classut__DPrintColorPickWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPickColorWidget</name>
    <filename>classut__DPrintPickColorWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewDialog</name>
    <filename>classut__DPrintPreviewDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidget</name>
    <filename>classut__DPrintPreviewWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidgetPrivate</name>
    <filename>classut__DPrintPreviewWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidgetPrivateParam</name>
    <filename>classut__DPrintPreviewWidgetPrivateParam.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidgetTestParam</name>
    <filename>classut__DPrintPreviewWidgetTestParam.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DProgressBar</name>
    <filename>classut__DProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPushButton</name>
    <filename>classut__DPushButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DRecentManager</name>
    <filename>classut__DRecentManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSearchComboBox</name>
    <filename>classut__DSearchComboBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSearchEdit</name>
    <filename>classut__DSearchEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSecureString</name>
    <filename>classut__DSecureString.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSettings</name>
    <filename>classut__DSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSettingsDialog</name>
    <filename>classut__DSettingsDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSettingsWidgetFactory</name>
    <filename>classut__DSettingsWidgetFactory.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DShadowLine</name>
    <filename>classut__DShadowLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSimpleListView</name>
    <filename>classut__DSimpleListView.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSlider</name>
    <filename>classut__DSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSpinBox</name>
    <filename>classut__DSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSpinner</name>
    <filename>classut__DSpinner.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStackWidget</name>
    <filename>classut__DStackWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStandardItem</name>
    <filename>classut__DStandardItem.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStandardPaths</name>
    <filename>classut__DStandardPaths.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStyledItemDelegate</name>
    <filename>classut__DStyledItemDelegate.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStyleOptionBackgroundGroup</name>
    <filename>classut__DStyleOptionBackgroundGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStyleOptionLineEdit</name>
    <filename>classut__DStyleOptionLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSuggestButton</name>
    <filename>classut__DSuggestButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSwitchButton</name>
    <filename>classut__DSwitchButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTabBar</name>
    <filename>classut__DTabBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTextEdit</name>
    <filename>classut__DTextEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTextEncoding</name>
    <filename>classut__DTextEncoding.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DThreadUtils</name>
    <filename>classut__DThreadUtils.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTickEffect</name>
    <filename>classut__DTickEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTimeUnitFormatter</name>
    <filename>classut__DTimeUnitFormatter.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTipLabel</name>
    <filename>classut__DTipLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTitlebar</name>
    <filename>classut__DTitlebar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DToolButton</name>
    <filename>classut__DToolButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DToolTip</name>
    <filename>classut__DToolTip.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTrashManager</name>
    <filename>classut__DTrashManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DUtil</name>
    <filename>classut__DUtil.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVariantListModel</name>
    <filename>classut__DVariantListModel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVerticalLine</name>
    <filename>classut__DVerticalLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DViewItemAction</name>
    <filename>classut__DViewItemAction.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVtableHook</name>
    <filename>classut__DVtableHook.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWarningButton</name>
    <filename>classut__DWarningButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWaterProgress</name>
    <filename>classut__DWaterProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowCloseButton</name>
    <filename>classut__DWindowCloseButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowMaxButton</name>
    <filename>classut__DWindowMaxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowMinButton</name>
    <filename>classut__DWindowMinButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowOptionButton</name>
    <filename>classut__DWindowOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowQuitFullButton</name>
    <filename>classut__DWindowQuitFullButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_GSettings</name>
    <filename>classut__GSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_IConButton</name>
    <filename>classut__IConButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_Logger</name>
    <filename>classut__Logger.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_QSettingsBackend</name>
    <filename>classut__QSettingsBackend.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DConfigFile::Version</name>
    <filename>structDtk_1_1Core_1_1DConfigFile_1_1Version.html</filename>
  </compound>
  <compound kind="class">
    <name>WaterMark</name>
    <filename>classWaterMark.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="struct">
    <name>DPrintPreviewWidgetPrivate::NumberUpData::WaterMarkProperty</name>
    <filename>structDPrintPreviewWidgetPrivate_1_1NumberUpData_1_1WaterMarkProperty.html</filename>
  </compound>
  <compound kind="class">
    <name>WidgetExampleWindow</name>
    <filename>classWidgetExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Window</name>
    <filename>classWindow.html</filename>
    <base>QWindow</base>
  </compound>
  <compound kind="class">
    <name>WindowExampleWindow</name>
    <filename>classWindowExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DPlatformHandle::WMBlurArea</name>
    <filename>structDPlatformHandle_1_1WMBlurArea.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPlatformHandle::WMBlurArea</name>
    <filename>classDtk_1_1Gui_1_1DPlatformHandle_1_1WMBlurArea.html</filename>
  </compound>
  <compound kind="group">
    <name>dci</name>
    <title>Dci</title>
    <filename>group__dci.html</filename>
    <file>ddcifile.h</file>
    <file>ddciicon.h</file>
    <file>ddciiconpalette.h</file>
  </compound>
  <compound kind="group">
    <name>dfilesystem</name>
    <title>Dfilesystem</title>
    <filename>group__dfilesystem.html</filename>
    <file>dbasefilewatcher.h</file>
    <file>dcapfile.h</file>
  </compound>
  <compound kind="group">
    <name>dglobal</name>
    <title>Dglobal</title>
    <filename>group__dglobal.html</filename>
    <file>ddesktopentry.h</file>
    <file>dsysinfo.h</file>
  </compound>
  <compound kind="group">
    <name>dlog</name>
    <title>Dlog</title>
    <filename>group__dlog.html</filename>
    <file>AbstractAppender.h</file>
    <file>AbstractStringAppender.h</file>
    <file>ConsoleAppender.h</file>
    <file>LogManager.h</file>
    <file>FileAppender.h</file>
    <file>Logger.h</file>
    <file>RollingFileAppender.h</file>
  </compound>
  <compound kind="group">
    <name>dsettings</name>
    <title>Dsettings</title>
    <filename>group__dsettings.html</filename>
    <file>dsettingsdconfigbackend.h</file>
    <file>gsettingsbackend.h</file>
    <file>qsettingbackend.h</file>
    <file>dsettings.h</file>
    <file>dsettingsgroup.h</file>
    <file>dsettingsoption.h</file>
  </compound>
  <compound kind="group">
    <name>dutil</name>
    <title>Dutil</title>
    <filename>group__dutil.html</filename>
    <file>ddbusextendedabstractinterface.h</file>
    <file>ddbussender.h</file>
    <file>ddisksizeformatter.h</file>
    <file>dtextencoding.h</file>
    <file>dtimeunitformatter.h</file>
  </compound>
  <compound kind="group">
    <name>dtkwidget</name>
    <title>Dtkwidget</title>
    <filename>group__dtkwidget.html</filename>
    <file>daboutdialog.h</file>
    <file>dabstractdialog.h</file>
    <file>dalertcontrol.h</file>
    <file>dapplicationhelper.h</file>
    <file>darrowbutton.h</file>
    <file>darrowbutton.h</file>
    <file>darrowlinedrawer.h</file>
    <file>darrowlineexpand.h</file>
    <file>darrowlineexpand.h</file>
    <file>dcommandlinkbutton.h</file>
    <file>ddrawer.h</file>
    <file>dlabel.h</file>
    <file>dstyle.h</file>
  </compound>
  <compound kind="group">
    <name>button</name>
    <title>Button</title>
    <filename>group__button.html</filename>
    <file>dbuttonbox.h</file>
    <file>dcombobox.h</file>
    <file>dfloatingbutton.h</file>
    <file>dfontcombobox.h</file>
    <file>diconbutton.h</file>
    <file>dsearchcombobox.h</file>
    <file>dsuggestbutton.h</file>
    <file>dswitchbutton.h</file>
    <file>dtoolbutton.h</file>
    <file>dwarningbutton.h</file>
  </compound>
  <compound kind="group">
    <name>edit</name>
    <title>Edit</title>
    <filename>group__edit.html</filename>
    <file>dcrumbedit.h</file>
    <file>dfilechooseredit.h</file>
    <file>dipv4lineedit.h</file>
    <file>dkeysequenceedit.h</file>
    <file>dlineedit.h</file>
    <file>dpasswordedit.h</file>
    <file>dsearchedit.h</file>
    <file>dspinbox.h</file>
    <file>dtextedit.h</file>
  </compound>
  <compound kind="group">
    <name>slider</name>
    <title>Slider</title>
    <filename>group__slider.html</filename>
    <file>dslider.h</file>
  </compound>
  <compound kind="group">
    <name>listview</name>
    <title>Listview</title>
    <filename>group__listview.html</filename>
  </compound>
  <compound kind="group">
    <name>window</name>
    <title>Window</title>
    <filename>group__window.html</filename>
    <file>dmainwindow.h</file>
    <file>dtabbar.h</file>
  </compound>
  <compound kind="group">
    <name>tooltip</name>
    <title>Tooltip</title>
    <filename>group__tooltip.html</filename>
    <file>dtooltip.h</file>
  </compound>
  <compound kind="group">
    <name>spinner</name>
    <title>Spinner</title>
    <filename>group__spinner.html</filename>
    <file>dspinner.h</file>
  </compound>
  <compound kind="group">
    <name>dialog</name>
    <title>Dialog</title>
    <filename>group__dialog.html</filename>
    <file>dfiledialog.h</file>
    <file>dmessagemanager.h</file>
  </compound>
  <compound kind="group">
    <name>progressbar</name>
    <title>Progressbar</title>
    <filename>group__progressbar.html</filename>
    <file>dcoloredprogressbar.h</file>
    <file>dwaterprogress.h</file>
  </compound>
  <compound kind="group">
    <name>layout</name>
    <title>Layout</title>
    <filename>group__layout.html</filename>
    <file>dframe.h</file>
  </compound>
  <compound kind="group">
    <name>imageviewer</name>
    <title>Imageviewer</title>
    <filename>group__imageviewer.html</filename>
    <file>dimageviewer.h</file>
  </compound>
  <compound kind="page">
    <name>dic</name>
    <title>dci&amp;ndash;dci图标工具类</title>
    <filename>dic.html</filename>
  </compound>
  <compound kind="page">
    <name>dfilesystem</name>
    <title>dfilesystem&amp;ndash;dtk文件系统操作的封装</title>
    <filename>dfilesystem.html</filename>
  </compound>
  <compound kind="page">
    <name>global</name>
    <title>global&amp;ndash;dtk全局工具组件</title>
    <filename>global.html</filename>
  </compound>
  <compound kind="page">
    <name>DLog</name>
    <title>dlog&amp;ndash;dtk日志组件</title>
    <filename>DLog.html</filename>
  </compound>
  <compound kind="page">
    <name>dsettings</name>
    <title>dsettings&amp;ndash;dtk设置工具组件</title>
    <filename>dsettings.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkcore_README_zh_CN</name>
    <title>Deepin Tool Kit Core</title>
    <filename>md_dtkcore_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>util</name>
    <title>util&amp;ndash;dtkgui工具组件</title>
    <filename>util.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkgui_README_zh_CN</name>
    <title>Deepin Tool Kit Gui</title>
    <filename>md_dtkgui_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkwidget_README_zh_CN</name>
    <title>Deepin Tool Kit Widget</title>
    <filename>md_dtkwidget_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>dtkcore</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
