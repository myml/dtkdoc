<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>ddcifile.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/dci/</path>
    <filename>ddcifile_8h.html</filename>
    <class kind="class">Dtk::Core::DDciFile</class>
  </compound>
  <compound kind="file">
    <name>dbasefilewatcher.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/filesystem/</path>
    <filename>dbasefilewatcher_8h.html</filename>
    <class kind="class">Dtk::Core::DBaseFileWatcher</class>
  </compound>
  <compound kind="file">
    <name>dcapfile.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/filesystem/</path>
    <filename>dcapfile_8h.html</filename>
    <class kind="class">Dtk::Core::DCapFile</class>
    <class kind="class">Dtk::Core::DCapDir</class>
  </compound>
  <compound kind="file">
    <name>ddesktopentry.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/global/</path>
    <filename>ddesktopentry_8h.html</filename>
    <class kind="class">Dtk::Core::DDesktopEntry</class>
  </compound>
  <compound kind="file">
    <name>AbstractAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>AbstractAppender_8h.html</filename>
    <includes id="Logger_8h" name="Logger.h" local="no" imported="no">Logger.h</includes>
    <class kind="class">Dtk::Core::AbstractAppender</class>
  </compound>
  <compound kind="file">
    <name>AbstractStringAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>AbstractStringAppender_8h.html</filename>
    <includes id="AbstractAppender_8h" name="AbstractAppender.h" local="yes" imported="no">AbstractAppender.h</includes>
    <class kind="class">Dtk::Core::AbstractStringAppender</class>
  </compound>
  <compound kind="file">
    <name>ConsoleAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>ConsoleAppender_8h.html</filename>
    <includes id="AbstractStringAppender_8h" name="AbstractStringAppender.h" local="no" imported="no">AbstractStringAppender.h</includes>
    <class kind="class">Dtk::Core::ConsoleAppender</class>
  </compound>
  <compound kind="file">
    <name>FileAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>FileAppender_8h.html</filename>
    <includes id="AbstractStringAppender_8h" name="AbstractStringAppender.h" local="no" imported="no">AbstractStringAppender.h</includes>
    <class kind="class">Dtk::Core::FileAppender</class>
  </compound>
  <compound kind="file">
    <name>Logger.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>Logger_8h.html</filename>
    <class kind="class">Dtk::Core::Logger</class>
    <class kind="class">Dtk::Core::CuteMessageLogger</class>
    <class kind="class">Dtk::Core::LoggerTimingHelper</class>
  </compound>
  <compound kind="file">
    <name>LogManager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>LogManager_8h.html</filename>
    <class kind="class">Dtk::Core::DLogManager</class>
  </compound>
  <compound kind="file">
    <name>RollingFileAppender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/log/</path>
    <filename>RollingFileAppender_8h.html</filename>
    <includes id="FileAppender_8h" name="FileAppender.h" local="no" imported="no">FileAppender.h</includes>
    <class kind="class">Dtk::Core::RollingFileAppender</class>
  </compound>
  <compound kind="file">
    <name>dsettingsdconfigbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/backend/</path>
    <filename>dsettingsdconfigbackend_8h.html</filename>
    <class kind="class">Dtk::Core::DSettingsDConfigBackend</class>
  </compound>
  <compound kind="file">
    <name>gsettingsbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/backend/</path>
    <filename>gsettingsbackend_8h.html</filename>
    <class kind="class">Dtk::Core::GSettingsBackend</class>
  </compound>
  <compound kind="file">
    <name>qsettingbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/backend/</path>
    <filename>qsettingbackend_8h.html</filename>
    <class kind="class">Dtk::Core::QSettingBackend</class>
  </compound>
  <compound kind="file">
    <name>dsettings.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/</path>
    <filename>dsettings_8h.html</filename>
    <class kind="class">Dtk::Core::DSettings</class>
  </compound>
  <compound kind="file">
    <name>dsettingsgroup.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/</path>
    <filename>dsettingsgroup_8h.html</filename>
    <includes id="dsettingsoption_8h" name="dsettingsoption.h" local="yes" imported="no">dsettingsoption.h</includes>
    <class kind="class">Dtk::Core::DSettingsGroup</class>
  </compound>
  <compound kind="file">
    <name>dsettingsoption.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/settings/</path>
    <filename>dsettingsoption_8h.html</filename>
    <class kind="class">Dtk::Core::DSettingsOption</class>
  </compound>
  <compound kind="file">
    <name>dabstractunitformatter.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>dabstractunitformatter_8h.html</filename>
    <class kind="class">Dtk::Core::DAbstractUnitFormatter</class>
  </compound>
  <compound kind="file">
    <name>ddbusextendedabstractinterface.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>ddbusextendedabstractinterface_8h.html</filename>
    <class kind="class">Dtk::Core::DDBusExtendedAbstractInterface</class>
  </compound>
  <compound kind="file">
    <name>ddbussender.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>ddbussender_8h.html</filename>
    <class kind="class">DDBusData</class>
    <class kind="class">DDBusCaller</class>
    <class kind="class">DDBusProperty</class>
    <class kind="class">DDBusSender</class>
  </compound>
  <compound kind="file">
    <name>ddisksizeformatter.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>ddisksizeformatter_8h.html</filename>
    <includes id="dabstractunitformatter_8h" name="dabstractunitformatter.h" local="yes" imported="no">dabstractunitformatter.h</includes>
    <class kind="class">Dtk::Core::DDiskSizeFormatter</class>
  </compound>
  <compound kind="file">
    <name>dtextencoding.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>dtextencoding_8h.html</filename>
    <class kind="class">Dtk::Core::DTextEncoding</class>
  </compound>
  <compound kind="file">
    <name>dtimeunitformatter.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkcore/include/util/</path>
    <filename>dtimeunitformatter_8h.html</filename>
    <includes id="dabstractunitformatter_8h" name="dabstractunitformatter.h" local="yes" imported="no">dabstractunitformatter.h</includes>
    <class kind="class">Dtk::Core::DTimeUnitFormatter</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicegeneric.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicegeneric_8h.html</filename>
    <includes id="dtkinputdevices__types_8h" name="dtkinputdevices_types.h" local="yes" imported="no">dtkinputdevices_types.h</includes>
    <class kind="class">DInputDeviceGeneric</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicekeyboard.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicekeyboard_8h.html</filename>
    <includes id="dinputdevicegeneric_8h" name="dinputdevicegeneric.h" local="yes" imported="no">dinputdevicegeneric.h</includes>
    <class kind="class">DInputDeviceKeyboard</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicemanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicemanager_8h.html</filename>
    <includes id="dtkinputdevices__types_8h" name="dtkinputdevices_types.h" local="yes" imported="no">dtkinputdevices_types.h</includes>
    <class kind="class">DInputDeviceManager</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicemouse.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicemouse_8h.html</filename>
    <includes id="dinputdevicepointer_8h" name="dinputdevicepointer.h" local="yes" imported="no">dinputdevicepointer.h</includes>
    <class kind="class">DInputDeviceMouse</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicepointer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicepointer_8h.html</filename>
    <includes id="dinputdevicegeneric_8h" name="dinputdevicegeneric.h" local="yes" imported="no">dinputdevicegeneric.h</includes>
    <includes id="dtkinputdevices__types_8h" name="dtkinputdevices_types.h" local="yes" imported="no">dtkinputdevices_types.h</includes>
    <class kind="class">DInputDevicePointer</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicesetting.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicesetting_8h.html</filename>
    <includes id="dtkinputdevices__types_8h" name="dtkinputdevices_types.h" local="yes" imported="no">dtkinputdevices_types.h</includes>
    <class kind="class">DInputDeviceSetting</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicetablet.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicetablet_8h.html</filename>
    <includes id="dinputdevicepointer_8h" name="dinputdevicepointer.h" local="yes" imported="no">dinputdevicepointer.h</includes>
    <class kind="class">DInputDeviceTablet</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicetouchpad.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicetouchpad_8h.html</filename>
    <includes id="dinputdevicepointer_8h" name="dinputdevicepointer.h" local="yes" imported="no">dinputdevicepointer.h</includes>
    <class kind="class">DInputDeviceTouchPad</class>
  </compound>
  <compound kind="file">
    <name>dinputdevicetrackpoint.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dinputdevicetrackpoint_8h.html</filename>
    <includes id="dinputdevicepointer_8h" name="dinputdevicepointer.h" local="yes" imported="no">dinputdevicepointer.h</includes>
    <class kind="class">DInputDeviceTrackPoint</class>
  </compound>
  <compound kind="file">
    <name>dtkinputdevices_types.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkdevice/include/inputdevices/</path>
    <filename>dtkinputdevices__types_8h.html</filename>
    <class kind="struct">DeviceInfo</class>
    <class kind="class">EnumWrapper</class>
  </compound>
  <compound kind="file">
    <name>dguiapplicationhelper.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/kernel/</path>
    <filename>dguiapplicationhelper_8h.html</filename>
    <class kind="class">DGuiApplicationHelper</class>
  </compound>
  <compound kind="file">
    <name>dpalette.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/kernel/</path>
    <filename>dpalette_8h.html</filename>
    <class kind="class">DPalette</class>
  </compound>
  <compound kind="file">
    <name>dplatformtheme.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/kernel/</path>
    <filename>dplatformtheme_8h.html</filename>
    <class kind="class">DPlatformTheme</class>
  </compound>
  <compound kind="file">
    <name>ddciicon.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/util/</path>
    <filename>ddciicon_8h.html</filename>
    <includes id="ddciiconpalette_8h" name="ddciiconpalette.h" local="yes" imported="no">ddciiconpalette.h</includes>
    <class kind="class">DDciIcon</class>
  </compound>
  <compound kind="file">
    <name>ddciiconpalette.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/util/</path>
    <filename>ddciiconpalette_8h.html</filename>
    <class kind="class">DDciIconPalette</class>
  </compound>
  <compound kind="file">
    <name>dimagehandler.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkgui/include/util/</path>
    <filename>dimagehandler_8h.html</filename>
    <class kind="class">DImageHandler</class>
  </compound>
  <compound kind="file">
    <name>dopticaldiscinfo.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkburn/</path>
    <filename>dopticaldiscinfo_8h.html</filename>
    <includes id="dtkburn__global_8h" name="dtkburn_global.h" local="yes" imported="no">dtkburn_global.h</includes>
    <includes id="dtkburntypes_8h" name="dtkburntypes.h" local="yes" imported="no">dtkburntypes.h</includes>
    <class kind="class">DOpticalDiscInfo</class>
  </compound>
  <compound kind="file">
    <name>dopticaldiscmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkburn/</path>
    <filename>dopticaldiscmanager_8h.html</filename>
    <includes id="dtkburn__global_8h" name="dtkburn_global.h" local="yes" imported="no">dtkburn_global.h</includes>
  </compound>
  <compound kind="file">
    <name>dopticaldiscoperator.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkburn/</path>
    <filename>dopticaldiscoperator_8h.html</filename>
    <includes id="dtkburn__global_8h" name="dtkburn_global.h" local="yes" imported="no">dtkburn_global.h</includes>
    <includes id="dtkburntypes_8h" name="dtkburntypes.h" local="yes" imported="no">dtkburntypes.h</includes>
    <class kind="class">DOpticalDiscOperator</class>
  </compound>
  <compound kind="file">
    <name>dtkburn_global.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkburn/</path>
    <filename>dtkburn__global_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>dtkburntypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkburn/</path>
    <filename>dtkburntypes_8h.html</filename>
    <includes id="dtkburn__global_8h" name="dtkburn_global.h" local="yes" imported="no">dtkburn_global.h</includes>
  </compound>
  <compound kind="file">
    <name>darchivemanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkcompressor/</path>
    <filename>darchivemanager_8h.html</filename>
    <class kind="class">DArchiveManager</class>
    <class kind="struct">DArchiveManager::MgrFileEntry</class>
    <class kind="struct">DArchiveManager::MgrArchiveData</class>
    <class kind="struct">DArchiveManager::MgrCompressOptions</class>
    <class kind="struct">DArchiveManager::MgrExtractionOptions</class>
    <class kind="struct">DArchiveManager::MgrUpdateOptions</class>
  </compound>
  <compound kind="file">
    <name>dblockdevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dblockdevice_8h.html</filename>
    <class kind="class">DBlockDevice</class>
  </compound>
  <compound kind="file">
    <name>dblockdevicemonitor.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dblockdevicemonitor_8h.html</filename>
    <class kind="class">DBlockDeviceMonitor</class>
  </compound>
  <compound kind="file">
    <name>dblockpartition.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dblockpartition_8h.html</filename>
    <class kind="class">DBlockPartition</class>
  </compound>
  <compound kind="file">
    <name>ddevicemanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>ddevicemanager_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>ddiskdrive.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>ddiskdrive_8h.html</filename>
    <class kind="class">DDiskDrive</class>
  </compound>
  <compound kind="file">
    <name>ddiskjob.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>ddiskjob_8h.html</filename>
    <class kind="class">DDiskJob</class>
  </compound>
  <compound kind="file">
    <name>dmounttypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dmounttypes_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>dprotocoldevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dprotocoldevice_8h.html</filename>
    <class kind="class">DProtocolDevice</class>
  </compound>
  <compound kind="file">
    <name>dprotocoldevicemonitor.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dprotocoldevicemonitor_8h.html</filename>
    <class kind="class">DProtocolDeviceMonitor</class>
  </compound>
  <compound kind="file">
    <name>dtkmount_global.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkio/include/dtkmount/</path>
    <filename>dtkmount__global_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>daudioinput.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>daudioinput_8h.html</filename>
    <class kind="class">DAudioInput</class>
  </compound>
  <compound kind="file">
    <name>daudioout.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>daudioout_8h.html</filename>
    <class kind="class">DAudioDevice</class>
    <class kind="class">DAudioOutput</class>
  </compound>
  <compound kind="file">
    <name>daudiorecorder.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>daudiorecorder_8h.html</filename>
    <class kind="class">DAudioRecorder</class>
  </compound>
  <compound kind="file">
    <name>dcamera.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dcamera_8h.html</filename>
    <class kind="class">DCamera</class>
  </compound>
  <compound kind="file">
    <name>dcompositemanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dcompositemanager_8h.html</filename>
    <class kind="class">DCompositeManager</class>
  </compound>
  <compound kind="file">
    <name>dgstplayerproxy.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dgstplayerproxy_8h.html</filename>
    <includes id="dplayerbackend_8h" name="dplayerbackend.h" local="yes" imported="no">dplayerbackend.h</includes>
    <class kind="class">DGstPlayerProxy</class>
  </compound>
  <compound kind="file">
    <name>dimagecapture.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dimagecapture_8h.html</filename>
    <class kind="class">DImageCapture</class>
  </compound>
  <compound kind="file">
    <name>dmediacapturesession.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dmediacapturesession_8h.html</filename>
    <class kind="class">DMediaCaptureSession</class>
  </compound>
  <compound kind="file">
    <name>dmediaformat.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dmediaformat_8h.html</filename>
    <class kind="class">DMediaFormat</class>
  </compound>
  <compound kind="file">
    <name>dmediaplayer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dmediaplayer_8h.html</filename>
    <class kind="class">DMediaPlayer</class>
  </compound>
  <compound kind="file">
    <name>dmediaplaylist.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dmediaplaylist_8h.html</filename>
    <class kind="class">DMediaPlaylist</class>
  </compound>
  <compound kind="file">
    <name>dmediarecorder.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dmediarecorder_8h.html</filename>
    <includes id="dmediaformat_8h" name="dmediaformat.h" local="yes" imported="no">dmediaformat.h</includes>
    <class kind="class">DMediaRecorder</class>
  </compound>
  <compound kind="file">
    <name>dmpvproxy.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dmpvproxy_8h.html</filename>
    <includes id="dplayerbackend_8h" name="dplayerbackend.h" local="no" imported="no">dplayerbackend.h</includes>
    <class kind="class">MpvHandle</class>
    <class kind="class">DMpvProxy</class>
  </compound>
  <compound kind="file">
    <name>dplatformmediaplayer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dplatformmediaplayer_8h.html</filename>
    <class kind="class">DVideoSink</class>
    <class kind="class">DPlatformMediaPlayer</class>
  </compound>
  <compound kind="file">
    <name>dplayerbackend.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dplayerbackend_8h.html</filename>
    <class kind="struct">PlayingMovieInfo</class>
    <class kind="class">DPlayerBackend</class>
  </compound>
  <compound kind="file">
    <name>dscreenrecorder.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimedia/</path>
    <filename>dscreenrecorder_8h.html</filename>
    <class kind="class">DScreenRecorder</class>
  </compound>
  <compound kind="file">
    <name>dengineplayer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimediawidgets/</path>
    <filename>dengineplayer_8h.html</filename>
    <class kind="struct">MovieInfo</class>
    <class kind="class">DEnginePlayer</class>
  </compound>
  <compound kind="file">
    <name>dscreenshot.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimediawidgets/</path>
    <filename>dscreenshot_8h.html</filename>
    <class kind="class">DScreenShot</class>
  </compound>
  <compound kind="file">
    <name>dvideowidget.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkmultimediawidgets/</path>
    <filename>dvideowidget_8h.html</filename>
    <class kind="class">DVideoWidget</class>
  </compound>
  <compound kind="file">
    <name>docr.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkmultimedia/include/dtkocr/</path>
    <filename>docr_8h.html</filename>
    <class kind="struct">TextBox</class>
    <class kind="class">DOcr</class>
  </compound>
  <compound kind="file">
    <name>daccesspoint.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>daccesspoint_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DAccessPoint</class>
  </compound>
  <compound kind="file">
    <name>dactiveconnection.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dactiveconnection_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <includes id="dnmsetting_8h" name="dnmsetting.h" local="yes" imported="no">settings/dnmsetting.h</includes>
    <class kind="class">DActiveConnection</class>
  </compound>
  <compound kind="file">
    <name>dactivevpnconnection.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dactivevpnconnection_8h.html</filename>
    <includes id="dactiveconnection_8h" name="dactiveconnection.h" local="yes" imported="no">dactiveconnection.h</includes>
    <class kind="class">DActiveVpnConnection</class>
  </compound>
  <compound kind="file">
    <name>dadsldevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dadsldevice_8h.html</filename>
    <includes id="ddevice_8h" name="ddevice.h" local="yes" imported="no">ddevice.h</includes>
    <class kind="class">DAdslDevice</class>
  </compound>
  <compound kind="file">
    <name>dappproxy.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dappproxy_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DAppProxy</class>
  </compound>
  <compound kind="file">
    <name>dconnectionsetting.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dconnectionsetting_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DConnectionSetting</class>
  </compound>
  <compound kind="file">
    <name>ddevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>ddevice_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DDevice</class>
  </compound>
  <compound kind="file">
    <name>ddhcp4config.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>ddhcp4config_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DDHCP4Config</class>
  </compound>
  <compound kind="file">
    <name>ddhcp6config.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>ddhcp6config_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DDHCP6Config</class>
  </compound>
  <compound kind="file">
    <name>dgenericdevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dgenericdevice_8h.html</filename>
    <includes id="ddevice_8h" name="ddevice.h" local="yes" imported="no">ddevice.h</includes>
    <class kind="class">DGenericDevice</class>
  </compound>
  <compound kind="file">
    <name>dipconflictcheck.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dipconflictcheck_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DIPConflictCheck</class>
  </compound>
  <compound kind="file">
    <name>dipv4config.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dipv4config_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DIPv4Config</class>
  </compound>
  <compound kind="file">
    <name>dipv6config.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dipv6config_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DIPv6Config</class>
  </compound>
  <compound kind="file">
    <name>dnetworkmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dnetworkmanager_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <includes id="dnmsetting_8h" name="dnmsetting.h" local="yes" imported="no">dnmsetting.h</includes>
    <class kind="class">DNetworkManager</class>
  </compound>
  <compound kind="file">
    <name>dnetworkmanagertypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dnetworkmanagertypes_8h.html</filename>
    <class kind="struct">NewConn</class>
    <class kind="struct">SystemProxyAddr</class>
    <class kind="struct">AppProxySet</class>
  </compound>
  <compound kind="file">
    <name>dsecretagent.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dsecretagent_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DSecretAgent</class>
  </compound>
  <compound kind="file">
    <name>dsettingsmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dsettingsmanager_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DSettingsManager</class>
  </compound>
  <compound kind="file">
    <name>dsystemproxy.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dsystemproxy_8h.html</filename>
    <includes id="dnetworkmanagertypes_8h" name="dnetworkmanagertypes.h" local="yes" imported="no">dnetworkmanagertypes.h</includes>
    <class kind="class">DSystemProxy</class>
  </compound>
  <compound kind="file">
    <name>dtundevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dtundevice_8h.html</filename>
    <includes id="ddevice_8h" name="ddevice.h" local="yes" imported="no">ddevice.h</includes>
    <class kind="class">DTunDevice</class>
  </compound>
  <compound kind="file">
    <name>dwireddevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dwireddevice_8h.html</filename>
    <includes id="ddevice_8h" name="ddevice.h" local="yes" imported="no">ddevice.h</includes>
    <class kind="class">DWiredDevice</class>
  </compound>
  <compound kind="file">
    <name>dwirelessdevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/</path>
    <filename>dwirelessdevice_8h.html</filename>
    <includes id="ddevice_8h" name="ddevice.h" local="yes" imported="no">ddevice.h</includes>
    <class kind="class">DWirelessDevice</class>
  </compound>
  <compound kind="file">
    <name>dnmsetting.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknetworkmanager/include/settings/</path>
    <filename>dnmsetting_8h.html</filename>
    <class kind="class">DNMSetting</class>
  </compound>
  <compound kind="file">
    <name>dabstractnotificationmodeconfig.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknotifications/include/</path>
    <filename>dabstractnotificationmodeconfig_8h.html</filename>
    <class kind="class">DAbstractNotificationModeConfig</class>
  </compound>
  <compound kind="file">
    <name>dnotificationappconfig.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknotifications/include/</path>
    <filename>dnotificationappconfig_8h.html</filename>
    <class kind="class">DNotificationAppConfig</class>
  </compound>
  <compound kind="file">
    <name>dnotificationdndmodeconfig.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknotifications/include/</path>
    <filename>dnotificationdndmodeconfig_8h.html</filename>
    <includes id="dabstractnotificationmodeconfig_8h" name="dabstractnotificationmodeconfig.h" local="yes" imported="no">dabstractnotificationmodeconfig.h</includes>
    <class kind="class">DNotificationDNDModeConfig</class>
  </compound>
  <compound kind="file">
    <name>dnotificationmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknotifications/include/</path>
    <filename>dnotificationmanager_8h.html</filename>
    <includes id="dnotificationtypes_8h" name="dnotificationtypes.h" local="yes" imported="no">dnotificationtypes.h</includes>
    <includes id="dnotificationappconfig_8h" name="dnotificationappconfig.h" local="yes" imported="no">dnotificationappconfig.h</includes>
    <includes id="dnotificationdndmodeconfig_8h" name="dnotificationdndmodeconfig.h" local="yes" imported="no">dnotificationdndmodeconfig.h</includes>
    <class kind="class">DNotificationManager</class>
  </compound>
  <compound kind="file">
    <name>dnotificationtypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtknotifications/include/</path>
    <filename>dnotificationtypes_8h.html</filename>
    <class kind="struct">DNotificationData</class>
    <class kind="struct">ServerInformation</class>
    <member kind="enumeration">
      <type></type>
      <name>ClosedReason</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>a12fb9f31c703fe7a00606c415d104724</anchor>
      <arglist></arglist>
      <enumvalue file="dnotificationtypes_8h.html" anchor="a12fb9f31c703fe7a00606c415d104724a24fe48030f7d3097d5882535b04c3fa8">Expired</enumvalue>
      <enumvalue file="dnotificationtypes_8h.html" anchor="a12fb9f31c703fe7a00606c415d104724ae2ccdd369c3ae64bfd036d550bee4d1d">Dismissed</enumvalue>
      <enumvalue file="dnotificationtypes_8h.html" anchor="a12fb9f31c703fe7a00606c415d104724a03f4a47830f97377a35321051685071e">Closed</enumvalue>
      <enumvalue file="dnotificationtypes_8h.html" anchor="a12fb9f31c703fe7a00606c415d104724a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AppNotificationConfigItem</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AppName</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990ab1d51df1e98d80061efe8e6acdebfd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AppIcon</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990a9ecc72e5d5085292b633faef3da2d061</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EnableNotification</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990a020fe736b920f741751fe011c6528ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EnablePreview</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990a347113c52c5e1ecf7eff5a2b65041a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShowInNotificationCenter</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990a107541a183a1f64fc4d1c72f317a2847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LockScreenShowNofitication</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>aee322d570712c40160e9750a26aba990ac76993146d9d363cd128de622f8053b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DNDModeNotificaitonConfigItem</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DNDMode</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208ea3c7b0fe87f0bee8ad5c6eee6f8a97ba2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LockScreenOpenDNDMode</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208ea346799e655ae2d79f2e14cf6202a0f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OpenByTimeInterval</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208eac9802d59b2202513a3c3c0aef072e4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StartTime</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208ea2694124298b35f1b5943b3f03ce1dec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EndTime</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208eac36ac8f79860b64434f315885b6a3122</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShowIcon</name>
      <anchorfile>dnotificationtypes_8h.html</anchorfile>
      <anchor>ab86b23b6ce4e2bd6ff1d43b818d8208ea04c21b2592cdce7c83b4a47b78424beb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>daccountsmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/accounts/</path>
    <filename>daccountsmanager_8h.html</filename>
    <includes id="daccountstypes_8h" name="daccountstypes.h" local="yes" imported="no">daccountstypes.h</includes>
    <class kind="class">DAccountsManager</class>
  </compound>
  <compound kind="file">
    <name>daccountstypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/accounts/</path>
    <filename>daccountstypes_8h.html</filename>
    <class kind="struct">ShadowInfo</class>
    <class kind="struct">LoginUtmpx</class>
    <class kind="struct">ReminderInfo</class>
    <class kind="struct">ValidMsg</class>
    <member kind="enumeration">
      <type></type>
      <name>AccountTypes</name>
      <anchorfile>daccountstypes_8h.html</anchorfile>
      <anchor>ac50c4ac7f80a43c2fadc5fab8cbd2cd7</anchor>
      <arglist></arglist>
      <enumvalue file="daccountstypes_8h.html" anchor="ac50c4ac7f80a43c2fadc5fab8cbd2cd7a7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="ac50c4ac7f80a43c2fadc5fab8cbd2cd7ae3afed0047b08059d0fada10f400c1e5">Admin</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="ac50c4ac7f80a43c2fadc5fab8cbd2cd7a4fc6d312d5143904f84d48bfe176a846">Udcp</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="ac50c4ac7f80a43c2fadc5fab8cbd2cd7a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PasswdStatus</name>
      <anchorfile>daccountstypes_8h.html</anchorfile>
      <anchor>a0258837169dfd39818c05e644fc3dbdf</anchor>
      <arglist></arglist>
      <enumvalue file="daccountstypes_8h.html" anchor="a0258837169dfd39818c05e644fc3dbdfadc647eb65e6711e155375218212b3964">Password</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="a0258837169dfd39818c05e644fc3dbdfa6adadca9fc8ae5020cb91652d4c69a2a">NoPassword</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="a0258837169dfd39818c05e644fc3dbdfad0f2e5376298c880665077b565ffd7dd">Locked</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="a0258837169dfd39818c05e644fc3dbdfa88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PasswdExpirInfo</name>
      <anchorfile>daccountstypes_8h.html</anchorfile>
      <anchor>a2651e54bd02bf7eab446d1071467e26a</anchor>
      <arglist></arglist>
      <enumvalue file="daccountstypes_8h.html" anchor="a2651e54bd02bf7eab446d1071467e26aa960b44c579bc2f6818d2daaf9e4c16f0">Normal</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="a2651e54bd02bf7eab446d1071467e26aa03f4a47830f97377a35321051685071e">Closed</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="a2651e54bd02bf7eab446d1071467e26aa24fe48030f7d3097d5882535b04c3fa8">Expired</enumvalue>
      <enumvalue file="daccountstypes_8h.html" anchor="a2651e54bd02bf7eab446d1071467e26aa88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>daccountsuser.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/accounts/</path>
    <filename>daccountsuser_8h.html</filename>
    <includes id="daccountstypes_8h" name="daccountstypes.h" local="yes" imported="no">daccountstypes.h</includes>
    <class kind="class">DAccountsUser</class>
  </compound>
  <compound kind="file">
    <name>dloginmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/login/</path>
    <filename>dloginmanager_8h.html</filename>
    <includes id="dlogintypes_8h" name="dlogintypes.h" local="yes" imported="no">dlogintypes.h</includes>
    <class kind="class">DLoginManager</class>
  </compound>
  <compound kind="file">
    <name>dloginseat.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/login/</path>
    <filename>dloginseat_8h.html</filename>
    <class kind="class">DLoginSeat</class>
  </compound>
  <compound kind="file">
    <name>dloginsession.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/login/</path>
    <filename>dloginsession_8h.html</filename>
    <includes id="dlogintypes_8h" name="dlogintypes.h" local="yes" imported="no">dlogintypes.h</includes>
    <class kind="class">DLoginSession</class>
  </compound>
  <compound kind="file">
    <name>dlogintypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/login/</path>
    <filename>dlogintypes_8h.html</filename>
    <class kind="struct">ScheduledShutdownValue</class>
    <class kind="struct">Inhibitor</class>
    <member kind="enumeration">
      <type></type>
      <name>ShutdownType</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a670d0decc7b8e4594fa959d9a8d1f721</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a280a96254b645aa2c2c336ef2e235c37">PowerOff</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a2adfbd74d631b912b5d73da23733ba77">DryPowerOff</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a1de72c4fc6d69a741fff1cbb7cdb9e90">Reboot</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a7756fe3aa3ff1e986ea5448cff4d75e2">DryReboot</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a4558f7fa8f5356a88a53347ad89babde">Halt</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a09dd56cbe30eb264f1389c37150614ab">DryHalt</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a670d0decc7b8e4594fa959d9a8d1f721a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InhibitBehavior</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a38a942b5a4e892f272d54d469b6d592d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Shutdown</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a38a942b5a4e892f272d54d469b6d592dad7eff72d3e298432f32c409409c16d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Sleep</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a38a942b5a4e892f272d54d469b6d592da7ae599ab0325912d75016baf57084021</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PowerAction</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a2bb25797f4265d9041919b9d3bc858e7</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7a280a96254b645aa2c2c336ef2e235c37">PowerOff</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7a1de72c4fc6d69a741fff1cbb7cdb9e90">Reboot</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7a4558f7fa8f5356a88a53347ad89babde">Halt</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7a4048edab8450b2620da78e3df4f067e1">KExec</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7ab3834d6f7a63e5e750e0ca5ecf31e3b9">Suspend</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7af8cb4b31358f17fa37cfae6c2a0a13d3">Hibernate</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7a64167242d94a04ebadcad7a46489b036">HybridSleep</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7af78efa07f1ae4b6032f01df239592045">SuspendThenHibernate</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7ab485167c5b0e59d47009a16f90fe2659">Lock</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7ada337aa54bcb70265c71244f971157b9">FactoryReset</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7afd038fc7f319e48f3115d92bf5bdbef9">Ignore</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a2bb25797f4265d9041919b9d3bc858e7a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ExecuteStatus</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>af731d761e6bc00fb129beb923360caac</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="af731d761e6bc00fb129beb923360caaca93cba07454f06a4a960172bbd6e2a435">Yes</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af731d761e6bc00fb129beb923360caacabafd7322c6e97d25b6299b5d6fe8920b">No</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af731d761e6bc00fb129beb923360caacab5f5623b6137a89a1dadf079a5e92266">Challenge</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af731d761e6bc00fb129beb923360caaca91fbc1ffc46dc5e768f6b154bb548e37">Na</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af731d761e6bc00fb129beb923360caaca88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionRole</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>ab3c6e91d92dc0717d57e3ddbabeaab59</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="ab3c6e91d92dc0717d57e3ddbabeaab59a5158a250e30f1fb4415d86ded2c8e0c5">Leader</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="ab3c6e91d92dc0717d57e3ddbabeaab59ab1c94ca2fbc3e78fc30069c8d0f01680">All</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="ab3c6e91d92dc0717d57e3ddbabeaab59a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InhibitMode</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>aa98a3cf5c979d3762ffd3f5190d05f26</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="aa98a3cf5c979d3762ffd3f5190d05f26ae1e4c8c9ccd9fc39c391da4bcd093fb2">Block</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="aa98a3cf5c979d3762ffd3f5190d05f26a8f497c1a3d15af9e0c215019f26b887d">Delay</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="aa98a3cf5c979d3762ffd3f5190d05f26a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionState</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>ac82c179a797c0d7c249d1b98a8e3aa8f</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="ac82c179a797c0d7c249d1b98a8e3aa8fa54f664c70c22054ea0d8d26fc3997ce7">Online</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="ac82c179a797c0d7c249d1b98a8e3aa8fa4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="ac82c179a797c0d7c249d1b98a8e3aa8fa5c8de6f894682fdb1786037b2040a26e">Closing</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="ac82c179a797c0d7c249d1b98a8e3aa8fa88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionType</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a0695685c902e6c161ea20c244f605044</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="a0695685c902e6c161ea20c244f605044a77ffb0038a392d97d302ada53a282ceb">TTY</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a0695685c902e6c161ea20c244f605044ad21ab1ce30c9c7735c0591317f50ab85">X11</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a0695685c902e6c161ea20c244f605044a6c6d132c43d2385e87d7e7eaf78636ef">Mir</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a0695685c902e6c161ea20c244f605044abd9c6c9ca372721e187caeb1654b4209">Wayland</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a0695685c902e6c161ea20c244f605044a6fcdc090caeade09d0efd6253932b6f5">Unspecified</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SessionClass</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>a5c5150b0576b7945ffc33ec1fd5e10da</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="a5c5150b0576b7945ffc33ec1fd5e10daa8f9bfe9d1345237cb3b2b205864da075">User</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a5c5150b0576b7945ffc33ec1fd5e10daadc048b8147f739348ff06e94e257a62b">Greeter</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a5c5150b0576b7945ffc33ec1fd5e10daa795fc04747be6afaf53be47fb2be1a22">LockScreen</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="a5c5150b0576b7945ffc33ec1fd5e10daa88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UserState</name>
      <anchorfile>dlogintypes_8h.html</anchorfile>
      <anchor>af564843a4caaf5a6aaa0b59e9e77430f</anchor>
      <arglist></arglist>
      <enumvalue file="dlogintypes_8h.html" anchor="af564843a4caaf5a6aaa0b59e9e77430fa8d9da4bc0e49a50e09ac9f7e56789d39">Offline</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af564843a4caaf5a6aaa0b59e9e77430faafb203ac058ef880a784132cf81492ec">Lingering</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af564843a4caaf5a6aaa0b59e9e77430fa54f664c70c22054ea0d8d26fc3997ce7">Online</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af564843a4caaf5a6aaa0b59e9e77430fa4d3d769b812b6faa6b76e1a8abaece2d">Active</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af564843a4caaf5a6aaa0b59e9e77430fa5c8de6f894682fdb1786037b2040a26e">Closing</enumvalue>
      <enumvalue file="dlogintypes_8h.html" anchor="af564843a4caaf5a6aaa0b59e9e77430fa88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>dloginuser.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/login/</path>
    <filename>dloginuser_8h.html</filename>
    <includes id="dlogintypes_8h" name="dlogintypes.h" local="yes" imported="no">dlogintypes.h</includes>
    <class kind="class">DLoginUser</class>
  </compound>
  <compound kind="file">
    <name>dkbdbacklight.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/power/</path>
    <filename>dkbdbacklight_8h.html</filename>
    <class kind="class">DKbdBacklight</class>
  </compound>
  <compound kind="file">
    <name>dpowerdevice.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/power/</path>
    <filename>dpowerdevice_8h.html</filename>
    <includes id="dpowertypes_8h" name="dpowertypes.h" local="yes" imported="no">dpowertypes.h</includes>
    <class kind="class">DPowerDevice</class>
  </compound>
  <compound kind="file">
    <name>dpowermanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/power/</path>
    <filename>dpowermanager_8h.html</filename>
    <class kind="class">DPowerManager</class>
  </compound>
  <compound kind="file">
    <name>dpowersettings.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/power/</path>
    <filename>dpowersettings_8h.html</filename>
    <class kind="class">DPowerSettings</class>
  </compound>
  <compound kind="file">
    <name>dpowertypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/power/</path>
    <filename>dpowertypes_8h.html</filename>
    <class kind="struct">History</class>
    <class kind="struct">Statistic</class>
    <member kind="enumeration">
      <type></type>
      <name>KbdSource</name>
      <anchorfile>dpowertypes_8h.html</anchorfile>
      <anchor>aa855504edc5d4511b391551bdb2dbf0d</anchor>
      <arglist></arglist>
      <enumvalue file="dpowertypes_8h.html" anchor="aa855504edc5d4511b391551bdb2dbf0daafbf0897a5a83fdd873dfb032ec695d3">Internal</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="aa855504edc5d4511b391551bdb2dbf0dab206a1b4ea1097761f78e8876f6da779">External</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="aa855504edc5d4511b391551bdb2dbf0da88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PowerMode</name>
      <anchorfile>dpowertypes_8h.html</anchorfile>
      <anchor>a6c27e9967ccb6dd452cb0f3594647443</anchor>
      <arglist></arglist>
      <enumvalue file="dpowertypes_8h.html" anchor="a6c27e9967ccb6dd452cb0f3594647443a9446a98ad14416153cc4d45ab8b531bf">Performance</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a6c27e9967ccb6dd452cb0f3594647443a99a808d8d16122d70e44bd7f709d30fb">Balance</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a6c27e9967ccb6dd452cb0f3594647443a8697163f8ea747248247f2646bbb991c">PowerSave</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a6c27e9967ccb6dd452cb0f3594647443a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LidClosedAction</name>
      <anchorfile>dpowertypes_8h.html</anchorfile>
      <anchor>a213aad57ded810d28a99656d135ceb2c</anchor>
      <arglist></arglist>
      <enumvalue file="dpowertypes_8h.html" anchor="a213aad57ded810d28a99656d135ceb2cab3834d6f7a63e5e750e0ca5ecf31e3b9">Suspend</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a213aad57ded810d28a99656d135ceb2caf8cb4b31358f17fa37cfae6c2a0a13d3">Hibernate</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a213aad57ded810d28a99656d135ceb2ca3bd8643f0f685b9f622fc20217b551f6">TurnoffScreen</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a213aad57ded810d28a99656d135ceb2ca71b7f3fcd4098ebf8a3b387579d90dd7">DoNothing</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="a213aad57ded810d28a99656d135ceb2ca88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PowerBtnAction</name>
      <anchorfile>dpowertypes_8h.html</anchorfile>
      <anchor>afe523a6749ba738271f26681a22323a6</anchor>
      <arglist></arglist>
      <enumvalue file="dpowertypes_8h.html" anchor="afe523a6749ba738271f26681a22323a6a1a4ebb180ba59b067782515ffee6e975">Shutdown</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="afe523a6749ba738271f26681a22323a6ab3834d6f7a63e5e750e0ca5ecf31e3b9">Suspend</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="afe523a6749ba738271f26681a22323a6af8cb4b31358f17fa37cfae6c2a0a13d3">Hibernate</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="afe523a6749ba738271f26681a22323a6a3bd8643f0f685b9f622fc20217b551f6">TurnoffScreen</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="afe523a6749ba738271f26681a22323a6a71b7f3fcd4098ebf8a3b387579d90dd7">DoNothing</enumvalue>
      <enumvalue file="dpowertypes_8h.html" anchor="afe523a6749ba738271f26681a22323a6a88183b946cc5f0e8c96b2e66e1c74a7e">Unknown</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>drfmanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/rfmanager/</path>
    <filename>drfmanager_8h.html</filename>
    <class kind="class">DRfmanager</class>
    <class kind="struct">DRfmanager::RfDevice</class>
  </compound>
  <compound kind="file">
    <name>dsystemtime.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/systemtime/</path>
    <filename>dsystemtime_8h.html</filename>
    <includes id="dsystemtimetypes_8h" name="dsystemtimetypes.h" local="yes" imported="no">dsystemtimetypes.h</includes>
    <class kind="class">DSystemTime</class>
  </compound>
  <compound kind="file">
    <name>dsystemtimetypes.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtksystemsettings/include/systemtime/</path>
    <filename>dsystemtimetypes_8h.html</filename>
    <class kind="struct">Address</class>
    <class kind="struct">Message</class>
  </compound>
  <compound kind="file">
    <name>dsizemode.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/util/</path>
    <filename>dsizemode_8h.html</filename>
    <class kind="class">DSizeModeHelper</class>
  </compound>
  <compound kind="file">
    <name>daboutdialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>daboutdialog_8h.html</filename>
    <class kind="class">DAboutDialog</class>
  </compound>
  <compound kind="file">
    <name>dabstractdialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dabstractdialog_8h.html</filename>
    <class kind="class">DAbstractDialog</class>
  </compound>
  <compound kind="file">
    <name>dalertcontrol.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dalertcontrol_8h.html</filename>
    <class kind="class">DAlertControl</class>
  </compound>
  <compound kind="file">
    <name>dapplicationhelper.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dapplicationhelper_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>darrowbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>darrowbutton_8h.html</filename>
    <class kind="class">ArrowButtonIcon</class>
    <class kind="class">DArrowButton</class>
  </compound>
  <compound kind="file">
    <name>darrowlinedrawer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>darrowlinedrawer_8h.html</filename>
    <class kind="class">DArrowLineDrawer</class>
  </compound>
  <compound kind="file">
    <name>darrowlineexpand.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>darrowlineexpand_8h.html</filename>
    <class kind="class">ArrowHeaderLine</class>
  </compound>
  <compound kind="file">
    <name>dbuttonbox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dbuttonbox_8h.html</filename>
    <class kind="class">DButtonBoxButton</class>
    <class kind="class">DButtonBox</class>
  </compound>
  <compound kind="file">
    <name>dcoloredprogressbar.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcoloredprogressbar_8h.html</filename>
    <class kind="class">DColoredProgressBar</class>
  </compound>
  <compound kind="file">
    <name>dcombobox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcombobox_8h.html</filename>
    <class kind="class">DComboBox</class>
  </compound>
  <compound kind="file">
    <name>dcommandlinkbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcommandlinkbutton_8h.html</filename>
    <class kind="class">DCommandLinkButton</class>
  </compound>
  <compound kind="file">
    <name>dcrumbedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dcrumbedit_8h.html</filename>
    <class kind="class">DCrumbTextFormat</class>
    <class kind="class">DCrumbEdit</class>
  </compound>
  <compound kind="file">
    <name>ddrawer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>ddrawer_8h.html</filename>
    <class kind="class">DDrawer</class>
  </compound>
  <compound kind="file">
    <name>dfeaturedisplaydialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfeaturedisplaydialog_8h.html</filename>
    <class kind="class">DFeatureItem</class>
    <class kind="class">DFeatureDisplayDialog</class>
  </compound>
  <compound kind="file">
    <name>dfilechooseredit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfilechooseredit_8h.html</filename>
    <class kind="class">DFileChooserEdit</class>
  </compound>
  <compound kind="file">
    <name>dfiledialog.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfiledialog_8h.html</filename>
    <class kind="class">DFileDialog</class>
    <class kind="struct">DFileDialog::DComboBoxOptions</class>
    <class kind="struct">DFileDialog::DLineEditOptions</class>
  </compound>
  <compound kind="file">
    <name>dfloatingbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfloatingbutton_8h.html</filename>
    <class kind="class">DFloatingButton</class>
  </compound>
  <compound kind="file">
    <name>dfontcombobox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dfontcombobox_8h.html</filename>
    <class kind="class">DFontComboBox</class>
  </compound>
  <compound kind="file">
    <name>dframe.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dframe_8h.html</filename>
    <class kind="class">DFrame</class>
    <class kind="class">DHorizontalLine</class>
    <class kind="class">DVerticalLine</class>
  </compound>
  <compound kind="file">
    <name>diconbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>diconbutton_8h.html</filename>
    <class kind="class">DIconButton</class>
  </compound>
  <compound kind="file">
    <name>dimageviewer.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dimageviewer_8h.html</filename>
    <class kind="class">DImageViewer</class>
  </compound>
  <compound kind="file">
    <name>dipv4lineedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dipv4lineedit_8h.html</filename>
    <class kind="class">DIpv4LineEdit</class>
  </compound>
  <compound kind="file">
    <name>dkeysequenceedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dkeysequenceedit_8h.html</filename>
    <class kind="class">DKeySequenceEdit</class>
  </compound>
  <compound kind="file">
    <name>dlabel.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dlabel_8h.html</filename>
    <includes id="dstyle_8h" name="dstyle.h" local="no" imported="no">dstyle.h</includes>
    <class kind="class">DLabel</class>
  </compound>
  <compound kind="file">
    <name>dlineedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dlineedit_8h.html</filename>
    <class kind="class">DLineEdit</class>
  </compound>
  <compound kind="file">
    <name>dmainwindow.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dmainwindow_8h.html</filename>
    <class kind="class">DMainWindow</class>
  </compound>
  <compound kind="file">
    <name>dmessagemanager.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dmessagemanager_8h.html</filename>
    <class kind="class">DMessageManager</class>
  </compound>
  <compound kind="file">
    <name>dpasswordedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dpasswordedit_8h.html</filename>
    <class kind="class">DPasswordEdit</class>
  </compound>
  <compound kind="file">
    <name>dprogressbar.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dprogressbar_8h.html</filename>
    <class kind="class">DProgressBar</class>
  </compound>
  <compound kind="file">
    <name>dsearchcombobox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dsearchcombobox_8h.html</filename>
    <class kind="class">DSearchComboBox</class>
  </compound>
  <compound kind="file">
    <name>dsearchedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dsearchedit_8h.html</filename>
    <class kind="class">DSearchEdit</class>
  </compound>
  <compound kind="file">
    <name>dslider.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dslider_8h.html</filename>
    <class kind="class">DSlider</class>
    <class kind="class">SpecialSlider</class>
  </compound>
  <compound kind="file">
    <name>dspinbox.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dspinbox_8h.html</filename>
    <class kind="class">DSpinBox</class>
    <class kind="class">DDoubleSpinBox</class>
  </compound>
  <compound kind="file">
    <name>dspinner.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dspinner_8h.html</filename>
    <class kind="class">DSpinner</class>
  </compound>
  <compound kind="file">
    <name>dstyle.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dstyle_8h.html</filename>
    <class kind="class">DStyle</class>
    <class kind="class">DStyleHelper</class>
    <class kind="class">DStylePainter</class>
    <class kind="class">DStyledIconEngine</class>
  </compound>
  <compound kind="file">
    <name>dsuggestbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dsuggestbutton_8h.html</filename>
    <class kind="class">DSuggestButton</class>
  </compound>
  <compound kind="file">
    <name>dswitchbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dswitchbutton_8h.html</filename>
    <class kind="class">DSwitchButton</class>
  </compound>
  <compound kind="file">
    <name>dtabbar.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtabbar_8h.html</filename>
    <class kind="class">DTabBar</class>
  </compound>
  <compound kind="file">
    <name>dtextedit.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtextedit_8h.html</filename>
    <class kind="class">DTextEdit</class>
  </compound>
  <compound kind="file">
    <name>dtoolbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtoolbutton_8h.html</filename>
    <class kind="class">DToolButton</class>
  </compound>
  <compound kind="file">
    <name>dtooltip.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dtooltip_8h.html</filename>
    <class kind="class">DToolTip</class>
  </compound>
  <compound kind="file">
    <name>dwarningbutton.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dwarningbutton_8h.html</filename>
    <class kind="class">DWarningButton</class>
  </compound>
  <compound kind="file">
    <name>dwaterprogress.h</name>
    <path>/home/runner/work/dtkdoc/dtkdoc/dtkwidget/include/dtkwidget/widgets/</path>
    <filename>dwaterprogress_8h.html</filename>
    <class kind="class">DWaterProgress</class>
  </compound>
  <compound kind="struct">
    <name>__attribute__</name>
    <filename>struct____attribute____.html</filename>
  </compound>
  <compound kind="struct">
    <name>_audio_buff_t</name>
    <filename>struct__audio__buff__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_audio_codec_t</name>
    <filename>struct__audio__codec__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_audio_context_t</name>
    <filename>struct__audio__context__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_audio_device_t</name>
    <filename>struct__audio__device__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_audio_index_entry_t</name>
    <filename>struct__audio__index__entry__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_avi_riff_t</name>
    <filename>struct__avi__riff__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_baseclassDesc</name>
    <filename>struct__baseclassDesc.html</filename>
  </compound>
  <compound kind="struct">
    <name>_bmp_info_header_t</name>
    <filename>struct__bmp__info__header__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_capture_loop_data_t</name>
    <filename>struct__capture__loop__data__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_config_t</name>
    <filename>struct__config__t.html</filename>
  </compound>
  <compound kind="class">
    <name>_DApplicationHelper</name>
    <filename>class__DApplicationHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>_DtkBuildVersion</name>
    <filename>class__DtkBuildVersion.html</filename>
  </compound>
  <compound kind="struct">
    <name>_encoder_audio_context_t</name>
    <filename>struct__encoder__audio__context__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_encoder_codec_data_t</name>
    <filename>struct__encoder__codec__data__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_encoder_context_t</name>
    <filename>struct__encoder__context__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_encoder_video_context_t</name>
    <filename>struct__encoder__video__context__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_InterfaceDesc</name>
    <filename>struct__InterfaceDesc.html</filename>
  </compound>
  <compound kind="struct">
    <name>_io_writer_t</name>
    <filename>struct__io__writer__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dexpected</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dexpected.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dexpected&lt; DExpected&lt; T, E &gt; &gt;</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dexpected_3_01DExpected_3_01T_00_01E_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dunexpected</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dunexpected.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::_is_dunexpected&lt; DUnexpected&lt; T &gt; &gt;</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1__is__dunexpected_3_01DUnexpected_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>_jpeg_encoder_ctx_t</name>
    <filename>struct__jpeg__encoder__ctx__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadAvformat</name>
    <filename>struct__LoadAvformat.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadAvutil</name>
    <filename>struct__LoadAvutil.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadLibNames</name>
    <filename>struct__LoadLibNames.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadLibs</name>
    <filename>struct__LoadLibs.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadPortAudio</name>
    <filename>struct__LoadPortAudio.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadUdev</name>
    <filename>struct__LoadUdev.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadUSB</name>
    <filename>struct__LoadUSB.html</filename>
  </compound>
  <compound kind="struct">
    <name>_LoadV4l2</name>
    <filename>struct__LoadV4l2.html</filename>
  </compound>
  <compound kind="struct">
    <name>_options_t</name>
    <filename>struct__options__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_render_events_t</name>
    <filename>struct__render__events__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_stream_io_t</name>
    <filename>struct__stream__io__t.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>indexes</name>
      <anchorfile>struct__stream__io__t.html</anchorfile>
      <anchor>ae6f84bdb9f68ed498935095b7ac1c173</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DThreadUtil::_TMP</name>
    <filename>classDtk_1_1Core_1_1DThreadUtil_1_1__TMP.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DThreadUtil::_TMP&lt; void &gt;</name>
    <filename>classDtk_1_1Core_1_1DThreadUtil_1_1__TMP_3_01void_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_bitrate_layers_t</name>
    <filename>struct__uvcx__bitrate__layers__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_encoder_reset</name>
    <filename>struct__uvcx__encoder__reset.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_framerate_config_t</name>
    <filename>struct__uvcx__framerate__config__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_ltr_buffer_size_control_t</name>
    <filename>struct__uvcx__ltr__buffer__size__control__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_ltr_picture_control</name>
    <filename>struct__uvcx__ltr__picture__control.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_picture_type_control_t</name>
    <filename>struct__uvcx__picture__type__control__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_qp_steps_layers_t</name>
    <filename>struct__uvcx__qp__steps__layers__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_rate_control_mode_t</name>
    <filename>struct__uvcx__rate__control__mode__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_snr_scale_mode_t</name>
    <filename>struct__uvcx__snr__scale__mode__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_spatial_scale_mode_t</name>
    <filename>struct__uvcx__spatial__scale__mode__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_temporal_scale_mode_t</name>
    <filename>struct__uvcx__temporal__scale__mode__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_version_t</name>
    <filename>struct__uvcx__version__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_video_advance_config_t</name>
    <filename>struct__uvcx__video__advance__config__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_uvcx_video_config_probe_commit_t</name>
    <filename>struct__uvcx__video__config__probe__commit__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_ctrl_t</name>
    <filename>struct__v4l2__ctrl__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_dev_sys_data_t</name>
    <filename>struct__v4l2__dev__sys__data__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_dev_t</name>
    <filename>struct__v4l2__dev__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_device_list_t</name>
    <filename>struct__v4l2__device__list__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_frame_buff_t</name>
    <filename>struct__v4l2__frame__buff__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_stream_cap_t</name>
    <filename>struct__v4l2__stream__cap__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_v4l2_stream_format_t</name>
    <filename>struct__v4l2__stream__format__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_video_buffer_t</name>
    <filename>struct__video__buffer__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_video_codec_t</name>
    <filename>struct__video__codec__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>_video_index_entry_t</name>
    <filename>struct__video__index__entry__t.html</filename>
  </compound>
  <compound kind="class">
    <name>TestClass::A</name>
    <filename>classTestClass_1_1A.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::AbstractAppender</name>
    <filename>classDtk_1_1Core_1_1AbstractAppender.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractAppender</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>a7cdf727afbb71edf724b17d06cabd50e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractAppender</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>a636dfff566cc35c5fcbef9fa8ace5bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Logger::LogLevel</type>
      <name>detailsLevel</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>aa63fd678baadf4cd33df6e91a478947e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetailsLevel</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>a7d2e074a60e849bfa4235a52295debcb</anchor>
      <arglist>(Logger::LogLevel level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetailsLevel</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>ac7f3ad66a9807638a79df8dba6b463f0</anchor>
      <arglist>(const QString &amp;level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractAppender.html</anchorfile>
      <anchor>ae909f6a930396d01a426a3f294e2bdc7</anchor>
      <arglist>(const QDateTime &amp;time, Logger::LogLevel level, const char *file, int line, const char *func, const QString &amp;category, const QString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::AbstractStringAppender</name>
    <filename>classDtk_1_1Core_1_1AbstractStringAppender.html</filename>
    <base>Dtk::Core::AbstractAppender</base>
    <member kind="function">
      <type></type>
      <name>AbstractStringAppender</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>a0c9c0e424354c415af7be50d4591779c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>format</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>aa173a47c3b89a7022ff83628d1ebe770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormat</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>a961dd9232ddba5018a6777896e2a163d</anchor>
      <arglist>(const QString &amp;format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>stripFunctionName</name>
      <anchorfile>classDtk_1_1Core_1_1AbstractStringAppender.html</anchorfile>
      <anchor>a5288839793a0a948f8a0e61c3eae6e90</anchor>
      <arglist>(const char *name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AccountsDemo</name>
    <filename>classAccountsDemo.html</filename>
    <base>QObject</base>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>ActionButton</name>
    <filename>classActionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ActionList</name>
    <filename>classActionList.html</filename>
  </compound>
  <compound kind="struct">
    <name>ActionListData</name>
    <filename>structActionListData.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="struct">
    <name>UDisks2::ActiveDeviceInfo</name>
    <filename>structUDisks2_1_1ActiveDeviceInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>AddJob</name>
    <filename>classAddJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>AddrAny</name>
    <filename>classAddrAny.html</filename>
  </compound>
  <compound kind="struct">
    <name>Address</name>
    <filename>structAddress.html</filename>
    <member kind="variable">
      <type>qint32</type>
      <name>type</name>
      <anchorfile>structAddress.html</anchorfile>
      <anchor>aef0d040904f2988c5904c67f1ad15fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>ip</name>
      <anchorfile>structAddress.html</anchorfile>
      <anchor>ae3f25bd05531ddfed3c1af169b47458c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::SystemTime::Address</name>
    <filename>structDtk_1_1SystemTime_1_1Address.html</filename>
  </compound>
  <compound kind="struct">
    <name>Address_p</name>
    <filename>structAddress__p.html</filename>
  </compound>
  <compound kind="class">
    <name>AlertToolTip</name>
    <filename>classAlertToolTip.html</filename>
  </compound>
  <compound kind="struct">
    <name>apfs_super_block</name>
    <filename>structapfs__super__block.html</filename>
  </compound>
  <compound kind="class">
    <name>ApplicationWindow</name>
    <filename>classApplicationWindow.html</filename>
  </compound>
  <compound kind="struct">
    <name>AppProxySet</name>
    <filename>structAppProxySet.html</filename>
    <member kind="variable">
      <type>quint32</type>
      <name>port</name>
      <anchorfile>structAppProxySet.html</anchorfile>
      <anchor>abd812f357426ec97d8967f4e33ee3268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProxyType</type>
      <name>type</name>
      <anchorfile>structAppProxySet.html</anchorfile>
      <anchor>a579d16676fce531738ee36c4c1000acb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>ip</name>
      <anchorfile>structAppProxySet.html</anchorfile>
      <anchor>a3ecbf7de89f90fe7d078422f20850ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>password</name>
      <anchorfile>structAppProxySet.html</anchorfile>
      <anchor>a4e94cc715bfb8c0369f4cf42089adf47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>user</name>
      <anchorfile>structAppProxySet.html</anchorfile>
      <anchor>a3c733f6628678e4d8357b7f81624d854</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::NetworkManager::AppProxySet</name>
    <filename>structDtk_1_1NetworkManager_1_1AppProxySet.html</filename>
  </compound>
  <compound kind="struct">
    <name>ArchiveData</name>
    <filename>structArchiveData.html</filename>
  </compound>
  <compound kind="class">
    <name>ArchiveFormat</name>
    <filename>classArchiveFormat.html</filename>
  </compound>
  <compound kind="class">
    <name>ArchiveJob</name>
    <filename>classArchiveJob.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>LibarchivePlugin::ArchiveReadCustomDeleter</name>
    <filename>structLibarchivePlugin_1_1ArchiveReadCustomDeleter.html</filename>
  </compound>
  <compound kind="struct">
    <name>LibarchivePlugin::ArchiveWriteCustomDeleter</name>
    <filename>structLibarchivePlugin_1_1ArchiveWriteCustomDeleter.html</filename>
  </compound>
  <compound kind="class">
    <name>ArrowButtonIcon</name>
    <filename>classArrowButtonIcon.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::ArrowButtonIcon</name>
    <filename>classDtk_1_1Widget_1_1ArrowButtonIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>ArrowHeaderLine</name>
    <filename>classArrowHeaderLine.html</filename>
    <base>DHeaderLine</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::ArrowHeaderLine</name>
    <filename>classDtk_1_1Widget_1_1ArrowHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>HeaderLine::ArrowHeaderLine</name>
    <filename>classHeaderLine_1_1ArrowHeaderLine.html</filename>
    <base>Dtk::Widget::DHeaderLine</base>
  </compound>
  <compound kind="class">
    <name>ArrowListView</name>
    <filename>classArrowListView.html</filename>
  </compound>
  <compound kind="struct">
    <name>attr_entry</name>
    <filename>structattr__entry.html</filename>
  </compound>
  <compound kind="struct">
    <name>AttributeDetails</name>
    <filename>structAttributeDetails.html</filename>
  </compound>
  <compound kind="struct">
    <name>AutostartParam</name>
    <filename>structAutostartParam.html</filename>
  </compound>
  <compound kind="struct">
    <name>avi_context_t</name>
    <filename>structavi__context__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>avi_I_entry_t</name>
    <filename>structavi__I__entry__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>avi_index_t</name>
    <filename>structavi__index__t.html</filename>
  </compound>
  <compound kind="class">
    <name>TestClass::B</name>
    <filename>classTestClass_1_1B.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::bad_result_access</name>
    <filename>classDtk_1_1Core_1_1bad__result__access.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::bad_result_access&lt; void &gt;</name>
    <filename>classDtk_1_1Core_1_1bad__result__access_3_01void_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>BatchExtractJob</name>
    <filename>classBatchExtractJob.html</filename>
    <base>BatchJob</base>
  </compound>
  <compound kind="class">
    <name>BatchJob</name>
    <filename>classBatchJob.html</filename>
    <base>ArchiveJob</base>
  </compound>
  <compound kind="class">
    <name>Big5DistributionAnalysis</name>
    <filename>classBig5DistributionAnalysis.html</filename>
    <base>CharDistributionAnalysis</base>
  </compound>
  <compound kind="class">
    <name>BlitFrameTextureProvider</name>
    <filename>classBlitFrameTextureProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>BoxInsetShadow</name>
    <filename>classBoxInsetShadow.html</filename>
  </compound>
  <compound kind="class">
    <name>BoxPanel</name>
    <filename>classBoxPanel.html</filename>
  </compound>
  <compound kind="class">
    <name>BoxShadow</name>
    <filename>classBoxShadow.html</filename>
  </compound>
  <compound kind="class">
    <name>Button</name>
    <filename>classButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ButtonExampleWindow</name>
    <filename>classButtonExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>ButtonGroup</name>
    <filename>classButtonGroup.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>ButtonGroupPrivate</name>
    <filename>classButtonGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>ButtonIndicator</name>
    <filename>classButtonIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>ButtonPanel</name>
    <filename>classButtonPanel.html</filename>
  </compound>
  <compound kind="class">
    <name>DIconTheme::Cached</name>
    <filename>classDIconTheme_1_1Cached.html</filename>
  </compound>
  <compound kind="class">
    <name>DIconTheme::CachedData</name>
    <filename>classDIconTheme_1_1CachedData.html</filename>
  </compound>
  <compound kind="class">
    <name>CachedFBO</name>
    <filename>classCachedFBO.html</filename>
    <base>QSharedData</base>
    <base>QOpenGLFramebufferObject</base>
  </compound>
  <compound kind="class">
    <name>CachedQImage</name>
    <filename>classCachedQImage.html</filename>
    <base>QSharedData</base>
    <base>QImage</base>
  </compound>
  <compound kind="struct">
    <name>PersistentManager::CacheInfo</name>
    <filename>structPersistentManager_1_1CacheInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>CacheIterator</name>
    <filename>classCacheIterator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>CalendarModel</name>
    <filename>classCalendarModel.html</filename>
    <base>QAbstractTableModel</base>
  </compound>
  <compound kind="struct">
    <name>common::compat::Callback</name>
    <filename>structcommon_1_1compat_1_1Callback.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>common::compat::Callback&lt; Ret(Params...)&gt;</name>
    <filename>structcommon_1_1compat_1_1Callback_3_01Ret_07Params_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg>Params</templarg>
  </compound>
  <compound kind="class">
    <name>Camera</name>
    <filename>classCamera.html</filename>
    <base>QMainWindow</base>
  </compound>
  <compound kind="class">
    <name>ChangeDDialog</name>
    <filename>classChangeDDialog.html</filename>
    <base>DDialog</base>
  </compound>
  <compound kind="class">
    <name>CharDistributionAnalysis</name>
    <filename>classCharDistributionAnalysis.html</filename>
  </compound>
  <compound kind="class">
    <name>CheckBox</name>
    <filename>classCheckBox.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::CheckCompatibleArguments</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1CheckCompatibleArguments.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::CheckCompatibleArguments&lt; List, List &gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1CheckCompatibleArguments_3_01List_00_01List_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>chip_vpd_data</name>
    <filename>structchip__vpd__data.html</filename>
  </compound>
  <compound kind="class">
    <name>Cli7zPlugin</name>
    <filename>classCli7zPlugin.html</filename>
    <base>CliInterface</base>
  </compound>
  <compound kind="class">
    <name>Cli7zPluginFactory</name>
    <filename>classCli7zPluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>CliInterface</name>
    <filename>classCliInterface.html</filename>
    <base>ReadWriteArchiveInterface</base>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>list</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>ad94f58016e6e39d036c73cf5efe526dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a4f0ae3bc33087fa209b6e784155c0738</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a8a866a37021a4f7cb87c31b7f4277fcf</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseOperation</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a1e3ed249baf873378692991e23b9c439</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueOperation</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>af5d309e691045176894b4dbe11feb65b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doKill</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a95dbe6fcb286dfe249ce6a29bf3c8f1d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addFiles</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>ad86a2818ac13384896c91c997ffd3ddc</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>moveFiles</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a2118ef6b3c46cad8923a72f290b5a16a</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>copyFiles</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a505b047fa1fad584ecd7d0ff30021e58</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>deleteFiles</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a709b5b0ab8870c369c526db3ffbeecbe</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>renameFiles</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a93a36b984d2cb9a328148277ef3007ea</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addComment</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a637a3e2d215e3bd89ad7f5fc36a6a055</anchor>
      <arglist>(const QString &amp;comment) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>updateArchiveData</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a3168feef11edfee02bff2619f940dd72</anchor>
      <arglist>(const UpdateOptions &amp;options) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setListEmptyLines</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a4f4ddb0e86276639fa90d4c1545a3aa6</anchor>
      <arglist>(bool emptyLines=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>runProcess</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>ab7e278e98f0aef139b1fea692750e209</anchor>
      <arglist>(const QString &amp;programName, const QStringList &amp;arguments)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>handleLine</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a1633a284e51c3283db5076281dc6df31</anchor>
      <arglist>(const QString &amp;line, WorkType workStatus)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteProcess</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a06793cc1164e831e223c9a71a0198a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>killProcess</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a89fcfb427d60b5d47a86cc434bf0e7e8</anchor>
      <arglist>(bool emitFinished=true)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleProgress</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a4244d40735abab65b93ed4299196cac5</anchor>
      <arglist>(const QString &amp;line)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>handleFileExists</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a1a30e63007750412eb7691bbc69aebf5</anchor>
      <arglist>(const QString &amp;line)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeToProcess</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>ae73aeb98a9f530eb509fa0770dac854c</anchor>
      <arglist>(const QByteArray &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QString</type>
      <name>getTargetPath</name>
      <anchorfile>classCliInterface.html</anchorfile>
      <anchor>a0b75c091842cea8e933de35dcec4f6c3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CliPlugin</name>
    <filename>classCliPlugin.html</filename>
    <base>CliInterface</base>
    <base>CliInterface</base>
    <member kind="function">
      <type>void</type>
      <name>setJsonOutput</name>
      <anchorfile>classCliPlugin.html</anchorfile>
      <anchor>a005b7c994839093d6e9df2947ffdfb2f</anchor>
      <arglist>(const QString &amp;jsonOutput)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CliPluginFactory</name>
    <filename>classCliPluginFactory.html</filename>
    <base>KPluginFactory</base>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>CliProperties</name>
    <filename>classCliProperties.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>CliRarPlugin</name>
    <filename>classCliRarPlugin.html</filename>
    <base>CliInterface</base>
  </compound>
  <compound kind="class">
    <name>CliRarPluginFactory</name>
    <filename>classCliRarPluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="union">
    <name>DColor::Data::Color</name>
    <filename>unionDColor_1_1Data_1_1Color.html</filename>
  </compound>
  <compound kind="class">
    <name>ColorButton</name>
    <filename>classColorButton.html</filename>
    <base>QPushButton</base>
    <member kind="function">
      <type></type>
      <name>ColorButton</name>
      <anchorfile>classColorButton.html</anchorfile>
      <anchor>a5133e58d694260f42b39c8d3c454f5cb</anchor>
      <arglist>(QColor color, QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ColoredCornerPoint2D</name>
    <filename>structColoredCornerPoint2D.html</filename>
  </compound>
  <compound kind="class">
    <name>ColorLabel</name>
    <filename>classColorLabel.html</filename>
    <base>DLabel</base>
    <member kind="function">
      <type></type>
      <name>ColorLabel</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a0a76e57427c1a9640a907633f7412f8b</anchor>
      <arglist>(DWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>getColor</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a9d8b57b422aa221b8e0b8e732ae1143d</anchor>
      <arglist>(qreal h, qreal s, qreal v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHue</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>ad75e4a367312dbb8aaff0ae523de5436</anchor>
      <arglist>(int hue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pickColor</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>ac1c6a7feb8fd27b9a5ee14b2660e8fdc</anchor>
      <arglist>(QPoint pos)</arglist>
    </member>
    <member kind="function">
      <type>QCursor</type>
      <name>pickColorCursor</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a8507320bf0466513f3158437e38fa27d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classColorLabel.html</anchorfile>
      <anchor>a102259d5a34e6036b2aadbc4646ff889</anchor>
      <arglist>(QPaintEvent *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ColorOverlay</name>
    <filename>classColorOverlay.html</filename>
  </compound>
  <compound kind="class">
    <name>ColorSlider</name>
    <filename>classColorSlider.html</filename>
    <base>QSlider</base>
    <member kind="function">
      <type></type>
      <name>ColorSlider</name>
      <anchorfile>classColorSlider.html</anchorfile>
      <anchor>a80aa83a09c511bd74de814727ee6b31c</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>getColor</name>
      <anchorfile>classColorSlider.html</anchorfile>
      <anchor>a0f53811bd67235bafd23c9a9a0119afa</anchor>
      <arglist>(qreal h, qreal s, qreal v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ComboBox</name>
    <filename>classComboBox.html</filename>
    <base>QComboBox</base>
  </compound>
  <compound kind="class">
    <name>ComDeepinApiXEventMonitorInterface</name>
    <filename>classComDeepinApiXEventMonitorInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>CommandLineManager</name>
    <filename>classCommandLineManager.html</filename>
    <base>QCommandLineParser</base>
  </compound>
  <compound kind="class">
    <name>CommentJob</name>
    <filename>classCommentJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>Common</name>
    <filename>classCommon.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>ComplexJob</name>
    <filename>classComplexJob.html</filename>
    <base>ArchiveJob</base>
  </compound>
  <compound kind="class">
    <name>Compositor</name>
    <filename>classCompositor.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Compositor&lt; QQuickItem &gt;</name>
    <filename>classCompositor.html</filename>
  </compound>
  <compound kind="struct">
    <name>CompressOptions</name>
    <filename>structCompressOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>CompressParameter</name>
    <filename>structCompressParameter.html</filename>
  </compound>
  <compound kind="struct">
    <name>Configure</name>
    <filename>structConfigure.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::ConsoleAppender</name>
    <filename>classDtk_1_1Core_1_1ConsoleAppender.html</filename>
    <base>Dtk::Core::AbstractStringAppender</base>
    <member kind="function">
      <type></type>
      <name>ConsoleAppender</name>
      <anchorfile>classDtk_1_1Core_1_1ConsoleAppender.html</anchorfile>
      <anchor>a044fa93658dbe1fbba76328efef6f066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>format</name>
      <anchorfile>classDtk_1_1Core_1_1ConsoleAppender.html</anchorfile>
      <anchor>ab63b018904413cbfd056ff4e08f2d5cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignoreEnvironmentPattern</name>
      <anchorfile>classDtk_1_1Core_1_1ConsoleAppender.html</anchorfile>
      <anchor>ab8debafc2516e8c92108a1f5054cfbd9</anchor>
      <arglist>(bool ignore)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Content</name>
    <filename>classContent.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ContentBox</name>
    <filename>classContentBox.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ContentItem</name>
    <filename>classContentItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="class">
    <name>ContentLoader</name>
    <filename>classContentLoader.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>ContentPrivate</name>
    <filename>classContentPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>ContentTitle</name>
    <filename>classContentTitle.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ContentTitlePrivate</name>
    <filename>classContentTitlePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>ControlBackground</name>
    <filename>classControlBackground.html</filename>
  </compound>
  <compound kind="class">
    <name>ConvertJob</name>
    <filename>classConvertJob.html</filename>
    <base>ComplexJob</base>
  </compound>
  <compound kind="class">
    <name>CornerColorMaterial</name>
    <filename>classCornerColorMaterial.html</filename>
  </compound>
  <compound kind="class">
    <name>CornerColorShader</name>
    <filename>classCornerColorShader.html</filename>
  </compound>
  <compound kind="struct">
    <name>cpuBaseInfo</name>
    <filename>structcpuBaseInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>cpuInfoLst</name>
    <filename>structcpuInfoLst.html</filename>
  </compound>
  <compound kind="class">
    <name>CreateJob</name>
    <filename>classCreateJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>CreatorWindowEventFile</name>
    <filename>classCreatorWindowEventFile.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>CrumbObjectInterface</name>
    <filename>classCrumbObjectInterface.html</filename>
    <base>QObject</base>
    <base>QTextObjectInterface</base>
  </compound>
  <compound kind="struct">
    <name>CustomData</name>
    <filename>structCustomData.html</filename>
  </compound>
  <compound kind="class">
    <name>CustomInterface</name>
    <filename>classCustomInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>CustomMetaObject</name>
    <filename>classCustomMetaObject.html</filename>
  </compound>
  <compound kind="struct">
    <name>CustomMimeType</name>
    <filename>structCustomMimeType.html</filename>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>structCustomMimeType.html</anchorfile>
      <anchor>a521cceeddef5f6f11eba6ea05058b76e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inherits</name>
      <anchorfile>structCustomMimeType.html</anchorfile>
      <anchor>ab74d5f4772d4b3a8cd73866365738d54</anchor>
      <arglist>(const QString &amp;strMimeType) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::CuteMessageLogger</name>
    <filename>classDtk_1_1Core_1_1CuteMessageLogger.html</filename>
  </compound>
  <compound kind="class">
    <name>DAboutDialog</name>
    <filename>classDAboutDialog.html</filename>
    <base>DDialog</base>
    <member kind="slot">
      <type>void</type>
      <name>setWindowTitle</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a13a86cb9afe89a7b093f8dacad80abe6</anchor>
      <arglist>(const QString &amp;windowTitle)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setProductIcon</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a0d9f764a08574aa9fdf50bf1f5b9382e</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setProductName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a824d184f74b22a262fc78715e0aa0cce</anchor>
      <arglist>(const QString &amp;productName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a3175e4041406b06004ce01e4fe10a640</anchor>
      <arglist>(const QString &amp;version)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a3fe1cf2643d45ad9b925c88b789c9ef4</anchor>
      <arglist>(const QString &amp;description)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCompanyLogo</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a71e30b22a93e7525831071177f85295c</anchor>
      <arglist>(const QPixmap &amp;companyLogo)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWebsiteName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>add885de3ee625cfa126cd53fcb69da9c</anchor>
      <arglist>(const QString &amp;websiteName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWebsiteLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a10ac187717a01e779b72744db75622fc</anchor>
      <arglist>(const QString &amp;websiteLink)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAcknowledgementLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a8649f50a2af659f0842e517e6184e976</anchor>
      <arglist>(const QString &amp;acknowledgementLink)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setLicense</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a4a9c499c423ef185d1c4ed6901448955</anchor>
      <arglist>(const QString &amp;license)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>windowTitle</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>aaa95dc3741be0d3731f719ea4f8f7799</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a297ce67d72faab88f2847e009fa2657d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>version</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>ace82f1025132f83a556ba46c0754cf78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>ae790256d3069468b429c079eeee7e630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const QPixmap *</type>
      <name>companyLogo</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>af8bec9f2af7a961b472c3b07aa06183d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>websiteName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a54425f9009ebbde187bd353bc1c0f67e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>websiteLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a286d487dc7b28989e2c6a4a53426d9b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>acknowledgementLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a0dcf32ef152fec984f850bc2abb09aa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>license</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a0e82850223a403a1ac08c464df20a83e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>windowTitle</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a188c407fb60b51ea489d49035ebece0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>aa80996c33bf9e5c4c46b8fd12be7f53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>version</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a39d193ac1933a74eff47b50e85661918</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>ae90d76709d480080bf046ab9bf711d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>license</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a18bae9a10f51e849839f08200c430ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>websiteName</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a7fb9d4e3de7d0960646b574ecf8313e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>websiteLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a844172acca8651f3162bc549fee3e5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>acknowledgementLink</name>
      <anchorfile>classDAboutDialog.html</anchorfile>
      <anchor>a78e1ba88b53135ba801ee1c48e7df5df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAboutDialog</name>
    <filename>classDtk_1_1Widget_1_1DAboutDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DAboutDialogPrivate</name>
    <filename>classDAboutDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>DAbstractDialog</name>
    <filename>classDAbstractDialog.html</filename>
    <base>QDialog</base>
    <member kind="slot">
      <type>void</type>
      <name>moveToCenter</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>aff3573c58f1761086c9baf1f93489d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveToTopRight</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a453ccc1cff05192a59c9386c99e668bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveToCenterByRect</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a94c810ea9af09c84a0098aef6a7f5082</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveToTopRightByRect</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ad564247f172d91745ff1791e309f0fc2</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setDisplayPosition</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ae99e66e0f9217abd7251227f24363119</anchor>
      <arglist>(DisplayPosition displayPosition)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeChanged</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a5562f9908619a183265ee3ce22ae4fcc</anchor>
      <arglist>(QSize size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAbstractDialog</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a3b7d7fe7c749d9e4c25f3c1519036368</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAbstractDialog</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>aa5cf9508f3c6a5d3ea1870ed10a25380</anchor>
      <arglist>(bool blurIfPossible, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a452c9920e4e0542acaaef808c774429b</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ab0c623aea93b44f2a90a75abfb5213e3</anchor>
      <arglist>(int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometry</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a854c68301ed4eb3c85219a0c41a08055</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseMoveEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>acdbdd2d3b6fd58526d840455646fa79e</anchor>
      <arglist>(QMouseEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mousePressEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ae6b09526a7fa2d6047fdb14c5793deb3</anchor>
      <arglist>(QMouseEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseReleaseEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a54fe9f009ae062e5fdda6eaaa7ba3f02</anchor>
      <arglist>(QMouseEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>ae571ec8f62cbfb9484eee57d524f5979</anchor>
      <arglist>(QResizeEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>adc6badb93ebc965452ac391c546b6c72</anchor>
      <arglist>(QShowEvent *event) override</arglist>
    </member>
    <member kind="property">
      <type>DisplayPosition</type>
      <name>displayPosition</name>
      <anchorfile>classDAbstractDialog.html</anchorfile>
      <anchor>a0be5ba4eb664919bcf245e368a1c1bcc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAbstractDialog</name>
    <filename>classDtk_1_1Widget_1_1DAbstractDialog.html</filename>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html">模态与非模态相关介绍</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="模态对话框">modal</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="非模态对话框">modeless</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="默认按钮">default</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="退出(Escape)键">escapekey</docanchor>
    <docanchor file="classDtk_1_1Widget_1_1DAbstractDialog.html" title="返回值 (模态对话框)">return</docanchor>
  </compound>
  <compound kind="class">
    <name>DAbstractDialogPrivate</name>
    <filename>classDAbstractDialogPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DAbstractNotificationModeConfig</name>
    <filename>classDAbstractNotificationModeConfig.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>enabledChanged</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>a2d52bb208977b9085503ae448ddbc157</anchor>
      <arglist>(const bool name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAbstractNotificationModeConfig</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>a6858678790d2edb7695f60b06b4278ab</anchor>
      <arglist>(const QString &amp;name, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>a9e5e2585cc0d758e8c03e47248317978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>enabled</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>a2c58c45b182ed03ab44fcf24cce10b2e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DExpected&lt; void &gt;</type>
      <name>setEnabled</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>a92ff0da2b77a2ab4c4f20e621db38c36</anchor>
      <arglist>(bool enabled)=0</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>aaa4ba2051f8ef93f439863276312a204</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDAbstractNotificationModeConfig.html</anchorfile>
      <anchor>a513da1aa6c1c8634f63b674c926f1ade</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Notifications::DAbstractNotificationModeConfig</name>
    <filename>classDtk_1_1Notifications_1_1DAbstractNotificationModeConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>DAbstractNotificationModeConfigPrivate</name>
    <filename>classDAbstractNotificationModeConfigPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAbstractStackWidgetTransition</name>
    <filename>classDAbstractStackWidgetTransition.html</filename>
    <base>QObject</base>
    <class kind="struct">DAbstractStackWidgetTransition::TransitionInfo</class>
  </compound>
  <compound kind="class">
    <name>DAbstractStackWidgetTransitionPrivate</name>
    <filename>classDAbstractStackWidgetTransitionPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DAbstractUnitFormatter</name>
    <filename>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</filename>
    <member kind="function">
      <type></type>
      <name>DAbstractUnitFormatter</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>abb21caeeb1e6e410f945a47f5f6315dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>formatAs</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a7da1d4cf5e7e905d1f810d75ca1254ac</anchor>
      <arglist>(qreal value, int currentUnit, const int targetUnit) const</arglist>
    </member>
    <member kind="function">
      <type>QPair&lt; qreal, int &gt;</type>
      <name>format</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>af25cf2c0224835e320331c3161fd0c09</anchor>
      <arglist>(const qreal value, const int unit) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPair&lt; qreal, int &gt; &gt;</type>
      <name>formatAsUnitList</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a2b4dba2c1d382dd52c7feb5a285a8479</anchor>
      <arglist>(const qreal value, int unit) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>unitMax</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>aecde063856680d9f68903e432131d938</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>unitMin</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a03d58fe4e04bcf51aad2c1f7e16767ff</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual uint</type>
      <name>unitConvertRate</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a7ea807d504f17926cf92c1330d1e636c</anchor>
      <arglist>(int unitId) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual qreal</type>
      <name>unitValueMax</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>ad84d984c7b456107675ded94421341fc</anchor>
      <arglist>(int unitId) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual qreal</type>
      <name>unitValueMin</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a158e56e5a7f9083448158355fe1d0d65</anchor>
      <arglist>(int unitId) const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual QString</type>
      <name>unitStr</name>
      <anchorfile>classDtk_1_1Core_1_1DAbstractUnitFormatter.html</anchorfile>
      <anchor>a4d679f3197542b272b8cd6245ae37879</anchor>
      <arglist>(int unitId) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DAccessibilityChecker</name>
    <filename>classDAccessibilityChecker.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>OutputFormat</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>acc9503c4cb2cc56cb745c550f04e5448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Role</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>a9dd2fdda5e3c713366797f7dd142544a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAccessibilityChecker</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>a2ad74c9ff6b86c58c671ee8abe29e403</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>aafec037647fe69fc8e08c40d7bf1697f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>ac3739f780ee44899c0ab088bd2fc94dc</anchor>
      <arglist>(int msec=3000)</arglist>
    </member>
    <member kind="property">
      <type>OutputFormat</type>
      <name>outputFormat</name>
      <anchorfile>classDAccessibilityChecker.html</anchorfile>
      <anchor>a93bcc52f85ef89f1acb603b38e973d2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAccessibilityChecker</name>
    <filename>classDtk_1_1Widget_1_1DAccessibilityChecker.html</filename>
  </compound>
  <compound kind="class">
    <name>DAccessibilityCheckerPrivate</name>
    <filename>classDAccessibilityCheckerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DAccessPoint</name>
    <filename>classDAccessPoint.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>SSIDChanged</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>aa36c839377e03aab2a9a625334e7c4d6</anchor>
      <arglist>(const QString &amp;ssid)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>strengthChanged</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>ad380dce67ceb8499fcd2df6517dfa06c</anchor>
      <arglist>(const quint8 strength)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>frequencyChanged</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>a4153d0f4ac41e328f40f5c35b2de9d6c</anchor>
      <arglist>(const quint32 frequency)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>flagsChanged</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>a8c22ff1c39a0d81bdb7f78e4b35e0038</anchor>
      <arglist>(const NMAP &amp;flags)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rsnFlagsChanged</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>af1703c9792ca43c6567b0bb1bd806986</anchor>
      <arglist>(const NMAPSec &amp;rsnFlags)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wpaFlagsChanged</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>aabbe4ac964843be828bbb5707e18d136</anchor>
      <arglist>(const NMAPSec &amp;wpaFlags)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>SSID</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>a3bee02467978dc9bd973bac23a6aaf3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint8</type>
      <name>strength</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>afef81313802ed86b6dde069338d696ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMAP</type>
      <name>flags</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>a4ed304cfd3e85fc5cd1a844311f6ed6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>frequency</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>a456c37abce27c18d4eb538d538ffdace</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMAPSec</type>
      <name>rsnFlags</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>affee32aa350f5c85ae50fd61f17612ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMAPSec</type>
      <name>wpaFlags</name>
      <anchorfile>classDAccessPoint.html</anchorfile>
      <anchor>a474472848684ed4e2acf4bf7e357c8df</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DAccessPoint</name>
    <filename>classDtk_1_1NetworkManager_1_1DAccessPoint.html</filename>
  </compound>
  <compound kind="class">
    <name>DAccessPointInterface</name>
    <filename>classDAccessPointInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAccessPointPrivate</name>
    <filename>classDAccessPointPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAccountsInterface</name>
    <filename>classDAccountsInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAccountsManager</name>
    <filename>classDAccountsManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; QList&lt; quint64 &gt; &gt;</type>
      <name>userList</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>af257fc261422e704aae8d9e5487abba9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsUserPtr &gt;</type>
      <name>createUser</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>aff14ecb730ca2cb5b4e04cb2515483c3</anchor>
      <arglist>(const QString &amp;name, const QString &amp;fullName, const DAccountTypes &amp;type)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>deleteUser</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>a1231bd0f39db93f08cc58cad4711f5d6</anchor>
      <arglist>(const QString &amp;name, const bool rmFiles)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsUserPtr &gt;</type>
      <name>findUserByName</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>afd4165d70c4db094464c712351673ab0</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsUserPtr &gt;</type>
      <name>findUserById</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>a93529ad3702764314aa79d3bfcb3ae7e</anchor>
      <arglist>(const qint64 uid)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>groups</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>aacd237d5482f7e48cf7f1a836c58b474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>presetGroups</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>adba52a06dbc5809145b47168ce37775a</anchor>
      <arglist>(const DAccountTypes &amp;type)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsValidMsg &gt;</type>
      <name>isPasswordValid</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>a3fb1a0d85558c7c350517afd3e1d2ef7</anchor>
      <arglist>(const QString &amp;password)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsValidMsg &gt;</type>
      <name>isUsernameValid</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>abc15f80ad9e67c2977bc257bfce94541</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UserAdded</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>a307fb4d582c7614eb7993e409183daf1</anchor>
      <arglist>(const quint64 uid)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UserDeleted</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>aad46eafbf49895a6b721cbf64ae66daf</anchor>
      <arglist>(const quint64 uid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAccountsManager</name>
      <anchorfile>classDAccountsManager.html</anchorfile>
      <anchor>abc0968c51c1d414c26f3d92225763080</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Accounts::DAccountsManager</name>
    <filename>classDtk_1_1Accounts_1_1DAccountsManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DAccountsManagerPrivate</name>
    <filename>classDAccountsManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAccountsUser</name>
    <filename>classDAccountsUser.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setAutomaticLogin</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ae84dce8ac8e218c41ce9ed44516efe44</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setFullName</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>aecfd41c41734249e1a2c5f44b9c00cd7</anchor>
      <arglist>(const QString &amp;newfullname)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setGroups</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a6bb9b15fab15d637979c5beb16caa47b</anchor>
      <arglist>(const QStringList &amp;newgroups)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setLayoutList</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a92ff34e44eac43dd2fb06f26bca2755f</anchor>
      <arglist>(const QList&lt; QByteArray &gt; &amp;newlayouts)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setHomeDir</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a43c3511bc014ed74864cd4983eb640e2</anchor>
      <arglist>(const QString &amp;newhomedir)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setIconFile</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a40f09ae8b25763dd34b3eb87ab5075bd</anchor>
      <arglist>(const QUrl &amp;newiconURL)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setLayout</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a17db66542665db799c5d9421f43a98be</anchor>
      <arglist>(const QByteArray &amp;newlayout)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setLocale</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>addf728935878a3d24161d8170ad208e3</anchor>
      <arglist>(const QByteArray &amp;newlocale)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setLocked</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ac4268f4f5f128b47c106c9fca7ebdacf</anchor>
      <arglist>(const bool locked)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setMaxPasswordAge</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a0fe2b0a287768aa409e5646b9a5a14fa</anchor>
      <arglist>(const int newndays)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setPassword</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a91f50ab0c1adaa4acc3738b0c90f75c3</anchor>
      <arglist>(const QByteArray &amp;newpassword)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setPasswordHint</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ae2b87908cf6103cb2f99a7cdc4c653b2</anchor>
      <arglist>(const QString &amp;newpasswordhint)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setShell</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>add56ea7668f20712b9e10ef377782bcd</anchor>
      <arglist>(const QString &amp;newshellpath)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setNopasswdLogin</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ab6598c24a96ff504e39ba97df54857ce</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>addGroup</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ab668404f56846bf0ea57815c6d0f7424</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>deleteGroup</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a94ba66bef8a9fc87a0beba9b4ba9ab7a</anchor>
      <arglist>(const QString &amp;group)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>deleteIconFile</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>affa77f80832dfe4dd0897cc6514878ae</anchor>
      <arglist>(const QUrl &amp;iconURL)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>isPasswordExpired</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a7b4ef6ef03aa87beed45e21ec1cd843d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsReminderInfo &gt;</type>
      <name>getReminderInfo</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>adaf0fa83f40932ae7d3fef831efe2c10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; AccountsPasswdExpirInfo &gt;</type>
      <name>passwordExpirationInfo</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a3a7463d61ab5230b8f26d93fb56a6e1c</anchor>
      <arglist>(qint64 &amp;dayLeft) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>automaticLoginChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ae30338c8a757982a296c8b99495eee4d</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>groupsChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a821de4d5b21e7c9576cc03dbcac6eb44</anchor>
      <arglist>(const QStringList &amp;list)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>layoutListChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>af213213b880f35e06ff46ca5970962da</anchor>
      <arglist>(const QList&lt; QByteArray &gt; &amp;list)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconFileListChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ab73fff8d79c6298967a4561626395e39</anchor>
      <arglist>(const QList&lt; QByteArray &gt; &amp;list)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconFileChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a40aaf2a6d31e8e713cb7ba0ae10ed475</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>layoutChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ac291fed022ee34fbfce554c8613765ec</anchor>
      <arglist>(const QByteArray &amp;layout)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>localeChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a30728d020213048f3c5a505412d1cb61</anchor>
      <arglist>(const QByteArray &amp;locale)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lockedChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a2d5ca453444c5e63e2c73607e4e7f082</anchor>
      <arglist>(const bool locked)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>maxPasswordAgeChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a2b22ec6790c91fc1ecadf0510331386e</anchor>
      <arglist>(const qint32 age)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>passwordHintChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>af7df4a3b12b7047d650e5c616fd3fed1</anchor>
      <arglist>(const QString &amp;hint)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>noPasswdLoginChanged</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ae54eace5f952d3a3ef1fc160d7b3362f</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>AccountTypes</type>
      <name>accountType</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a9797b6d286bf2504e3d4b839deee4f13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>automaticLogin</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a57e9acf13c3ce9f4f800ac6011b7ba1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fullName</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ac44379ae3e43e8b52408fb5094694a25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>GID</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ac3dd38877d2b7e0c18e78d05414230d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>UID</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a18b7239f1deecdc6e590e0c967b406cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groups</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a34052ccf162f44b2f61c6b5ac694816e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QByteArray &gt;</type>
      <name>layoutList</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a065bf15b96a0ffccc8df5099ad70b16b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>homeDir</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>aefdea883ae2e4b53a69733f437a83875</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QByteArray &gt;</type>
      <name>iconFileList</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>af3123bae3a18ff632650d7890461419a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>iconFile</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a7cacb34fbe3e0d28b9802295f4ba7d48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>layout</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a2978785d62dc9571a17b06e77e9e8a00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>locale</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a62c65b64c28e7947796a328fafb91b41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>locked</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a15430225b0031e3606324f2c2338c3d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>maxPasswordAge</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a39b55430c966070d1b63cdedcb26cc5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>passwordHint</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>aa2e364bdd2e9b81ac636a4334e264c63</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>passwordLastChange</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a96e6caa2539c856e60e921a28a370dfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PasswdStatus</type>
      <name>passwordStatus</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a7bc367b9d47594b3c6d2d1813a581a0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>shell</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a73a5df4a2907086f6637d30b192c563f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>UUID</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a6e58f9a33f5e42e97138ea734e273ef9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>userName</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a6897a3bdd9aba2a8dd81acde57a647a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noPasswdLogin</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a342f25b5e893b2ac4da2683c917d75a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>loginTime</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a6825bbc0d9122b80d194c5b539ed2445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>createdTime</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>aca675c690dead658720e3bf9ed2879ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>AccountTypes</type>
      <name>accountType</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ac9e22cbd24c56843b3c9ad086a0f3935</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>automaticLogin</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>aeca164fd4a8aab5d87f63981e09045a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>fullName</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a524a54c5d09fb233dbad3832b2614285</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint64</type>
      <name>GID</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a3623a885aa8fb1903a81f6f1ac164383</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint64</type>
      <name>UID</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a961ffa9ab4dac1e6ffd151d25aba6e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QStringList</type>
      <name>groups</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a039e5fe7280b33cafa2a67f62e542068</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QList&lt; QByteArray &gt;</type>
      <name>layoutList</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>ac35d09685fb3454218ff27364fb46352</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>homeDir</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a26fae08b2338a66f48d747b79f70e1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QList&lt; QByteArray &gt;</type>
      <name>iconFileList</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a834249e01051094b6468f3829ee022bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QUrl</type>
      <name>iconFile</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a5faa922aef14f2428077d967d963237f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QByteArray</type>
      <name>layout</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a9fa648dc0f3069850db3beefc8eddf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QByteArray</type>
      <name>locale</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a256491f30ecd2fd859202a77bba47eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>locked</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a4f3b1a4b8398f9dfc33176110faef542</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>qint32</type>
      <name>maxPasswordAge</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>add5c3127eeb9b4ee8811e5d27722d39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>passwordHint</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a6ca60ba6f2666052801eb636fecfc6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QDateTime</type>
      <name>passwordLastChange</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a4e0f4ca8785dcf27515b78f98778ebb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>PasswdStatus</type>
      <name>passwordStatus</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a1f57a6b837919bef3a61b42fb1af9fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>shell</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a877a3fa5fc42f9d947f084adc816b631</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QByteArray</type>
      <name>UUID</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a45fc78b23fe3bdb50abe8b94dca569ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QByteArray</type>
      <name>userName</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a136a980d53f28794b6e7e0c51cc7ee06</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>noPasswdLogin</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>aa9fd5283c04da02e622e7bf92eeeb476</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QDateTime</type>
      <name>loginTime</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>a6e9a06d91b08d901486bfe7174632956</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QDateTime</type>
      <name>createdTime</name>
      <anchorfile>classDAccountsUser.html</anchorfile>
      <anchor>adb930898cb31ce730885ee0e6b84ed89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Accounts::DAccountsUser</name>
    <filename>classDtk_1_1Accounts_1_1DAccountsUser.html</filename>
  </compound>
  <compound kind="class">
    <name>DAccountsUserPrivate</name>
    <filename>classDAccountsUserPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DActiveConnection</name>
    <filename>classDActiveConnection.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>devicesChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a9119d7672c874caf9aae74e095b4fc2a</anchor>
      <arglist>(const QList&lt; quint64 &gt; &amp;devices)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>vpnChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a1051f267ed05066ebab822da7b009431</anchor>
      <arglist>(const bool vpn)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectionChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>ae1480229dad0d07fc0ca392b72382883</anchor>
      <arglist>(const quint64 &amp;connection)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DHCP4ConfigChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>aedc0b48fcbbc34cac32b2f6c2a440ef5</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DHCP6ConfigChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a102dd26cbec5daa05b767f482c8c6d7e</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>IP4ConfigChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>aa9d905cc9b2825ef3c3ee0f08edf7d09</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>IP6ConfigChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a36bfba35e5317f4fdcfa8e6437c7319d</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>specificObjectChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a80609e399af22bd3073815d7ff1a263f</anchor>
      <arglist>(const quint64 &amp;specObj)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectionTypeChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a8243edf2d79506eddc67636f09c7fed6</anchor>
      <arglist>(const DNMSetting::SettingType type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UUIDChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>adb3cd80a54a4242df88e325381ae00c7</anchor>
      <arglist>(const QUuid &amp;UUID)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectionStateChanged</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>ac2212263a4070bc62e4f7e74c44588d9</anchor>
      <arglist>(const NMActiveConnectionState state, const NMActiveConnectionStateReason reason)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; quint64 &gt;</type>
      <name>devices</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>ade9e0e9e50d82ae2db57c71ed7bf63e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>vpn</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a70b447627d10895f015efe1b529756bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>connection</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a2d01953efca0bce63a630ac6ddbfa660</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>DHCP4Config</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>abecb8cf02b3d6526a817d2b3c6abd325</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>DHCP6Config</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a8b2493236dc0786f6271a4df03ea6924</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>IP4Config</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a2068e23573adb6832a616d5e849335e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>IP6Config</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>aa2f85d81212ec98bef10d1f57f58608e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>specificObject</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a5a7bb11bf68e38371a5d9e764ba652dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DNMSetting::SettingType</type>
      <name>connectionType</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>a7e177ed1cc0d7d1755f2c28dbd27ffd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QUuid</type>
      <name>UUID</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>aa98210001d7f4afd198ec10e45fad1ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMActiveConnectionState</type>
      <name>connectionState</name>
      <anchorfile>classDActiveConnection.html</anchorfile>
      <anchor>acd0feea1fa79d31c9886e8eea514d124</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DActiveConnection</name>
    <filename>classDtk_1_1NetworkManager_1_1DActiveConnection.html</filename>
  </compound>
  <compound kind="class">
    <name>DActiveConnectionInterface</name>
    <filename>classDActiveConnectionInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DActiveConnectionPrivate</name>
    <filename>classDActiveConnectionPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DActiveVpnConnection</name>
    <filename>classDActiveVpnConnection.html</filename>
    <base>DActiveConnection</base>
    <member kind="signal">
      <type>void</type>
      <name>VpnStateChanged</name>
      <anchorfile>classDActiveVpnConnection.html</anchorfile>
      <anchor>a6aa689fc32810605c947b80771600e62</anchor>
      <arglist>(const NMVpnConnectionState state, const NMActiveConnectionStateReason reason)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bannerChanged</name>
      <anchorfile>classDActiveVpnConnection.html</anchorfile>
      <anchor>a10ea7e241d9533f82b71d2cda58f8601</anchor>
      <arglist>(const QString &amp;banner)</arglist>
    </member>
    <member kind="function">
      <type>NMVpnConnectionState</type>
      <name>vpnState</name>
      <anchorfile>classDActiveVpnConnection.html</anchorfile>
      <anchor>a0c0a8113a0381cbde3dcf01eaf52f863</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>banner</name>
      <anchorfile>classDActiveVpnConnection.html</anchorfile>
      <anchor>a535dfb128cdf6cace94a374e922721f3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DActiveVpnConnection</name>
    <filename>classDtk_1_1NetworkManager_1_1DActiveVpnConnection.html</filename>
  </compound>
  <compound kind="class">
    <name>DActiveVpnConnectionInterface</name>
    <filename>classDActiveVpnConnectionInterface.html</filename>
    <base>DActiveConnectionInterface</base>
  </compound>
  <compound kind="class">
    <name>DActiveVpnConnectionPrivate</name>
    <filename>classDActiveVpnConnectionPrivate.html</filename>
    <base>DActiveConnectionPrivate</base>
  </compound>
  <compound kind="class">
    <name>DAdslDevice</name>
    <filename>classDAdslDevice.html</filename>
    <base>DDevice</base>
    <member kind="signal">
      <type>void</type>
      <name>carrierChanged</name>
      <anchorfile>classDAdslDevice.html</anchorfile>
      <anchor>a011010d25db682cf0daad450556092e4</anchor>
      <arglist>(const bool found)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>carrier</name>
      <anchorfile>classDAdslDevice.html</anchorfile>
      <anchor>a0e8d53d8bf20ee4df50c43e646a5182f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DAdslDevice</name>
    <filename>classDtk_1_1NetworkManager_1_1DAdslDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DAdslDeviceInterface</name>
    <filename>classDAdslDeviceInterface.html</filename>
    <base>DDeviceInterface</base>
  </compound>
  <compound kind="class">
    <name>DAdslDevicePrivate</name>
    <filename>classDAdslDevicePrivate.html</filename>
    <base>DDevicePrivate</base>
  </compound>
  <compound kind="class">
    <name>DAdslSetting</name>
    <filename>classDAdslSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DAdslSettingPrivate</name>
    <filename>classDAdslSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DaemonPowerInterface</name>
    <filename>classDaemonPowerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DaemonPowerService</name>
    <filename>classDaemonPowerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAgentManagerInterface</name>
    <filename>classDAgentManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAlertControl</name>
    <filename>classDAlertControl.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>alertChanged</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a10931a466c551a087ef58de913331e57</anchor>
      <arglist>(bool alert) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAlertControl</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>ab8e2727cdc16b8fb23f1fc140a88061d</anchor>
      <arglist>(QWidget *target, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DAlertControl</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a431ad82fea99a2d61547d899d50b49e3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlert</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>adb18ab797c9e68a75791d81b40b2a687</anchor>
      <arglist>(bool isAlert)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAlert</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a1a96daefaecc254f0562029e0d205ff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlertColor</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>ab61198e1c54096c598e04838f272e017</anchor>
      <arglist>(QColor c)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>defaultAlertColor</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a609b9c3c74538dbc7546a19e510dc99c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessageAlignment</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a4056ab4ce09cd559ef786f181e0c6d5e</anchor>
      <arglist>(Qt::Alignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>messageAlignment</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>acc331498277a70b748c1082470ca2922</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a5a3c61ea547d546f7fe6569c0dadbdcd</anchor>
      <arglist>(const QString &amp;text, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a51b5df21cc705dd5b1323571570139b9</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAlertMessage</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a29c3dcfb5df1c80be9066a76f775ad36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>alert</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a2f98f7a246a92ff9487d3e780fcff8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>alertColor</name>
      <anchorfile>classDAlertControl.html</anchorfile>
      <anchor>a16c980bb29d0516561b0e48f251acf70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAlertControl</name>
    <filename>classDtk_1_1Widget_1_1DAlertControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DAlertControlPrivate</name>
    <filename>classDAlertControlPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>DAnchorInfo</name>
    <filename>structDAnchorInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAnchorInfo</name>
    <filename>classDtk_1_1Widget_1_1DAnchorInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DAnchors</name>
    <filename>classDAnchors.html</filename>
    <templarg></templarg>
    <base>DAnchorsBase</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAnchors</name>
    <filename>classDtk_1_1Widget_1_1DAnchors.html</filename>
  </compound>
  <compound kind="class">
    <name>DAnchorsBase</name>
    <filename>classDAnchorsBase.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>bool</type>
      <name>setAnchor</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aa7ad63c8ff4ccb2a4469d1db0796e9dd</anchor>
      <arglist>(const Qt::AnchorPoint &amp;p, QWidget *target, const Qt::AnchorPoint &amp;point)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>setFill</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a34f5257dbae3a967e30764a4be6c89c4</anchor>
      <arglist>(DAnchorsBase *fill)</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>setCenterIn</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ab482f0c0072be8a22d3b47a153024f08</anchor>
      <arglist>(DAnchorsBase *centerIn)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveTop</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>acafba8ba2307cbd37a01e2ba61d97414</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveBottom</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ade9999ddef5d6f1eebd64536813051ad</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveLeft</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ad2b159c41ec3a83ab9ccc27b0e4f4f16</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveRight</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a52c520e012f2a18ea4ea818556cdc372</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveHorizontalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>abe8bb3b17f3ed241443a4bb30c04d9a0</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveVerticalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>afa4ae423ced45e154f24851defd7e4fa</anchor>
      <arglist>(int arg)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>moveCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ad13d5db3a3d97b8d2274458ce2e8c30c</anchor>
      <arglist>(const QPoint &amp;arg)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enabledChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a580423d9fbf2a0073edd190409d7f3a3</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>topChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a9441c3e5b73ffea005625752446ee9a1</anchor>
      <arglist>(const DAnchorInfo *top)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bottomChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a4f8bd08218d361f02b73650d03688646</anchor>
      <arglist>(const DAnchorInfo *bottom)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>leftChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a0383f09d7ff793280d7e40b1d12456ab</anchor>
      <arglist>(const DAnchorInfo *left)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rightChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aedbcb19d5ac5c6a555cf5129a624e826</anchor>
      <arglist>(const DAnchorInfo *right)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>horizontalCenterChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a84b6892502bbc1f8838f06df748c4daa</anchor>
      <arglist>(const DAnchorInfo *horizontalCenter)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>verticalCenterChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a6f0f93e58273cf619d2f61416808a971</anchor>
      <arglist>(const DAnchorInfo *verticalCenter)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fillChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a314be8ba3ce8dbbfeb8b96bbe7377c2a</anchor>
      <arglist>(QWidget *fill)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>centerInChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a835031f3c5c48cfd36cb834b710139c6</anchor>
      <arglist>(QWidget *centerIn)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>marginsChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aed52c71cc1425a2c32a701568968aba7</anchor>
      <arglist>(int margins)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>topMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aefb57f54b327adedc7b1d55717aebb2b</anchor>
      <arglist>(int topMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bottomMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a189869aed734dbf6d0c037e96030986a</anchor>
      <arglist>(int bottomMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>leftMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a10bdd8e627a7bd9721a556d9ccdbb568</anchor>
      <arglist>(int leftMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rightMarginChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a64d30aa142892368e71437cea18016ea</anchor>
      <arglist>(int rightMargin)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>horizontalCenterOffsetChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ac1a3584bf908941910a014201e7d3a4b</anchor>
      <arglist>(int horizontalCenterOffset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>verticalCenterOffsetChanged</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ab761897700a60941fb229121794f2fbb</anchor>
      <arglist>(int verticalCenterOffset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DAnchorsBase</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a9470bf1a76d70fbb087537281d59d219</anchor>
      <arglist>(QWidget *w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DAnchorsBase</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a7a9431c4fcbb57ce2b3d931fbf445060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DEnhancedWidget *</type>
      <name>enhancedWidget</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a35b77de9d7aa369a85543ad8e828d1f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AnchorError</type>
      <name>errorCode</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a33dec521134882d65d38af4fd481d8ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a2061dbf36f9a8e545ba80af6cdf74cc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBinding</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aca960f4d639cf1afe41772e06b7def03</anchor>
      <arglist>(const DAnchorInfo *info) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setAnchor</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a34f1ff02eb1b8cda41971e6d86dead47</anchor>
      <arglist>(QWidget *w, const Qt::AnchorPoint &amp;p, QWidget *target, const Qt::AnchorPoint &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearAnchors</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a07caa92d2fbc8811131ee4d09a6da302</anchor>
      <arglist>(const QWidget *w)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DAnchorsBase *</type>
      <name>getAnchorBaseByWidget</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ae92c1775f4be8d3447c3b54b0d705dbb</anchor>
      <arglist>(const QWidget *w)</arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>target</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a45220a39f990088e234fecbe1365618f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a826e09da24e328f0210ad8efa067946f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorsBase *</type>
      <name>anchors</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a8ac5365f1b6fe36a37c93e609c95b4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>top</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aacbe1524bf770e24d1e28b4d68463f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>bottom</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a96aab06a235a501bb0916594c4ce7415</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>left</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a56481b506ac3e8e6abea37ff300455e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>right</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a70a1e3acbc693739098c681f143621c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>horizontalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a312b8194aa10f880a1b4d96557234405</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>const DAnchorInfo *</type>
      <name>verticalCenter</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a44a33a87a7e13c559dce6fae6ca5c92e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>fill</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aee6b0024b467c0f82baf43345981972f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>centerIn</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ad41e7fff4550e1db1fdd79bebdc3ac2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>margins</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a799e0ba24f1525070d39282ad7b4f421</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>topMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>acc36da853d40582a78bda969063c5eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>bottomMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>a928fe84da6e604a3c51e5272f54379c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>leftMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>afb0e0a71973dec73ae07d36e80296614</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>rightMargin</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aaff8732012dd21a70dc767b174d727cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>horizontalCenterOffset</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>aa9e852bbe6c864772dad969ee1bec1d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>verticalCenterOffset</name>
      <anchorfile>classDAnchorsBase.html</anchorfile>
      <anchor>ae12e57aa1784328e422f266162231065</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DAnchorsBase</name>
    <filename>classDtk_1_1Widget_1_1DAnchorsBase.html</filename>
  </compound>
  <compound kind="class">
    <name>DAnchorsBasePrivate</name>
    <filename>classDAnchorsBasePrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DAnchorsRect</name>
    <filename>classDAnchorsRect.html</filename>
    <base>QRect</base>
  </compound>
  <compound kind="class">
    <name>DAppHandler</name>
    <filename>classDAppHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplication</name>
    <filename>classDApplication.html</filename>
    <base>QApplication</base>
    <member kind="signal">
      <type>void</type>
      <name>newInstanceStarted</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a38b7fcfb3df292d96a5c927ae20d03e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconThemeChanged</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aa04243a273bd99fe3ce7e12f3124c648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>screenDevicePixelRatioChanged</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>af89fd945103e479ac554571ede8f6807</anchor>
      <arglist>(QScreen *screen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DApplication</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a73028a170a4a6a7fa3df21b5d75214d6</anchor>
      <arglist>(int &amp;argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED QString</type>
      <name>theme</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a70e06597e1c69246e31bcac42ddd5a00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED void</type>
      <name>setTheme</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>afa85ceb071691c244f3be2f42c3c62e9</anchor>
      <arglist>(const QString &amp;theme)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSingleInstance</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>af62b01f4556177881b25ccfe2049bddd</anchor>
      <arglist>(const QString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSingleInstance</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a8a2bdc3f1428ba1b62f8bf8a8744ef7f</anchor>
      <arglist>(const QString &amp;key, SingleScope singleScope)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadTranslator</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a40f12cb2734cd767311354f0d61f63f8</anchor>
      <arglist>(QList&lt; QLocale &gt; localeFallback=QList&lt; QLocale &gt;()&lt;&lt; QLocale::system())</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a62e530cabd9fb6683c93da1ab3c38252</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductName</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a41c882a5a02da7821ba62c2e84fe9aa9</anchor>
      <arglist>(const QString &amp;productName)</arglist>
    </member>
    <member kind="function">
      <type>const QIcon &amp;</type>
      <name>productIcon</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a9ec689594630ab6119dde4eee650dcc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProductIcon</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>abd0323ad307928229bbd0139f8f99518</anchor>
      <arglist>(const QIcon &amp;productIcon)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationLicense</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a9097286ddc1b6a578d9085dd5acaae19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationLicense</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a3cf9e0ae96f0df1026896c43cbedbbd5</anchor>
      <arglist>(const QString &amp;license)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationDescription</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ae7783e06276a52038de9f243c686fa54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationDescription</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>add5ac906ce3f4ed28d3e019c7507de06</anchor>
      <arglist>(const QString &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationHomePage</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ace80c14cfca6c4c91351cbc8823cd970</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>applicationAcknowledgementPage</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ae90033079d15c6a3b51741d0bd45edbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationAcknowledgementPage</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>adcfc5b5a45ad93b119124757b3d39180</anchor>
      <arglist>(const QString &amp;link)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applicationAcknowledgementVisible</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ab0f0406868f4ab7c4f5ab1e1e0674d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationAcknowledgementVisible</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a618edb0773504ff4b0198a4a4d4de6a6</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>DAboutDialog *</type>
      <name>aboutDialog</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aaea7455504c6aa5b65b77ecf78096872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAboutDialog</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a754d95fd863bbdf4a4a35dceffe22458</anchor>
      <arglist>(DAboutDialog *aboutDialog)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acclimatizeVirtualKeyboard</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aaea7cd34c18033a5231ec47cb53c6e03</anchor>
      <arglist>(QWidget *window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ignoreVirtualKeyboard</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aca3455f1163aa9cc674dfe76cb734887</anchor>
      <arglist>(QWidget *window)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAcclimatizedVirtualKeyboard</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a22635d115c609cef195c83c77ce6db8b</anchor>
      <arglist>(QWidget *window) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomHandler</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a5f6ba1d148fd82f2a2eea962ca96b030</anchor>
      <arglist>(DAppHandler *handler)</arglist>
    </member>
    <member kind="function">
      <type>DAppHandler *</type>
      <name>customHandler</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a44fc3e9f9bcc317aefeb03bfa48cd51b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DApplication *</type>
      <name>globalApplication</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>abe322de4c7db559feb907af9ba05a93c</anchor>
      <arglist>(int &amp;argc, char **argv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED bool</type>
      <name>loadDXcbPlugin</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a6d7632dd40ccfadf421c405d9632d52b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDXcbPlatform</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a2c4e9f8aeb5225354370cb223504c6ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>buildDtkVersion</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a4cbf7738ecad11bb789c3205c61fba7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>runtimeDtkVersion</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aa2479fd46b37eecfecbd24f49a4dbd3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerDDESession</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>ac74e147250ed6298bbd0b3bd2ef0f5b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>customQtThemeConfigPathByUserHome</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a1b32ce2e08dc3e498fae3a20eac26c12</anchor>
      <arglist>(const QString &amp;home)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>customQtThemeConfigPath</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a21c6c54db70b9818a9e1b1a4467ee02c</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>customizedQtThemeConfigPath</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a743686e65409f08066a3de8ad35cb136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleHelpAction</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>aaa6c2336fb6a8390401138ec78ec3213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleAboutAction</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a63f27be2428e713385764a46ccf36dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>handleQuitAction</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a2b0c87ca4b25c7b5c6b7ac7dde7a5c40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visibleMenuShortcutText</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a4ce0fec3e460602f631de35803972cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visibleMenuCheckboxWidget</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a8740c958a21ed47cd25bc116c249f7c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>visibleMenuIcon</name>
      <anchorfile>classDApplication.html</anchorfile>
      <anchor>a33de68dab5d8008468dd8e4dfb93da59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DApplication</name>
    <filename>classDtk_1_1Widget_1_1DApplication.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DApplicationHelper</name>
    <filename>classDtk_1_1Widget_1_1DApplicationHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplicationHelperPrivate</name>
    <filename>classDApplicationHelperPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplicationPrivate</name>
    <filename>classDApplicationPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DApplicationSettings</name>
    <filename>classDApplicationSettings.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DApplicationSettings</name>
      <anchorfile>classDApplicationSettings.html</anchorfile>
      <anchor>afb6e3ec616fa192ba08d854bfcc8eb71</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DApplicationSettings</name>
    <filename>classDtk_1_1Widget_1_1DApplicationSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>DApplicationSettingsPrivate</name>
    <filename>classDApplicationSettingsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DAppLoader</name>
    <filename>classDAppLoader.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DAppLoader</name>
      <anchorfile>classDAppLoader.html</anchorfile>
      <anchor>a91f22ee9e938a9d229b23ad22a9d150c</anchor>
      <arglist>(const QString &amp;appName, const QString &amp;appPath=QString(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>pluginPaths</name>
      <anchorfile>classDAppLoader.html</anchorfile>
      <anchor>acf2e560373f2df08b5333d1109566b4a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DAppLoaderPrivate</name>
    <filename>classDAppLoaderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DAppProxy</name>
    <filename>classDAppProxy.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>set</name>
      <anchorfile>classDAppProxy.html</anchorfile>
      <anchor>a54b08a30eda96cf493293ae2faa490a8</anchor>
      <arglist>(const ProxyType type, const QByteArray &amp;ip, const quint32 port, const QByteArray &amp;user, const QByteArray &amp;password) const</arglist>
    </member>
    <member kind="function">
      <type>QHostAddress</type>
      <name>IP</name>
      <anchorfile>classDAppProxy.html</anchorfile>
      <anchor>a9e3923aa3acc8c74ba1aa1a8e5f81ea0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>password</name>
      <anchorfile>classDAppProxy.html</anchorfile>
      <anchor>a0b0e474c9c1e4d3028360e4a3c4d2c04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProxyType</type>
      <name>type</name>
      <anchorfile>classDAppProxy.html</anchorfile>
      <anchor>a155b411b40a6ef6000ac603f9cf274a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>user</name>
      <anchorfile>classDAppProxy.html</anchorfile>
      <anchor>a39bfd7095a8d2bd272d4696509104acf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>port</name>
      <anchorfile>classDAppProxy.html</anchorfile>
      <anchor>ab7a7890b02963d60daa84d9829b618f3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DAppProxy</name>
    <filename>classDtk_1_1NetworkManager_1_1DAppProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>DAppProxyInterface</name>
    <filename>classDAppProxyInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAppProxyPrivate</name>
    <filename>classDAppProxyPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DArchiveManager</name>
    <filename>classDArchiveManager.html</filename>
    <base>QObject</base>
    <class kind="struct">DArchiveManager::MgrArchiveData</class>
    <class kind="struct">DArchiveManager::MgrCompressOptions</class>
    <class kind="struct">DArchiveManager::MgrExtractionOptions</class>
    <class kind="struct">DArchiveManager::MgrFileEntry</class>
    <class kind="struct">DArchiveManager::MgrUpdateOptions</class>
    <member kind="signal">
      <type>void</type>
      <name>signalError</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>acffe78172cac559c637c97ce67c04f2e</anchor>
      <arglist>(MgrErrorType eErrorType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalJobFinished</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a7896435c1496c78821bbe52b367fa536</anchor>
      <arglist>(ArchiveJobType eJobType, MgrPluginFinishType eFinishType, MgrErrorType eErrorType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalprogress</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a0b19b4a4bf85a85711d4d9c0d676f2cf</anchor>
      <arglist>(double dPercentage)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalCurFileName</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a342e954dab85a7329427d2333a00772e</anchor>
      <arglist>(const QString &amp;strName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalFileWriteErrorName</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>acf8cf07f008784aeb4f95c0c8ee8e343</anchor>
      <arglist>(const QString &amp;strName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalCurArchiveName</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ab5a01c4cb9b651b06ddcf4172698e59d</anchor>
      <arglist>(const QString &amp;strArchiveName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destory_instance</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ac4cbb30f3bd2c677aab3bca3dbb3660c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createArchive</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>aa6aa8fc5528384529e0afb80b48129a4</anchor>
      <arglist>(const QList&lt; MgrFileEntry &gt; &amp;files, const QString &amp;strDestination, const MgrCompressOptions &amp;stOptions, ArchivePluginType eType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadArchive</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ad1d42865e8547b1d0d61aa5ca9be78b6</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, ArchivePluginType eType=ArchivePluginType::APT_Auto)</arglist>
    </member>
    <member kind="function">
      <type>MgrArchiveData *</type>
      <name>archiveData</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ac636e73b23221032f8f87c83959ce3bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFiles</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>afc7eb42abed6f643ede7bc0595527995</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const QList&lt; MgrFileEntry &gt; &amp;listAddEntry, const MgrCompressOptions &amp;stOptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractFiles</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ac18cd2b3775cf03620fabde8259f30ad</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const QList&lt; MgrFileEntry &gt; &amp;files, const MgrExtractionOptions &amp;stOptions, ArchivePluginType eType=ArchivePluginType::APT_Auto)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractFiles2Path</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>aa1a2fdc816b54ef4dbee46287cfb10d8</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const QList&lt; MgrFileEntry &gt; &amp;listSelEntry, const MgrExtractionOptions &amp;stOptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteFiles</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a4e0f530ec1bb71d295d39d6634483bfc</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const QList&lt; MgrFileEntry &gt; &amp;listSelEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renameFiles</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a99a1cdd049d30f284348898e134af73c</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const QList&lt; MgrFileEntry &gt; &amp;listSelEntry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>batchExtractFiles</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>acc09109474c58e6dad17ddc4ea415b0a</anchor>
      <arglist>(const QStringList &amp;listFiles, const QString &amp;strTargetPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openFile</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ad8e50202d8ba02a8e44280f12891beff</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const MgrFileEntry &amp;stEntry, const QString &amp;strTempExtractPath, const QString &amp;strProgram)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateArchiveCacheData</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>acd0dde460ab4d4c871ba834cf1cf5f5d</anchor>
      <arglist>(const MgrUpdateOptions &amp;stOptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateArchiveComment</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a5d437c8c26e3137a9ff3cf0362de44b0</anchor>
      <arglist>(const QString &amp;strArchiveFullPath, const QString &amp;strComment)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convertArchive</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a091be69a94be9411f3c0816178542e89</anchor>
      <arglist>(const QString &amp;strOriginalArchiveFullPath, const QString &amp;strTargetFullPath, const QString &amp;strNewArchiveFullPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pauseOperation</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a986289953f73e8b4c81ba1afbabdd77c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>continueOperation</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>ae98ea70791dbf765cae9592c944c660e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cancelOperation</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a95e81c1b00f2a9acbdbe2d95cd3c9e2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getCurFilePassword</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>afecbe052a442d5e0785328b5ef367a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>currentStatus</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>a50b7cfad654266b0277338ea236e9184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DArchiveManager *</type>
      <name>get_instance</name>
      <anchorfile>classDArchiveManager.html</anchorfile>
      <anchor>aa79824bd7967cbbc9b5ce7706613c03b</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Compressor::DArchiveManager</name>
    <filename>classDtk_1_1Compressor_1_1DArchiveManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DArchiveManagerPrivate</name>
    <filename>classDArchiveManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DArrowButton</name>
    <filename>classDArrowButton.html</filename>
    <base>QLabel</base>
    <member kind="function">
      <type></type>
      <name>DArrowButton</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>afa570d2c78af38fb7e44bf799a2357c1</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setArrowDirection</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>ad1052d003b3502c13400dc1e8fa76fe1</anchor>
      <arglist>(ArrowDirection direction)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>arrowDirection</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>a6a6d3c94f601ddfa1120b072099c1cc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>buttonState</name>
      <anchorfile>classDArrowButton.html</anchorfile>
      <anchor>a82b19dbe975dba3a64fce922f517dc67</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DArrowButton</name>
    <filename>classDtk_1_1Widget_1_1DArrowButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowLineDrawer</name>
    <filename>classDArrowLineDrawer.html</filename>
    <base>DDrawer</base>
    <member kind="function">
      <type></type>
      <name>DArrowLineDrawer</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a76a7391e30315aacfaf35154339dbcba</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a0dffe0d9bb45ea670b17ecb2e783a929</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpand</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a9bf76cfa638b5ee5f1eda85b330d4d98</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED DBaseLine *</type>
      <name>headerLine</name>
      <anchorfile>classDArrowLineDrawer.html</anchorfile>
      <anchor>a612be0ee404b45a02b6f4d774987e39b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DArrowLineDrawer</name>
    <filename>classDtk_1_1Widget_1_1DArrowLineDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowLineDrawerPrivate</name>
    <filename>classDArrowLineDrawerPrivate.html</filename>
    <base>DDrawerPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DArrowLineExpand</name>
    <filename>classDtk_1_1Widget_1_1DArrowLineExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>DArrowRectangle</name>
    <filename>classDArrowRectangle.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DArrowRectangleExample</name>
    <filename>classDArrowRectangleExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DArrowRectanglePrivate</name>
    <filename>classDArrowRectanglePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DAsync</name>
    <filename>classDtk_1_1Core_1_1DAsync.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DAsyncState</name>
    <filename>classDtk_1_1Core_1_1DAsyncState.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>DataAskPasswd</name>
    <filename>structDataAskPasswd.html</filename>
  </compound>
  <compound kind="struct">
    <name>DataAskQuestion</name>
    <filename>structDataAskQuestion.html</filename>
  </compound>
  <compound kind="struct">
    <name>DataFinalCallback</name>
    <filename>structDataFinalCallback.html</filename>
  </compound>
  <compound kind="class">
    <name>DataManager</name>
    <filename>classDataManager.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>void</type>
      <name>resetArchiveData</name>
      <anchorfile>classDataManager.html</anchorfile>
      <anchor>a400ee6dd228f68ee3a66b985b56fdaf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArchiveData &amp;</type>
      <name>archiveData</name>
      <anchorfile>classDataManager.html</anchorfile>
      <anchor>a70dc4c92de9a1ae981f899af724683c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DataManager &amp;</type>
      <name>get_instance</name>
      <anchorfile>classDataManager.html</anchorfile>
      <anchor>a7dd33b90415807c03c06326745502e90</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DAudioDevice</name>
    <filename>classDAudioDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DAudioEncoderInterface</name>
    <filename>classDAudioEncoderInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAudioEncoderInterfacePrivate</name>
    <filename>classDAudioEncoderInterfacePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAudioInput</name>
    <filename>classDAudioInput.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setDevice</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a0be8baf0778b63098701de12e3b11c4f</anchor>
      <arglist>(const QString &amp;device)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVolume</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a4f771a94b045946f108eba2825acb800</anchor>
      <arglist>(float volume)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a21e85de08fca5de5d59f85c92ca9b308</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceChanged</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a1832e39997e9e741fcf102316db4ee22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>volumeChanged</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a1f000399c94cb341c745d2beb729346c</anchor>
      <arglist>(float volume)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mutedChanged</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a4ad9773004a426ee5ee801cfe349536d</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>device</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a38b2be46500d633c48e4707341e8880b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a189532c9e54d60a19bf39f08a95dd79c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classDAudioInput.html</anchorfile>
      <anchor>a57957ccb0d9bf61edf0af45f6f11b9e8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DAudioInput</name>
    <filename>classDtk_1_1Multimedia_1_1DAudioInput.html</filename>
  </compound>
  <compound kind="class">
    <name>DAudioInputPrivate</name>
    <filename>classDAudioInputPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAudioOutput</name>
    <filename>classDAudioOutput.html</filename>
    <member kind="signal">
      <type>void</type>
      <name>deviceChanged</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a0f817297e448e7e1217fda1c6b2622ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>volumeChanged</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a198ed3ec84c7939c5391ee07f12d70ec</anchor>
      <arglist>(float volume)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mutedChanged</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>adad9a5edefb3fde5e431f67646623c25</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDevice</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a2afc82bf33dad9a7352b6ab7651c98bb</anchor>
      <arglist>(const DAudioDevice &amp;device)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolume</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a3e2663dac3e04b6db8fbc39795b50914</anchor>
      <arglist>(float volume)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a7ed9311811cec8fc2ff5f18370ef0b95</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="function">
      <type>DAudioDevice</type>
      <name>device</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a87e42e99f55d686cf35d5689396d82fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a793e96ee8c8e562344ee705adf5bbcda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classDAudioOutput.html</anchorfile>
      <anchor>a0031b49d11bb7b5fd9b0f840f7336d83</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DAudioOutput</name>
    <filename>classDtk_1_1Multimedia_1_1DAudioOutput.html</filename>
  </compound>
  <compound kind="class">
    <name>DAudioOutputPrivate</name>
    <filename>classDAudioOutputPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DAudioRecorder</name>
    <filename>classDAudioRecorder.html</filename>
    <member kind="function">
      <type>ACodecID</type>
      <name>codec</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>abd72241cabdaeba0f9dfba2f1e78c473</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCodec</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>abde0c1a05f9ddc71350dc8dfc22a7a82</anchor>
      <arglist>(const ACodecID &amp;codec)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bitRate</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a6257a7c04c5a6265d2d3b172817b240b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBitRate</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a0abb468e9c86ace55504b308a8077914</anchor>
      <arglist>(int bitrate)</arglist>
    </member>
    <member kind="function">
      <type>AChannelsID</type>
      <name>channelCount</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a1650969e2a5a2209f86079f96b546f7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannelCount</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a8293698b8c5ff8c72ad2efafe90bc5dc</anchor>
      <arglist>(AChannelsID channels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sampleRate</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>ad4ed2e929e427ab56e84701a2c75462d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>ac685e73aaa2ae673542bf239f6ee18d9</anchor>
      <arglist>(int rate)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>audioInput</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a9af9ecbffd861779f80faeffe09d19ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioInput</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>aed2264a98db6c383ffca52dfb621a4d9</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>outputLocation</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a77e7b69370db7c330b65a2c547adabb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setOutputLocation</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a6afa11f9a944e8131169d5d426b0c9d6</anchor>
      <arglist>(const QUrl &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classDAudioRecorder.html</anchorfile>
      <anchor>a7b19a96051e860f5f34adbcf4bf16321</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DAudioRecorder</name>
    <filename>classDtk_1_1Multimedia_1_1DAudioRecorder.html</filename>
  </compound>
  <compound kind="class">
    <name>DAudioRecorderPrivate</name>
    <filename>classDAudioRecorderPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DBackgroundGroup</name>
    <filename>classDBackgroundGroup.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DBackgroundGroupExample</name>
    <filename>classDBackgroundGroupExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DBackgroundGroupPrivate</name>
    <filename>classDBackgroundGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBaseExpand</name>
    <filename>classDtk_1_1Widget_1_1DBaseExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>DBaseExpandPrivate</name>
    <filename>classDBaseExpandPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DBaseFileWatcher</name>
    <filename>classDtk_1_1Core_1_1DBaseFileWatcher.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type>QUrl</type>
      <name>fileUrl</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>aaaafca02100e83a24d1c10ef3c771d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a52553bcef3e99c2e10db7f07a7976d66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a03d2ce92705da4fda885de51e1e55c6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restartWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a50c523b302e5e7ba1faae12305a56a42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEnabledSubfileWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>aca5b89f7fbc62821ef09054d508802ab</anchor>
      <arglist>(const QUrl &amp;subfileUrl, bool enabled=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ghostSignal</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>a420895d41ed21729e4d07ba5fb56b396</anchor>
      <arglist>(const QUrl &amp;targetUrl, SignalType1 signal, const QUrl &amp;arg1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ghostSignal</name>
      <anchorfile>classDtk_1_1Core_1_1DBaseFileWatcher.html</anchorfile>
      <anchor>ade7ca8df29710c0826047d81418643cd</anchor>
      <arglist>(const QUrl &amp;targetUrl, SignalType2 signal, const QUrl &amp;arg1, const QUrl &amp;arg2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DBaseFileWatcherPrivate</name>
    <filename>classDtk_1_1Core_1_1DBaseFileWatcherPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DBaseLine</name>
    <filename>classDBaseLine.html</filename>
    <base>QLabel</base>
    <member kind="function">
      <type>void</type>
      <name>setLeftContent</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a36273d4abfb5dde9280ee6d5640cc681</anchor>
      <arglist>(QWidget *content)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightContent</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a2920f6b0a002513a49cf80dbe4ffcbfa</anchor>
      <arglist>(QWidget *content)</arglist>
    </member>
    <member kind="function">
      <type>QBoxLayout *</type>
      <name>leftLayout</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a80f080ee43aa3291e9ba3927aff2965a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QBoxLayout *</type>
      <name>rightLayout</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>acd60ed030cff7ed8775b9729d77bd4f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a95099e63bcdad6a8d8aedcde0c82f18b</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a564bdb8bc1c1329500273afa2569b9d7</anchor>
      <arglist>(int margin)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>leftMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>a384268be3df8b63a09ce54c4fa2da710</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rightMargin</name>
      <anchorfile>classDBaseLine.html</anchorfile>
      <anchor>aecd16de73875e8eb0aa231b0483e6afe</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBaseLine</name>
    <filename>classDtk_1_1Widget_1_1DBaseLine.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlitFramebufferNode</name>
    <filename>classDBlitFramebufferNode.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlockDevice</name>
    <filename>classDBlockDevice.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>PartitionTableType</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InvalidPT</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0ab57baf9d7b7be1610f1f8f065d728c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MBR</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0af1d7fad8eb50cf83b00243e80aaa5fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0aa25caf99ad5bac7441f03a43c74b2aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownPT</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0a677449e3f0c6eb730d7ecdbc15e1eab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InvalidPT</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0ab57baf9d7b7be1610f1f8f065d728c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MBR</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0af1d7fad8eb50cf83b00243e80aaa5fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GPT</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0aa25caf99ad5bac7441f03a43c74b2aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownPT</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5a5795201cf65d4b78a07de1e79aacd0a677449e3f0c6eb730d7ecdbc15e1eab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>format</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a266e560999e5f53c76519aa39e872ff7</anchor>
      <arglist>(const QString &amp;type, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>QList&lt; QPair&lt; QString, QVariantMap &gt; &gt;</type>
      <name>getSecretConfiguration</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aa19917fd5d19a6ea4da95f06f3d5decf</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addConfigurationItem</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a2d399fbb1a38bc4854d09c2f83726f66</anchor>
      <arglist>(const QPair&lt; QString, QVariantMap &gt; &amp;item, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>removeConfigurationItem</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5e5689d6a2d53ae24346fead30f56fd0</anchor>
      <arglist>(const QPair&lt; QString, QVariantMap &gt; &amp;item, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>updateConfigurationItem</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ac3b4a83b32dc659eb37e105f9c8713ab</anchor>
      <arglist>(const QPair&lt; QString, QVariantMap &gt; &amp;oldItem, const QPair&lt; QString, QVariantMap &gt; &amp;newItem, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>openDevice</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a9f726e5beb69853238c93eab72b80c6c</anchor>
      <arglist>(const QString &amp;mode, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>openForBackup</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ac85aff129618f38eaabb18be01fa4fee</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>openForBenchmark</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a1927ffe2d10f33b77ed2930476e53a6d</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>openForRestore</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab829bd2f85210325b27f9ea2083e973e</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>rescan</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a834e94ede4a42b6e650449189de8c18d</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>mount</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ad53c2d0fc43a1236cf6d47a4dc7d7631</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>unmount</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a4cd368ee57a933a582a003a8d08aee51</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setLabel</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a432578f9659f407478ef898607403124</anchor>
      <arglist>(const QString &amp;label, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>changePassphrase</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a006100ff844d6b14e9efc86436046328</anchor>
      <arglist>(const QString &amp;passphrase, const QString &amp;newPassphrase, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ae847960e5be29258e277fd1191cce6db</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>unlock</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a55c3c8192223b890d32f2c688bf07233</anchor>
      <arglist>(const QString &amp;passphrase, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasFileSystemChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aab40208de1824252ea478474e2acd882</anchor>
      <arglist>(bool hasFileSystem)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasPartitionChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>afced061fb584a753a1444b045f615cf1</anchor>
      <arglist>(bool hasPartition)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>isEncryptedChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a2869ed8985be1c9ff5cc3b5e7348b94d</anchor>
      <arglist>(bool isEncrypted)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>configurationChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ac0e044aeb5f1969aa989237013725071</anchor>
      <arglist>(QList&lt; QPair&lt; QString, QVariantMap &gt;&gt; configuration)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cryptoBackingDeviceChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a0d4a0e99977618702b2efab62709e6c0</anchor>
      <arglist>(QString cryptoBackingDevice)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hintAutoChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>af605f46f684838200b2b5f96f009cd49</anchor>
      <arglist>(bool hintAuto)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hintIconNameChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a499157dcee08de8404143cb55a0ae0f9</anchor>
      <arglist>(QString hintIconName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hintIgnoreChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aa31ce74699e404b5d0ca7a7b3fd1c1a2</anchor>
      <arglist>(bool hintIgnore)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hintNameChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ae48687cc82fef1381b239684bd8ded92</anchor>
      <arglist>(QString hintName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hintPartitionableChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aba0880d4fd5d216e65688f78deee01c1</anchor>
      <arglist>(bool hintPartitionable)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hintSymbolicIconNameChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ac0203f4a419b506b5ed9a1138ca9e7d4</anchor>
      <arglist>(QString hintSymbolicIconName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>idLabelChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a91a815e0737db8a9ffe79c76d22c777a</anchor>
      <arglist>(QString idLabel)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>idTypeChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab5a0656dbd833a0cd366304566a1cb37</anchor>
      <arglist>(QString idType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fsTypeChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aeb6aaea2a8769171ddb0d72225ad1499</anchor>
      <arglist>(QString fsType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>idUUIDChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a6e80714a85c561da2b8feca6d754b735</anchor>
      <arglist>(QString idUUID)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>idUsageChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5f43e55ffa554829674b60855416f341</anchor>
      <arglist>(QString idUsage)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>idVersionChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a264dff820e2f7f1b70323cd14e901eb1</anchor>
      <arglist>(QString idVersion)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mDRaidChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab7dbcf32732ea7590d4ab4bc2c5824d7</anchor>
      <arglist>(QString mDRaid)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mDRaidMemberChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5468a3a72e44eda016ff6b1103f4a8d8</anchor>
      <arglist>(QString mDRaidMember)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>preferredDeviceChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a9d91ef5e0bfb0c05bc4c53f99e9d0e16</anchor>
      <arglist>(QByteArray preferredDevice)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>readOnlyChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a5868f30c550669ae3af2a72c94155041</anchor>
      <arglist>(bool readOnly)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a11600b6db83e5be7343bd5dd4975a636</anchor>
      <arglist>(quint64 size)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>symlinksChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a014b6e1d7c483c050b3bd4ddbb4d0931</anchor>
      <arglist>(QByteArrayList symlinks)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>userspaceMountOptionsChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aa8185ebb33850fc41f6bc6b7c77960ca</anchor>
      <arglist>(QStringList userspaceMountOptions)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ptTypeChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a12ada2c66aab186288350efccf581820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mountPointsChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a7ed86a40903a64c025802e506b3c975a</anchor>
      <arglist>(const QByteArrayList &amp;mountPoints)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>childConfigurationChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a2168696953bb531227d4db0a806a7abb</anchor>
      <arglist>(QList&lt; QPair&lt; QString, QVariantMap &gt;&gt; childConfiguration)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cleartextDeviceChanged</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab59c2f5cfedb3074ffba9295bf998266</anchor>
      <arglist>(const QString &amp;cleartextDevice)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ad6c46b669686fc912bf492cd53611606</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWatchChanges</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a6b768582402bfdf116ed4ea4d362a577</anchor>
      <arglist>(bool watchChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>watchChanges</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ac1ee7054ea2ffd4fdace996feff10848</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>path</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a04951127581e3f539fa2d01210ede0ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPair&lt; QString, QVariantMap &gt; &gt;</type>
      <name>configuration</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a480815bb1365dea345b4b10161d5ef7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>cryptoBackingDevice</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a641a6149f13d88455d17f202a699f08c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>device</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab0115d2d45e552bfdff6560baf56c3cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>deviceNumber</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a38b1b5cba2931041e607da2078f1481b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>drive</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a826b4f443bb50435688c7ab449c4a0a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hintAuto</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a94717260e07e1d5d57eb1e4a12c4bb30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>hintIconName</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a79fabf17b6388bf3c17e4a84a910eb36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hintIgnore</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aaefc805ea6f1e4e33b80f2233b2235c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>hintName</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>af8767a426d00612177bf65127f4b96ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hintPartitionable</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a352f88ff841d5e67d9e6071e1c8da610</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>hintSymbolicIconName</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a8a0a771e900e757ef5246f269eaa841f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hintSystem</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab8fdbc416eb3aad00e92e5898d1e50ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>id</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>abcbecbf50e6ea0b344e047739177ec4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>idLabel</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab34caca8c3b24373c1124eeef7b26119</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>idType</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a79662772fa18b62f4773284d23785ab4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>idUUID</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a204aab08ddc1ea3c03a4f8a7ba23d387</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>idUsage</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a355e23e5bd6a92b1e2f66506b47a60ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>idVersion</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a0f0938712730818585c8eb74a5ac12af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>mDRaid</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a98290b2d75b35954ecfc524fcc3ea15e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>mDRaidMember</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aaa7228783866dadc94471310116b48d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>preferredDevice</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>af66b4170c29be8865cee7549bce79f64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readOnly</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a2a9537ed18ee9f8c43a5da855784226f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>size</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a32229195b8ecc15b4e6b567a3d04c9b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArrayList</type>
      <name>symlinks</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a1df9f5d4532042be23f81504b99da210</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>userspaceMountOptions</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a64cada970e696a35585e0490dad2ec91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetLabel</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a7b3eea4e47355b4f4253d6164c878665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFileSystem</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ad27cc4473fe5d5c16fb712d65c401f7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPartition</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aa0b122f3c46858e9ebce3b4e65dfa1a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEncrypted</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aa61ff6a82eade8db1001b183c9d0be9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoopDevice</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab4538e7083e99b9734a297089d6c4229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArrayList</type>
      <name>mountPoints</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a414eda44af5d4e54e40056546c71081c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PartitionTableType</type>
      <name>partitionTableType</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a8fee32e1cf8c6bf8a67d029b19e23391</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPair&lt; QString, QVariantMap &gt; &gt;</type>
      <name>childConfiguration</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a68daa8b239d01ef9b36da2c8d6a50b28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasFileSystem</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>aa6044778c89d815b309d6aaffd7cfd2c</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasPartition</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a338dbe02ad92200c7d5926a29c957c2b</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEncrypted</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ab36bd550a83e83937a3f42815b1677f0</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isLoopDevice</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>a193eb5457bbabd14b47763b4541f2948</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>cleartextDevice</name>
      <anchorfile>classDBlockDevice.html</anchorfile>
      <anchor>ae9f010c2c2bc4a4bc7250d7dee1d80c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DBlockDevice</name>
    <filename>classDtk_1_1Mount_1_1DBlockDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlockDeviceMonitor</name>
    <filename>classDBlockDeviceMonitor.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>aa1dd2818222e868f3d6d46152a7e8b90</anchor>
      <arglist>(const QString &amp;devPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>a783679efa13a3d729ee76d775a65e2f9</anchor>
      <arglist>(const QString &amp;devPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mountAdded</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>ad434757917483f32ce81e16b42894d8f</anchor>
      <arglist>(const QString &amp;devPath, const QString &amp;mountPoint)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mountRemoved</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>aedf6c77eba802e34565691d11f284808</anchor>
      <arglist>(const QString &amp;devPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fileSystemAdded</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>a58344f24fcb7893231be3718761d5011</anchor>
      <arglist>(const QString &amp;devPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fileSystemRemoved</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>af01345effcaf7f75007daba20e8a7bf6</anchor>
      <arglist>(const QString &amp;devPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>driveAdded</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>a885da3dfd5010c0321eaa759475db2b5</anchor>
      <arglist>(const QString &amp;drvPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>driveRemoved</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>a1e0ca38089f616d8cc341b8aa41e4ff8</anchor>
      <arglist>(const QString &amp;drvPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>propertiesChanged</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>a0254c9c26fddbc67dcb6e63e27f7612a</anchor>
      <arglist>(const QString &amp;devPath, const QMap&lt; Dtk::Mount::BlockDeviceProperty, QVariant &gt; &amp;changes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DBlockDeviceMonitor</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>aafa6c00b5907dd6800436708ecad8eaa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWatchChanges</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>af4516155de0e6a6ffe4b5da2b9516459</anchor>
      <arglist>(bool watchChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>watchChanges</name>
      <anchorfile>classDBlockDeviceMonitor.html</anchorfile>
      <anchor>a985db73804d5db59a85db38bcea84218</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DBlockDeviceMonitor</name>
    <filename>classDtk_1_1Mount_1_1DBlockDeviceMonitor.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlockDeviceMonitorPrivate</name>
    <filename>classDBlockDeviceMonitorPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DBlockDevicePrivate</name>
    <filename>classDBlockDevicePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DBlockPartition</name>
    <filename>classDBlockPartition.html</filename>
    <base>DBlockDevice</base>
    <member kind="slot">
      <type>void</type>
      <name>deletePartition</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a64b6867f38a53292098cc7546739fe9d</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>abf41e27c2bc1f111a75bcba3d6554182</anchor>
      <arglist>(quint64 size, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a019cf8a86866bd5bd46d86782c584e29</anchor>
      <arglist>(quint64 flags, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a20546d6541a4ea1c0ac5570c2befe616</anchor>
      <arglist>(const QString &amp;name, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>ad7f0fc79e58fecfa3663bea3280601ef</anchor>
      <arglist>(const QString &amp;type, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a759fa0be72f453e23a1d3bdfd21907d0</anchor>
      <arglist>(Dtk::Mount::DBlockPartition::MbrPartitionType type, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>flagsChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a744100f91af44c2ae70e03964ce14541</anchor>
      <arglist>(quint64 flags)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>isContainedChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a5fae60b1fb84e542d3bbe57edbf95e24</anchor>
      <arglist>(bool isContained)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>isContainerChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a76ada9123de3b0e876164d77f2d6c89d</anchor>
      <arglist>(bool isContainer)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>nameChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a8531b7f9f2cb721537b378fb144d98d6</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>numberChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a82add7669ebd3670538d1f2dbba9a58b</anchor>
      <arglist>(uint number)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>offsetChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>aac8a764bcf486e1ba41db110e4c3ba9f</anchor>
      <arglist>(quint64 offset)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a9fe509b1f452a685161abf7a563b63a5</anchor>
      <arglist>(quint64 size)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>typeChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a9d54e089ee2ed2b04353949d0fbe6351</anchor>
      <arglist>(const QString &amp;type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mbrPartitionTypeChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a57fbd7bcbad3f6f34b2c4d6bd611154f</anchor>
      <arglist>(Dtk::Mount::DBlockPartition::MbrPartitionType type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gptPartitionTypeChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a1c120e0774e488eff46dfa91d7b27551</anchor>
      <arglist>(Dtk::Mount::DBlockPartition::GptPartitionType type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>UUIDChanged</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>aa85a84e9b7a78a01310a5085d03ac9c2</anchor>
      <arglist>(const QString &amp;UUID)</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>flags</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a7e3c923219f91c1c8182288a0ad31732</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContained</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>ac0eadcb2c430ce43a54cc468f47e160e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContainer</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a4b22b0e83d00766f0edd7d1e85fac640</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a664a40b4f3388cf11ff1cb6249225d6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>number</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a4b68c902562d78e3fd833a6c66878520</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>offset</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a04e59947d90677d094b002576d951213</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>size</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a8ab3383336da1f7cec9fdb8c5e8d6973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>table</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a71eae1a3d887eb11b71b720a2ea8b601</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>type</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>aeed9d2e6b97833446de603bc406cae13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MbrPartitionType</type>
      <name>mbrType</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a32674112682d7b068a35c4160c9388e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>GptPartitionType</type>
      <name>gptType</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>a8b76824661423e95aaf3781c71c4cf68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>UUID</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>adde27e0ebd6b054c434366e0d0b9354d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>mbrTypeDescription</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>af5b9c7010cf391ea126571eafdf16a50</anchor>
      <arglist>(MbrPartitionType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>gptTypeDescription</name>
      <anchorfile>classDBlockPartition.html</anchorfile>
      <anchor>ab9b39c8f2a6867d38a1f8646c2cfc03e</anchor>
      <arglist>(GptPartitionType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DBlockPartition</name>
    <filename>classDtk_1_1Mount_1_1DBlockPartition.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlockPartitionPrivate</name>
    <filename>classDBlockPartitionPrivate.html</filename>
    <base>DBlockDevicePrivate</base>
  </compound>
  <compound kind="class">
    <name>DBlurEffectGroup</name>
    <filename>classDBlurEffectGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectGroupPrivate</name>
    <filename>classDBlurEffectGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectWidget</name>
    <filename>classDBlurEffectWidget.html</filename>
    <base>QWidget</base>
    <member kind="enumeration">
      <type></type>
      <name>BlurMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>abb491650f59b66f7da7a831361e11697</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a6c26cbeb53ad47fd5d5ad8cde32ece9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BehindWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27afec58b54b67a2b778711834736d2c34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWidgetBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a8d102c67159e2097f8429b48d38e3bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a6c26cbeb53ad47fd5d5ad8cde32ece9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BehindWindowBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27afec58b54b67a2b778711834736d2c34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InWidgetBlend</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab4a45494e2b797a5f1cf5899bb737e27a8d102c67159e2097f8429b48d38e3bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a59accaf7deeeaedfe6db5b98963c12bb</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a4f4545ac16b97285d191f0dca14dfdcb</anchor>
      <arglist>(BlurMode mode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab92e199673108cf30eff4ca23f86a38b</anchor>
      <arglist>(BlendMode blendMode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlurRectXRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ac3c76f52d564c9ef5d4c0a9414aaa1b6</anchor>
      <arglist>(int blurRectXRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlurRectYRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adf0c2a2569bf3a30c1c70e865e94da32</anchor>
      <arglist>(int blurRectYRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskAlpha</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6f30c78c1d300aa67618011b73da0193</anchor>
      <arglist>(quint8 alpha)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adcf40e6717feb3bbdab76f225b424d91</anchor>
      <arglist>(QColor maskColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ac86b942461c1859b46bbd06b30c6f36a</anchor>
      <arglist>(MaskColorType type)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFull</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a92d692a82aa274703cb769e51091c9c8</anchor>
      <arglist>(bool full)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBlurEnabled</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a5d800c13590f42fac94ab7538ffe09a0</anchor>
      <arglist>(bool blurEnabled)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>updateBlurSourceImage</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a38276fe00ff77292deacb53df9c0fb03</anchor>
      <arglist>(const QRegion &amp;ren)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>radiusChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ae6b0cb0ecc43cc3aeda28d7de545e31e</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>modeChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a3dda6da48a21ceecaa989db4775caac9</anchor>
      <arglist>(BlurMode mode)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blendModeChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6f2f8b146e5d22fa4e34d53bf54bf92c</anchor>
      <arglist>(BlendMode blendMode)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blurRectXRadiusChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab2ae5a7ebf4c8a4748dcbc2a6949da27</anchor>
      <arglist>(int blurRectXRadius)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blurRectYRadiusChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a7551308bfe9069c208aecc4cad1fc235</anchor>
      <arglist>(int blurRectYRadius)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>maskAlphaChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a9f3b6a39b02c4896ea0ccc5221e1c3fb</anchor>
      <arglist>(quint8 alpha)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>maskColorChanged</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>aabf36ba2fdee5b10e12ecd45e488cebf</anchor>
      <arglist>(QColor maskColor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBlurEffectWidget</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>afcb874ed4e858c331ccc83c1f0c8ae85</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ad2a55cda48d183febcc66f7c369296ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlurMode</type>
      <name>mode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a0071a2d6abdcde0475572a6cd6e6168e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlendMode</type>
      <name>blendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a539f21e29341285225bdc9cfc2191503</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blurRectXRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ac2af0b53842b1dbaeb86280265e077f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>blurRectYRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a3d732ca8b69ef478477adcb2eed64099</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFull</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a833eba01afb8853b8199fcb8179022a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blurEnabled</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ab592c0d07f336f03c62fd10868a5565c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>maskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a72d60aad3b2b4d8ab8ee657952b202b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaskPath</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a4bd4dea7dd5a5dd7cfe972633756fedc</anchor>
      <arglist>(const QPainterPath &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceImage</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a669449fe8e62a8bf9bf0385e208dd1cb</anchor>
      <arglist>(const QImage &amp;image, bool autoScale=true)</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>radius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adbdaa823c0c6ce8733b78ab3832471af</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>BlurMode</type>
      <name>mode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>ae0edc0fb4d640b202334355bca2a949e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>BlendMode</type>
      <name>blendMode</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6a7a90cded652beb360c0bf8f5505090</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>blurRectXRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a6e9cdc1ae92413ed73f75acc97b2feac</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>blurRectYRadius</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a23fc23b3085ba61cee2614dfe2ba37aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>maskColor</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a1719acaf60c3e21837850546966ddf8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint8</type>
      <name>maskAlpha</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>adc07ddda93428f01a234dca983731b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>full</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>afa658f00726c1330d8d0f1174e42cba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>blurEnabled</name>
      <anchorfile>classDBlurEffectWidget.html</anchorfile>
      <anchor>a28556e99af2f78eeae8e3f2985f7197e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBlurEffectWidget</name>
    <filename>classDtk_1_1Widget_1_1DBlurEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DBlurEffectWidgetPrivate</name>
    <filename>classDBlurEffectWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DBoxWidget</name>
    <filename>classDBoxWidget.html</filename>
    <base>QFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a4ea54ed728dbe1de2d154c9cbc954fc7</anchor>
      <arglist>(QBoxLayout::Direction direction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBoxWidget</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a06808410e0d74af703589294cac4e3a7</anchor>
      <arglist>(QBoxLayout::Direction direction, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QBoxLayout *</type>
      <name>layout</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a5333af54ecf805a764f6294458a5b365</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWidget</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a1471b589e5b8c7c06e3acf5bcb4e811e</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>aec9742fcba6686cb15bee45f7f814898</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSize</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>ab53cc9838a42469a2521f228a3f7afdf</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a3d62f6a37ecb00225ddd8423a3dd3e15</anchor>
      <arglist>(QEvent *ee) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="property">
      <type>QBoxLayout::Direction</type>
      <name>direction</name>
      <anchorfile>classDBoxWidget.html</anchorfile>
      <anchor>a122870e3eb817bd436682f0c3223f44b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DBoxWidget</name>
    <filename>classDtk_1_1Widget_1_1DBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DBoxWidgetPrivate</name>
    <filename>classDBoxWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DBuiltinIconEngine</name>
    <filename>classDBuiltinIconEngine.html</filename>
    <base>QIconEngine</base>
  </compound>
  <compound kind="struct">
    <name>DBusInhibitor</name>
    <filename>structDBusInhibitor.html</filename>
  </compound>
  <compound kind="class">
    <name>DBusInterface</name>
    <filename>classDBusInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DBusMPRIS</name>
    <filename>classDBusMPRIS.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusScheduledShutdownValue</name>
    <filename>structDBusScheduledShutdownValue.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusSeat</name>
    <filename>structDBusSeat.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusSeatPath</name>
    <filename>structDBusSeatPath.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusServerInformation</name>
    <filename>structDBusServerInformation.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusSession</name>
    <filename>structDBusSession.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusSessionPath</name>
    <filename>structDBusSessionPath.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusUser</name>
    <filename>structDBusUser.html</filename>
  </compound>
  <compound kind="struct">
    <name>DBusUserPath</name>
    <filename>structDBusUserPath.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBox</name>
    <filename>classDButtonBox.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DButtonBox</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>af6cf7be3a656e516fe8af04aa8427bc7</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Orientation</type>
      <name>orientation</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>ac9a1a8746a2c3d59b79ff6b8b0db3d54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>aa0157febb4a17ebe05cfb81f00964ead</anchor>
      <arglist>(Qt::Orientation orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setButtonList</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>a65dbe6b119e229903164d23021dc3bd1</anchor>
      <arglist>(const QList&lt; DButtonBoxButton * &gt; &amp;list, bool checkable)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QAbstractButton * &gt;</type>
      <name>buttonList</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>ad2285d275a65d4d908a74474fe7c8345</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QAbstractButton *</type>
      <name>checkedButton</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>abef92bfdeee48db3f275c69bbcfa58bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QAbstractButton *</type>
      <name>button</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>a1b5619365631bc714822215312501a31</anchor>
      <arglist>(int id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>acdfbf4360649f9b80812e22be041e106</anchor>
      <arglist>(QAbstractButton *button, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>abee8987391a8a391f2282dab56036886</anchor>
      <arglist>(QAbstractButton *button) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkedId</name>
      <anchorfile>classDButtonBox.html</anchorfile>
      <anchor>a630447682360987db32f965eb7e1937b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DButtonBox</name>
    <filename>classDtk_1_1Widget_1_1DButtonBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBoxButton</name>
    <filename>classDButtonBoxButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>acca9165c403ba41be4fe263a1d9bd6dc</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>ac99812eada587b77df46aca6df711c37</anchor>
      <arglist>(const QIcon &amp;icon, const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>ab12325e3229260bdfb26e44c30ff8698</anchor>
      <arglist>(QStyle::StandardPixmap iconType=static_cast&lt; QStyle::StandardPixmap &gt;(-1), const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DButtonBoxButton</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a570d48a2f246cf09eedbb3b624bcd903</anchor>
      <arglist>(DStyle::StandardPixmap iconType=static_cast&lt; DStyle::StandardPixmap &gt;(-1), const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>ab1b32ddd68126a52c49096b75aea42af</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a1fb5a812ce8247a0b05be56d349a3120</anchor>
      <arglist>(QStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>af084828cb1ab61d24612e7ab31c5c7a4</anchor>
      <arglist>(DStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a6aa9de996d63db2f140fd793bd2f7681</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>aaf40378beefd6b500308e434944f034d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>minimumSizeHint</name>
      <anchorfile>classDButtonBoxButton.html</anchorfile>
      <anchor>a1e8c0f150a3b4ce6c9e04bcfa62898bd</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DButtonBoxButton</name>
    <filename>classDtk_1_1Widget_1_1DButtonBoxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBoxButtonPrivate</name>
    <filename>classDButtonBoxButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DButtonBoxExample</name>
    <filename>classDButtonBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DButtonBoxPrivate</name>
    <filename>classDButtonBoxPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DCalendarWidgetExample</name>
    <filename>classDCalendarWidgetExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DCamera</name>
    <filename>classDCamera.html</filename>
    <member kind="function">
      <type>void</type>
      <name>takeOne</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>ac2e09502233001926f358a0bbf24542b</anchor>
      <arglist>(const QString &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>takeVideo</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a0808b17b93082835763e739ba5b4cb07</anchor>
      <arglist>(const QString &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a910d43c373ed4c444bcdd69b904fc7da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>add13b1e00ccfb309ddeb71a564402571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFfmpegEnv</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>af7089cc52ac9ec46e751f70dbaf63772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWaylandEnv</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a460af5b31ccca42515c019f3d8cf2b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewfinder</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a5e6ccf926beb6e9a5dfffc5476c41117</anchor>
      <arglist>(QVideoWidget *viewfinder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setstate</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>ade9835ebe83489d49cc80cfe3a150c22</anchor>
      <arglist>(QCamera::State newState)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkCamera</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>ab4da81530c85249786535b8b7dd31ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DMediaCaptureSession *</type>
      <name>captureSession</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a8ebfd6f10002e0f5714d4f987d78485a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>devList</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a0c04cb8f834f05586e01c9981e720cf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>openDev</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a9c33578e0a19cc2f31703686d086a7f2</anchor>
      <arglist>(const QString &amp;sDevName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeDev</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>aece11655529f862de0960b2f2b48721c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>yuvbuffer</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a00b4d8b10f2bd5412b9bff29e6de2874</anchor>
      <arglist>(uint &amp;width, uint &amp;height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resolutionSettings</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a712035f79709f210fe267409d1bceede</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QSize &gt;</type>
      <name>resolutions</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a74db4ca2c51e8f95d321c4a68b04296e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCameraCollectionFormat</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a1c6fe5773e2d1f52a14ee6998d1e87e7</anchor>
      <arglist>(const uint32_t &amp;pixelformat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilter</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a975a52a4ac219f00b93affd4817265c6</anchor>
      <arglist>(const QString &amp;filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExposure</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a270176cb9a03590e135b9cc97d052ec5</anchor>
      <arglist>(const int &amp;exposure)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; uint32_t &gt;</type>
      <name>supportedViewfinderPixelFormats</name>
      <anchorfile>classDCamera.html</anchorfile>
      <anchor>a52d1d933ae2d40e99df44790ddd7b33f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DCamera</name>
    <filename>classDtk_1_1Multimedia_1_1DCamera.html</filename>
  </compound>
  <compound kind="class">
    <name>DCameraPrivate</name>
    <filename>classDCameraPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapDir</name>
    <filename>classDtk_1_1Core_1_1DCapDir.html</filename>
    <base>QDir</base>
    <member kind="function">
      <type></type>
      <name>DCapDir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a4e5751f1099f8ed49ff87e14de786b4a</anchor>
      <arglist>(const DCapDir &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DCapDir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a881783734135ecd58c5117c10b2a31b3</anchor>
      <arglist>(const QString &amp;path=QString())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DCapDir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>ab733911ac8dd0cae56033afc9f811903</anchor>
      <arglist>(const QString &amp;path, const QString &amp;nameFilter, SortFlags sort=SortFlags(Name|IgnoreCase), Filters filter=AllEntries)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPath</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>acfb28169aea65fcee18633592487e7ee</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cd</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a2a122ec0af363d5734ddf81fbe0f4252</anchor>
      <arglist>(const QString &amp;dirName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>aa5e9a95c7843175a3e0cfcb7e880738b</anchor>
      <arglist>(const QString &amp;dirName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmdir</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>aef8430e688587a69304b53dd11c83cca</anchor>
      <arglist>(const QString &amp;dirName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkpath</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>ae2dbcf9385dcd85e71d19a74ff6e66ec</anchor>
      <arglist>(const QString &amp;dirPath) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rmpath</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>adb9ccb01ef449c4535526279431b2ea0</anchor>
      <arglist>(const QString &amp;dirPath) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>ae8a867af0a1bab2d4000bc07f03889c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>af0611146cba8aeb7257484a53cbd9481</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>afb849e9272242afc7f2f8dd6f4d23fb5</anchor>
      <arglist>(const QString &amp;oldName, const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapDir.html</anchorfile>
      <anchor>a1ff7317dff5cc6f4837548138f718656</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapDirPrivate</name>
    <filename>classDtk_1_1Core_1_1DCapDirPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFile</name>
    <filename>classDtk_1_1Core_1_1DCapFile.html</filename>
    <base>QFile</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type></type>
      <name>DCapFile</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a4cef0e5a801edd0dcdbbe8d6cb0b60d1</anchor>
      <arglist>(const QString &amp;name, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ac9bb0457a8e9b837a8d64550c98a2445</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>af412269eaf0d6fd7ecb33145acd049c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>symLinkTarget</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a3229c69a572a2c99350d7dd79767bb56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ada9871b34d2ceb9059208a3d7e3e1dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrash</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>abb60764abae1e5aac017be2e616cfcd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ab1a224fb142fbf27ae9a6e132eae7957</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ae648cab7e8089970c10816632dc17c6e</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a2dab4eb6c80e9f6825d83061aaeb19e6</anchor>
      <arglist>(const QString &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a133ae6d1a3ad7bb3b16f41234d124bcd</anchor>
      <arglist>(OpenMode flags) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resize</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a63d82b73758b0c3ba7125844aa28b4ef</anchor>
      <arglist>(qint64 sz) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ae349e5ad70e1d6a4d2782a068bd7eaf2</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a428e5c2b74f31aed482831fbb7b88eb7</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>moveToTrash</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a1c902b31afee7ee5923c043e2eca7b26</anchor>
      <arglist>(const QString &amp;fileName, QString *pathInTrash=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a558a5a8fe9e40b2b9de0e32b55ba7a53</anchor>
      <arglist>(const QString &amp;oldName, const QString &amp;newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>link</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>af21ddbf40b79ac90b59d1cbbd48cb3c1</anchor>
      <arglist>(const QString &amp;oldname, const QString &amp;newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>copy</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>a46644013f107a3adfb04943433f840c1</anchor>
      <arglist>(const QString &amp;fileName, const QString &amp;newName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>resize</name>
      <anchorfile>classDtk_1_1Core_1_1DCapFile.html</anchorfile>
      <anchor>ac3ff2a8ca8729c3ec75137cb43734df3</anchor>
      <arglist>(const QString &amp;filename, qint64 sz)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFilePrivate</name>
    <filename>classDtk_1_1Core_1_1DCapFilePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFSFileEngine</name>
    <filename>classDtk_1_1Core_1_1DCapFSFileEngine.html</filename>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFSFileEngineHandler</name>
    <filename>classDtk_1_1Core_1_1DCapFSFileEngineHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapFSFileEnginePrivate</name>
    <filename>classDtk_1_1Core_1_1DCapFSFileEnginePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapManager</name>
    <filename>classDtk_1_1Core_1_1DCapManager.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapManager_</name>
    <filename>classDtk_1_1Core_1_1DCapManager__.html</filename>
    <base>Dtk::Core::DCapManager</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DCapManagerPrivate</name>
    <filename>classDtk_1_1Core_1_1DCapManagerPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DCheckButtonExample</name>
    <filename>classDCheckButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DCircleProgress</name>
    <filename>classDCircleProgress.html</filename>
    <base>QWidget</base>
    <member kind="signal">
      <type>void</type>
      <name>clicked</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>abe12d28e859b930181eb2c8b26968072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mouseEntered</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>abf53af8d0b739301e9baca489c8bfcfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mouseLeaved</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a8217d2ed85c16af765d9474703ba8df4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>ace2b2bfcca94a12c95e8b836a6594222</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>adfc0450b707451772c694168fd1f6072</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>const QString</type>
      <name>text</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>aec8576adce8f18664e70de0fbc2bfedd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a6e1ad88acf5d1d6072335c5777fce80e</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>const QColor</type>
      <name>backgroundColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a232dfe720cdda8310b1500322a36ea93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a52ac10d6997f23b7e1059f452616a0c9</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>const QColor</type>
      <name>chunkColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>afdf7c97b22507f939d3152025a8d6190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChunkColor</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a92a60c0404e5cec5bfaa2b5bf3e13e8c</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lineWidth</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>adb2fb3b055e95a0ccfa5e84d2c32dfe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLineWidth</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a76e2a0a1752e2e77c214ba2483478984</anchor>
      <arglist>(const int width)</arglist>
    </member>
    <member kind="function">
      <type>QLabel *</type>
      <name>topLabel</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a3d55da6541226fbfcbfa1c10fe234634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLabel *</type>
      <name>bottomLabel</name>
      <anchorfile>classDCircleProgress.html</anchorfile>
      <anchor>a34ce5b6649a007f121a009f8287a0a9d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCircleProgress</name>
    <filename>classDtk_1_1Widget_1_1DCircleProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>DCircleProgressPrivate</name>
    <filename>classDCircleProgressPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DClipEffectWidget</name>
    <filename>classDClipEffectWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setMargins</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a034a0592a55329419913c06adda5d152</anchor>
      <arglist>(QMargins margins)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a689a4f16d653347f8bedad2b14a23aad</anchor>
      <arglist>(const QPainterPath &amp;path)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>marginsChanged</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a9d57e9b8f592fc2c5707d6fc6a75c5cd</anchor>
      <arglist>(QMargins margins)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>clipPathChanged</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a185cbdc4702685a90c03320d5592ac8f</anchor>
      <arglist>(QPainterPath clipPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DClipEffectWidget</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a8004bf24f2216ce58ff1f66cdd175d57</anchor>
      <arglist>(QWidget *parent)</arglist>
    </member>
    <member kind="property">
      <type>QMargins</type>
      <name>margins</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a278bd703ef7f428b5ed2f960a296e390</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDClipEffectWidget.html</anchorfile>
      <anchor>a5edd7f09635bacaffcf9b3a26b228bef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DClipEffectWidget</name>
    <filename>classDtk_1_1Widget_1_1DClipEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DClipEffectWidgetPrivate</name>
    <filename>classDClipEffectWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DColor</name>
    <filename>classDColor.html</filename>
  </compound>
  <compound kind="class">
    <name>DColoredProgressBar</name>
    <filename>classDColoredProgressBar.html</filename>
    <base>QProgressBar</base>
    <member kind="function">
      <type>void</type>
      <name>addThreshold</name>
      <anchorfile>classDColoredProgressBar.html</anchorfile>
      <anchor>a31a4620e4f5271c143ce266f5a7287c3</anchor>
      <arglist>(int threshold, QBrush brush)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeThreshold</name>
      <anchorfile>classDColoredProgressBar.html</anchorfile>
      <anchor>a78abbc00612361a2e3c90ab33bf744f6</anchor>
      <arglist>(int threshold)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>thresholds</name>
      <anchorfile>classDColoredProgressBar.html</anchorfile>
      <anchor>a2aadd9546ce6954e7bfbe1ad939a4624</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DColoredProgressBar</name>
    <filename>classDtk_1_1Widget_1_1DColoredProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>DColoredProgressBarExample</name>
    <filename>classDColoredProgressBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DColoredProgressBarPrivate</name>
    <filename>classDColoredProgressBarPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DColumnViewExample</name>
    <filename>classDColumnViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DComboBox</name>
    <filename>classDComboBox.html</filename>
    <base>QComboBox</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showPopup</name>
      <anchorfile>classDComboBox.html</anchorfile>
      <anchor>aac57ec0e10963c1a5bcebd8ddee87fed</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DComboBoxExample</name>
    <filename>classDComboBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DFileDialog::DComboBoxOptions</name>
    <filename>structDFileDialog_1_1DComboBoxOptions.html</filename>
  </compound>
  <compound kind="class">
    <name>DComboBoxPrivate</name>
    <filename>classDComboBoxPrivate.html</filename>
    <member kind="function">
      <type>QRect</type>
      <name>popupGeometry</name>
      <anchorfile>classDComboBoxPrivate.html</anchorfile>
      <anchor>ae68984c0fe8f3208ea0dcc634cb3b438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeWidthHint</name>
      <anchorfile>classDComboBoxPrivate.html</anchorfile>
      <anchor>a6cfe3d8b9ffb08dd575a2a36e2cbc077</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DCommandLinkButton</name>
    <filename>classDCommandLinkButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="function">
      <type></type>
      <name>DCommandLinkButton</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a6e3d53507e7f520fe8e46e7cdc004c40</anchor>
      <arglist>(const QString text, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a20141e8ced0644f3a002c94ce11d3822</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initStyleOption</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a7f84c293340be9fc0bb756142be6977b</anchor>
      <arglist>(DStyleOptionButton *option) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDCommandLinkButton.html</anchorfile>
      <anchor>a8352305e3993778383b3456e9ee9c1f3</anchor>
      <arglist>(QPaintEvent *e) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCommandLinkButton</name>
    <filename>classDtk_1_1Widget_1_1DCommandLinkButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DCompositeManager</name>
    <filename>classDCompositeManager.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>void</type>
      <name>overrideCompositeMode</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a5785da8c5a2b6aca225c98bf5f991b5b</anchor>
      <arglist>(bool useCompositing)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>composited</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>afa84dd322489ca9e4383728a0c0e8c2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Platform</type>
      <name>platform</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a14adfe5d2947f014fe5f578c491f80cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTestFlag</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>ab55f71f33bbbc6e505bd11d49e96e394</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestFlag</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a9804d83ff45d96c78fc79946a0588f48</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZXIntgraphics</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>aa532393d3e013c4dbb0455f239483e5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PlayerOptionList</type>
      <name>getProfile</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a27b10c4f9960c390d04f4f191379f129</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>PlayerOptionList</type>
      <name>getBestProfile</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a37d650e06153e063e57c1fe34cadd9bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>softDecodeCheck</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>ad00961d2b71004e568220a71aeda84e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnlySoftDecode</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a516dddbbbf133dc40c0bb48699df15f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSpecialControls</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a88c3103de4b936db9dd29e6e66e92615</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMpvConfig</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a05bf58f0d1ce173a59eb63fd63357ca6</anchor>
      <arglist>(QMap&lt; QString, QString &gt; *&amp;aimMap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>first_check_wayland_env</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a555c8b25c4b508089f372fb69cbff756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>check_wayland_env</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>aabc23ebf36bf73797dc36c1ae9471d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DCompositeManager &amp;</type>
      <name>get</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a5a2c344c16c5a42bdb0e399f0ecafdc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>detectOpenGLEarly</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>ab01cb5cbccbd8c7d3f6f62a43f8b0df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static OpenGLInteropKind</type>
      <name>interopKind</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a8a2615ae0f5dd137140bf87c8364ec84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>runningOnVmwgfx</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>afbc796998738d7e545e61f7b54342673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPadSystem</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>aaeeb5c9395ecbc6bba789d70aedce393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isCanHwdec</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>aaddc9132b01098e764411c5bb615e8d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCanHwdec</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>ab715df3de7c437f14d4ac460b915b978</anchor>
      <arglist>(bool bCanHwdec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMpvExists</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a5bac397722b6f6368328c8bd81355c86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>detectPciID</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a4a18fb149c989bbfeb376cc355eae616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>runningOnNvidia</name>
      <anchorfile>classDCompositeManager.html</anchorfile>
      <anchor>a2231e88e87c62d7094888d9aca2b437e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DCompositeManager</name>
    <filename>classDtk_1_1Multimedia_1_1DCompositeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DCompositeManagerPrivate</name>
    <filename>classDCompositeManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfig</name>
    <filename>classDtk_1_1Core_1_1DConfig.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigBackend</name>
    <filename>classDtk_1_1Core_1_1DConfigBackend.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigCache</name>
    <filename>classDtk_1_1Core_1_1DConfigCache.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigCacheImpl</name>
    <filename>classDtk_1_1Core_1_1DConfigCacheImpl.html</filename>
    <base>Dtk::Core::DConfigCache</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigFile</name>
    <filename>classDtk_1_1Core_1_1DConfigFile.html</filename>
    <base>Dtk::Core::DObject</base>
    <class kind="struct">Dtk::Core::DConfigFile::Version</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigFilePrivate</name>
    <filename>classDtk_1_1Core_1_1DConfigFilePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigInfo</name>
    <filename>classDtk_1_1Core_1_1DConfigInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DConfigKey</name>
    <filename>structDtk_1_1Core_1_1DConfigKey.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigMeta</name>
    <filename>classDtk_1_1Core_1_1DConfigMeta.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigMetaImpl</name>
    <filename>classDtk_1_1Core_1_1DConfigMetaImpl.html</filename>
    <base>Dtk::Core::DConfigMeta</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DConfigPrivate</name>
    <filename>classDtk_1_1Core_1_1DConfigPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DConfigWrapper</name>
    <filename>classDConfigWrapper.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>QVariant</type>
      <name>value</name>
      <anchorfile>classDConfigWrapper.html</anchorfile>
      <anchor>abd3cb3f6007d254dd45b6da2f3289399</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;fallback=QVariant()) const</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDConfigWrapper.html</anchorfile>
      <anchor>ace46c46bda6d265c0093ed6c9cdb2967</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>QStringList</type>
      <name>keyList</name>
      <anchorfile>classDConfigWrapper.html</anchorfile>
      <anchor>a95111c12f72a890bbaa25cf4d91484dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classDConfigWrapper.html</anchorfile>
      <anchor>a5bca5c95869178e9e56610856b0538d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDConfigWrapper.html</anchorfile>
      <anchor>aee5a459f05e8aae7986dc355c840c4c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>subpath</name>
      <anchorfile>classDConfigWrapper.html</anchorfile>
      <anchor>a55b7de697e7cb11ad28eff2f2c00e9e8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTK::Quick::DConfigWrapper</name>
    <filename>classDTK_1_1Quick_1_1DConfigWrapper.html</filename>
  </compound>
  <compound kind="class">
    <name>DConfigWrapperMetaObject</name>
    <filename>classDConfigWrapperMetaObject.html</filename>
  </compound>
  <compound kind="class">
    <name>DConnectionSetting</name>
    <filename>classDConnectionSetting.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>updateSetting</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a1b8dcf2095923bb57d421641598f6b19</anchor>
      <arglist>(const SettingDesc &amp;settings) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>deleteSetting</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>af0a4ad635fe99123bce3614f558d92e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; SettingDesc &gt;</type>
      <name>settings</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a1ef72cf9ff2497a8e4d979fba6b287d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>unsavedChanged</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a4da0366be0b9bb59afff36d085455e0f</anchor>
      <arglist>(const bool unsaved)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>filenameChanged</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a9d50bacd924fcb55effb67ebee501137</anchor>
      <arglist>(const QUrl &amp;filename)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>flagsChanged</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a6e9ba4f80357092f6f01af6d585e3c9f</anchor>
      <arglist>(const NMSCFlags flags)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Removed</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>ae38267c312c7b59c3366bb00463e91fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>Updated</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>ab28e881e8450a2fddeb5c16d8bf65dbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unsaved</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>ad83e13473b6a1f7307599f3910b8d859</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>filename</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a8b162e75ef5de306f37f73b669fe3393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMSCFlags</type>
      <name>flags</name>
      <anchorfile>classDConnectionSetting.html</anchorfile>
      <anchor>a58cf834adc9fc6f94b4542acbc09b457</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DConnectionSetting</name>
    <filename>classDtk_1_1NetworkManager_1_1DConnectionSetting.html</filename>
  </compound>
  <compound kind="class">
    <name>DConnectionSettingInterface</name>
    <filename>classDConnectionSettingInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DConnectionSettingPrivate</name>
    <filename>classDConnectionSettingPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DCpuDevice</name>
    <filename>classDCpuDevice.html</filename>
    <base>QObject</base>
    <class kind="struct">DCpuDevice::DCpuStat</class>
    <class kind="struct">DCpuDevice::DCpuUsage</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DCpuDevice</name>
    <filename>classDtk_1_1Device_1_1DCpuDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DCpuDevicePrivate</name>
    <filename>classDCpuDevicePrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>DCpuDevice::DCpuStat</name>
    <filename>structDCpuDevice_1_1DCpuStat.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>user</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a141a197af738b6e253ebeb88b875c059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>nice</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a8307aab8ef470ac928cd9c2a29223da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>sys</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a4a51879171de5e6f6684ac793c37428b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>idle</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>ad6718a8e944c758ca05141e1bb1efd90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>iowait</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a1d3404d2304667565f890ed4d8652a10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>hardirq</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a32fa857b25085c1836c35264bd8f167c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>softirq</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>adee591bca7e7896f06c46b8ecb94115e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>steal</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>af878c07f096793835e1e8877a402aa3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>guest</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a1f4e8a0712370b656404c756c2cfe35a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>guestNice</name>
      <anchorfile>structDCpuDevice_1_1DCpuStat.html</anchorfile>
      <anchor>a1623f57bf991df63bb211712da9ff2e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DCpuDevice::DCpuStat</name>
    <filename>structDtk_1_1Device_1_1DCpuDevice_1_1DCpuStat.html</filename>
  </compound>
  <compound kind="struct">
    <name>DCpuDevice::DCpuUsage</name>
    <filename>structDCpuDevice_1_1DCpuUsage.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>total</name>
      <anchorfile>structDCpuDevice_1_1DCpuUsage.html</anchorfile>
      <anchor>a211826a345a1e3dcbbc8a3c14b0e01ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>idle</name>
      <anchorfile>structDCpuDevice_1_1DCpuUsage.html</anchorfile>
      <anchor>a05f64fc26e3bc3c044feeaf3fa3a2f4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DCpuDevice::DCpuUsage</name>
    <filename>structDtk_1_1Device_1_1DCpuDevice_1_1DCpuUsage.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbEdit</name>
    <filename>classDCrumbEdit.html</filename>
    <base>QTextEdit</base>
    <member kind="slot">
      <type>void</type>
      <name>setCrumbReadOnly</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>abb5e09364481a5d013f1a2894bf52c06</anchor>
      <arglist>(bool crumbReadOnly)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCrumbRadius</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a8b2f9284b01a1d988b23424f737171d5</anchor>
      <arglist>(int crumbRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSplitter</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a189ba294158cf88aec4561fbec5da623</anchor>
      <arglist>(const QString &amp;splitter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ac67b2be4e92d2868a2cfeb7f72eab65b</anchor>
      <arglist>(const DCrumbTextFormat &amp;format, int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insertCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>aea1c8f246ef88edffe0a8c25dd6a216f</anchor>
      <arglist>(const QString &amp;text, int pos=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a239636e15c4f2a3378da107f7b6e3263</anchor>
      <arglist>(const DCrumbTextFormat &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a6faf77b415196cd4d517ef64e2474e93</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containCrumb</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ad026df7e8171bd098b212668715116fd</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>crumbList</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ab719fa214451a1b859bced185e816e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DCrumbTextFormat</type>
      <name>crumbTextFormat</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>af071df548002d18a87322eddb4e04083</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>DCrumbTextFormat</type>
      <name>makeTextFormat</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a3edd04efd81ba446eb3f5f3fe2060177</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DCrumbTextFormat</type>
      <name>makeTextFormat</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a112aaa7ab40a0dbd1d6fe82c0237496e</anchor>
      <arglist>(CrumbType type) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>afef19bb2cdc6c8eabd81521c62d11c32</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>keyPressEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a7dff2fa37abfced0d897595741108865</anchor>
      <arglist>(QKeyEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mouseDoubleClickEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a54f7e5b7642c09f8f055d28db4f45da8</anchor>
      <arglist>(QMouseEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>focusOutEvent</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a1a5224981b44dd524646b75cab5a9634</anchor>
      <arglist>(QFocusEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QMimeData *</type>
      <name>createMimeDataFromSelection</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a3322e2d87a354277ed7382889fe3d3c0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>canInsertFromMimeData</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>a6b99ca3200235bf3a3150f3097a07af6</anchor>
      <arglist>(const QMimeData *source) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>insertFromMimeData</name>
      <anchorfile>classDCrumbEdit.html</anchorfile>
      <anchor>ad3abd6afca3e0b64b6e0eaecb3f15a86</anchor>
      <arglist>(const QMimeData *source) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCrumbEdit</name>
    <filename>classDtk_1_1Widget_1_1DCrumbEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbEditPanelFrame</name>
    <filename>classDCrumbEditPanelFrame.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DCrumbEditPrivate</name>
    <filename>classDCrumbEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbTextFormat</name>
    <filename>classDCrumbTextFormat.html</filename>
    <base>QTextCharFormat</base>
    <member kind="function">
      <type>QColor</type>
      <name>tagColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a90664ba14d4f285a4ca0badf912bf687</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTagColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a0b8b6613abfcc27aa94816412a00ef35</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>text</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a18bfd0ea244dac89fb545e4d6e8aaf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a9f0e3b487f8504353114bc070a98ae87</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>textColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a0b49d54481d562172550256eb51d804c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextColor</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a4942accdadef30f47fb041b2c639cde1</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>background</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a3795773ba946d0c176cc4dede2b4339c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackground</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>a147489b392863a70ec85e7bb1e4f394f</anchor>
      <arglist>(const QBrush &amp;background)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>backgroundRadius</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>ae2849f07410d5f174e5cd377182d7077</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundRadius</name>
      <anchorfile>classDCrumbTextFormat.html</anchorfile>
      <anchor>aff286c0457b65f509914952872649ec6</anchor>
      <arglist>(int radius)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DCrumbTextFormat</name>
    <filename>classDtk_1_1Widget_1_1DCrumbTextFormat.html</filename>
  </compound>
  <compound kind="class">
    <name>DCrumbTextFormatExample</name>
    <filename>classDCrumbTextFormatExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DCustomWidgets</name>
    <filename>classDCustomWidgets.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDBusCaller</name>
    <filename>classDDBusCaller.html</filename>
    <member kind="function">
      <type>QDBusPendingCall</type>
      <name>call</name>
      <anchorfile>classDDBusCaller.html</anchorfile>
      <anchor>a3159935276a522a6c9cfd517ded8a432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DDBusCaller</type>
      <name>arg</name>
      <anchorfile>classDDBusCaller.html</anchorfile>
      <anchor>a9d38c396d8f0f474db50576fbe2c029a</anchor>
      <arglist>(const T &amp;argument)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDBusData</name>
    <filename>classDDBusData.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>service</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a14241e0237123ff2dae79f12ccf01ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>path</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a25f0445c1e414c421af4d1a7de3ffaa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>interface</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a868b8b2a0a1d3a3b627508145ccedd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>queryName</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a9d6e83e1baf0c4fb6d1f3946ec4f1e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QDBusConnection</type>
      <name>connection</name>
      <anchorfile>classDDBusData.html</anchorfile>
      <anchor>a4fa2b2cabaeae6085df2ad2af538be01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusExtendedAbstractInterface</name>
    <filename>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>startServiceProcess</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>abbd26be1895f61addd51a4b85627b36f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>serviceValidChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>aeb968b4c866c73e8a1b71ae48f9e9028</anchor>
      <arglist>(const bool valid) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>serviceStartFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>adf8b5dca5a9c7cf559e40e412603276f</anchor>
      <arglist>(const quint32 ret) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>propertyChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a4ce2dbdb50fd5689f0f195e2d9574189</anchor>
      <arglist>(const QString &amp;propertyName, const QVariant &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>propertyInvalidated</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ac9a9cfddf514bc2a0aaebdbdab443ee1</anchor>
      <arglist>(const QString &amp;propertyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>asyncPropertyFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a88d8e4a41084fe148dd61f2e3996a93a</anchor>
      <arglist>(const QString &amp;propertyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>asyncSetPropertyFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>acb6de641fd1a426feba6487c09a61d7c</anchor>
      <arglist>(const QString &amp;propertyName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>asyncGetAllPropertiesFinished</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ad24b306d51f229617dc048e31cee6f8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ae2b13a31b99a8cff3779f6f2415c86d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>af352fbefe82cf305ae9bae2c9798abac</anchor>
      <arglist>(bool sync)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a88fb75e241405341ddada4033325ca94</anchor>
      <arglist>(bool sync, bool autoStart)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useCache</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>ae7a7efdf492593e2144e0cbc898eaa29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseCache</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a119e4de2da429ff0bcc85ddf10c46c65</anchor>
      <arglist>(bool useCache)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllProperties</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a4cbb53276c0245af653729e7194ba5a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QDBusError</type>
      <name>lastExtendedError</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a9d08f68250cee9d87c08f26edb4b8493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DDBusExtendedAbstractInterface</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>af870dd6ecc88be54c2aecbf7486364bf</anchor>
      <arglist>(const QString &amp;service, const QString &amp;path, const char *interface, const QDBusConnection &amp;connection, QObject *parent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>connectNotify</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a6fb75754cfc917d5cc1d6d9e9b4fdd8e</anchor>
      <arglist>(const QMetaMethod &amp;signal)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>disconnectNotify</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a8a8eceb8b371e9afcf5c5c35f9b4db95</anchor>
      <arglist>(const QMetaMethod &amp;signal)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QVariant</type>
      <name>internalPropGet</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a8dd3468e0914aa60432f32ee7223edb6</anchor>
      <arglist>(const char *propname, void *propertyPtr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>internalPropSet</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a8649689cac0520206aba73f09e65b0d2</anchor>
      <arglist>(const char *propname, const QVariant &amp;value, void *propertyPtr)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a26a9a8971b797769f63238ab79c2b9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>useCache</name>
      <anchorfile>classDtk_1_1Core_1_1DDBusExtendedAbstractInterface.html</anchorfile>
      <anchor>a5df6f802bbdadb55c2cdea8734e79d9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusExtendedPendingCallWatcher</name>
    <filename>classDtk_1_1Core_1_1DDBusExtendedPendingCallWatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>DDBusInterface</name>
    <filename>classDDBusInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusInterface</name>
    <filename>classDtk_1_1Core_1_1DDBusInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DDBusInterfacePrivate</name>
    <filename>classDDBusInterfacePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDBusInterfacePrivate</name>
    <filename>classDtk_1_1Core_1_1DDBusInterfacePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDBusProperty</name>
    <filename>classDDBusProperty.html</filename>
    <member kind="function">
      <type>QDBusPendingCall</type>
      <name>get</name>
      <anchorfile>classDDBusProperty.html</anchorfile>
      <anchor>a181678d0a0b4d9139b0e41766fa58c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QDBusPendingCall</type>
      <name>set</name>
      <anchorfile>classDDBusProperty.html</anchorfile>
      <anchor>a808aaab8842b995d27b8f04b0bbe3ae7</anchor>
      <arglist>(const T &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDBusSender</name>
    <filename>classDDBusSender.html</filename>
    <member kind="function">
      <type>DDBusSender</type>
      <name>service</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a52daaa38e8c5216acee288db472c90ec</anchor>
      <arglist>(const QString &amp;service)</arglist>
    </member>
    <member kind="function">
      <type>DDBusSender</type>
      <name>interface</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a1e85af9e9660215b62a5f9009bae9edd</anchor>
      <arglist>(const QString &amp;interface)</arglist>
    </member>
    <member kind="function">
      <type>DDBusSender</type>
      <name>path</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>ac8bf02e43ce0c3ad90d379a72f0641f5</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>DDBusCaller</type>
      <name>method</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a1c8021fa59f4f37416faf8cf7c07333e</anchor>
      <arglist>(const QString &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>DDBusProperty</type>
      <name>property</name>
      <anchorfile>classDDBusSender.html</anchorfile>
      <anchor>a246184101d07e14d697e7362213f9ffb</anchor>
      <arglist>(const QString &amp;property)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFile</name>
    <filename>classDtk_1_1Core_1_1DDciFile.html</filename>
    <base>Dtk::Core::DObject</base>
    <member kind="enumeration">
      <type></type>
      <name>FileType</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a4ca74a65e62766b5517f2f69a9d96eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aad2a429bd9f3f7cc360c647c73349f53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>lastErrorString</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a25b28569afbef07a7bca746ee26dd335</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeToFile</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>abfea543b6537ed867d22fe4b7c844a04</anchor>
      <arglist>(const QString &amp;fileName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeToDevice</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ab53eebe0e429de9a7c31703bcf197c77</anchor>
      <arglist>(QIODevice *device) const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>toData</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aec9adf992851c7fd12fce29734714354</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>list</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ac1678e4485e62e479ffadd5f39dea647</anchor>
      <arglist>(const QString &amp;dir, bool onlyFileName=false) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>childrenCount</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a70adb3c6baf1de845ddf9d42e9d19dfc</anchor>
      <arglist>(const QString &amp;dir) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aa148decad420f1b8b193c53b1f89d301</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>FileType</type>
      <name>type</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ad80390324f3d872bb6b68b9143c85449</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>dataRef</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a23f6f1ef5719eb4958dcad77014fdf78</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a0023a70e2e2508776111e8a79c68264e</anchor>
      <arglist>(const QString &amp;filePath) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>symlinkTarget</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>af26f5caf4874d554f60ba665aa7154be</anchor>
      <arglist>(const QString &amp;filePath, bool originData=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkdir</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>aa4d976d769cc58983cd71c649b2153a6</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFile</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a42d40c25307a2442f1e3f2500d998266</anchor>
      <arglist>(const QString &amp;filePath, const QByteArray &amp;data, bool override=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>acf030bfaa15e25a023af68b997d7ccb7</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rename</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a0355e819d6be4e3082b2019b0be158d3</anchor>
      <arglist>(const QString &amp;filePath, const QString &amp;newFilePath, bool override=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>link</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>ae27cc589ce2aac5a517c2a43ae7705d8</anchor>
      <arglist>(const QString &amp;source, const QString &amp;to)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static constexpr int</type>
      <name>metadataSizeV1</name>
      <anchorfile>classDtk_1_1Core_1_1DDciFile.html</anchorfile>
      <anchor>a9566824a8626cb7ea73d01e8d3e5756c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFileEngine</name>
    <filename>classDtk_1_1Core_1_1DDciFileEngine.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFileEngineHandler</name>
    <filename>classDtk_1_1Core_1_1DDciFileEngineHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFileEngineIterator</name>
    <filename>classDtk_1_1Core_1_1DDciFileEngineIterator.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDciFilePrivate</name>
    <filename>classDtk_1_1Core_1_1DDciFilePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <class kind="struct">Dtk::Core::DDciFilePrivate::Node</class>
  </compound>
  <compound kind="class">
    <name>DDciIcon</name>
    <filename>classDDciIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DDciIcon</name>
    <filename>classDtk_1_1Gui_1_1DDciIcon.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDciIconEntry</name>
    <filename>structDDciIconEntry.html</filename>
    <class kind="struct">DDciIconEntry::ScalableLayer</class>
  </compound>
  <compound kind="class">
    <name>DDciIconPalette</name>
    <filename>classDDciIconPalette.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DDciIconPalette</name>
    <filename>classDtk_1_1Gui_1_1DDciIconPalette.html</filename>
  </compound>
  <compound kind="class">
    <name>DDciIconPrivate</name>
    <filename>classDDciIconPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DDemoInterface</name>
    <filename>classDDemoInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDesktopEntry</name>
    <filename>classDtk_1_1Core_1_1DDesktopEntry.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>EntryType</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a31cd3020dcd76d7b9e02524bc7930ffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValueType</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>af44aba30f52603b63f99515712047c23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3076653b0fcd6b9e898399e7c2eb2268</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDesktopEntry</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a28c1a750559d76466e059d8f8d598038</anchor>
      <arglist>(const QString &amp;filePath) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3ca962839a986bd492f72ed68ce11695</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>status</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ae56ee84326a5976ea3760a4501382f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a231721fcb8a979aa51dcdd4457a75725</anchor>
      <arglist>(const QString &amp;section=&quot;Desktop Entry&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>allGroups</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ab362e7bb2ce8f0c3119465b991596216</anchor>
      <arglist>(bool sorted=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a9f10cd5616ce0e3fffbc3389c636f13f</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a2adfa7cf0958e789daedfdc4480ee540</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>genericName</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a4d8d1f5103f04f24c977f8c5894c5045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>ddeDisplayName</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a37c81d91c490dca6bcfe91441752fba9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>comment</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a2c22b3382ab71fb741739d9d2303c50f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>rawValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a4fb687dadc5c29494a91aef173d23b9b</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>stringValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>aae3c2f04e0417cd582e291333b4654d0</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>localizedValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>aff8ddbd07cb7322573e31023d85c225a</anchor>
      <arglist>(const QString &amp;key, const QString &amp;localeKey=&quot;default&quot;, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>localizedValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3bcd126c3789ffa6f63d024b1c427f12</anchor>
      <arglist>(const QString &amp;key, const QLocale &amp;locale, const QString &amp;section=&quot;Desktop Entry&quot;, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>stringListValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ab0e15bc2e1ded51f08d8cb8f18e5e65b</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRawValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a9c4e50012b0535214312ae101e1afb9d</anchor>
      <arglist>(const QString &amp;value, const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setStringValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>aaa2581ab46bd2c3dbe107203496c4923</anchor>
      <arglist>(const QString &amp;value, const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLocalizedValue</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a7a8a1139aebf60f2f80aef58264e9d60</anchor>
      <arglist>(const QString &amp;value, const QString &amp;localeKey, const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeEntry</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a0cfb5118ebff6521f7ac785fbf9f2afa</anchor>
      <arglist>(const QString &amp;key, const QString &amp;section=&quot;Desktop Entry&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>escape</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>afaf0afc69a747d6788a71263fa875b9f</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>escapeExec</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a6f3876ae89eb8ebd45aec8c459eca963</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>unescape</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a3a905bd2af6d3ead6a38e5081f675dd2</anchor>
      <arglist>(QString &amp;str, bool unescapeSemicolons=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString &amp;</type>
      <name>unescapeExec</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>ad529376566e4500c71ee56184987062d</anchor>
      <arglist>(QString &amp;str)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setStatus</name>
      <anchorfile>classDtk_1_1Core_1_1DDesktopEntry.html</anchorfile>
      <anchor>a190a010877efc20d4cc43d019b444c0f</anchor>
      <arglist>(const Status &amp;status)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDesktopEntryPrivate</name>
    <filename>classDtk_1_1Core_1_1DDesktopEntryPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDesktopEntrySection</name>
    <filename>classDtk_1_1Core_1_1DDesktopEntrySection.html</filename>
  </compound>
  <compound kind="class">
    <name>DDesktopServices</name>
    <filename>classDDesktopServices.html</filename>
  </compound>
  <compound kind="class">
    <name>DDevice</name>
    <filename>classDDevice.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>disconnect</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>aca3aaced4ca48b2f58c5f763eb70246a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceStateChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a399f11785954fb8a50368bf1e007b1de</anchor>
      <arglist>(const NMDeviceState newSatate, const NMDeviceState oldState, const NMDeviceStateReason reason)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>availableConnectionsChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>af4aa73e65d9c2a3a77e3cc0557ab90ad</anchor>
      <arglist>(const QList&lt; quint64 &gt; &amp;conns)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autoconnectChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a66aef8a232445ff0f5fac6b9ed876abb</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>managedChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a0da29a78f4038330489a195ac8f74884</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeConnectionChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a4272c21b8dc32e55c8500c7f20a2074f</anchor>
      <arglist>(const quint64 &amp;conn)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DHCP4ConfigChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>aa3b2aac85c1c1d224bde395dee299a76</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DHCP6ConfigChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a5a9d8f8a62c3ad8c7a07b4291663adb0</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>IPv4ConfigChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>aca7a9e069b79ddc5e017b2c1e22e5c58</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>IPv6ConfigChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a531da35913c08f721e93dae24b94b805</anchor>
      <arglist>(const quint64 &amp;config)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>driverChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a7fd93c9ab9ce883238c5f7afbba2c03d</anchor>
      <arglist>(const QByteArray &amp;driver)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>interfaceChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a74d5bb5b619d2554ed7e1f31ee58638c</anchor>
      <arglist>(const QByteArray &amp;ifc)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>udiChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a293f578e1a23fa813b6198c614ea372e</anchor>
      <arglist>(const QByteArray &amp;udi)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceTypeChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>ae50c54ad9cc147b07f369217be149aca</anchor>
      <arglist>(const NMDeviceType type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>interfaceFlagsChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a943a76f54d0d0da96d77a8062246223f</anchor>
      <arglist>(const DeviceInterfaceFlags flags)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>refreshRateMsChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a61360b25dafa511db34fb386593522ef</anchor>
      <arglist>(const quint32 rate)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rxBytesChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>ab727cb844086b3f4f2c10e72fc77237f</anchor>
      <arglist>(const quint32 bytes)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>txBytesChanged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a9831131b77054285c8ab5e529558c707</anchor>
      <arglist>(const quint32 bytes)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; quint64 &gt;</type>
      <name>availableConnections</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>aa0ee88448fe6375f64e86e89746d8535</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoconnect</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a624ff492432e466a13a7f902a778cbad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoconnect</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a3ef113e68fddd2faaa2ecb24e1cc6e82</anchor>
      <arglist>(const bool autoconnect) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>managed</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a6a9d56be31b8838582c4c704610968e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManaged</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>af5a74c0419d30afdfdc80eaedb81d098</anchor>
      <arglist>(const bool managed) const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>activeConnection</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a99d8652593fa13dbfdd8d355f5b557e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>DHCP4Config</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a8fb61b7cb6a7bd2bafe6c36819578c3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>DHCP6Config</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a8a058db6d22d58f8894fa50828a49d7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>IPv4Config</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a75ed8680171de016cce3871722dc6c21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>IPv6Config</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a01a08da220a37d2d5368835505cc4195</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>driver</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a3644acd33205f4588bf63906abb58f27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>interface</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>ab8cf116cd0c6c4f4b46ff334d1380705</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>udi</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a5a215de2efce6c63574a74afcd666d13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMDeviceType</type>
      <name>deviceType</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a2c0d6290460534cfdc5a2f56b2f1a88d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceInterfaceFlags</type>
      <name>interfaceFlags</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a2b5dab41c58db9f07634fb08d8e66b28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMDeviceState</type>
      <name>deviceState</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>ab84ab7665b129537fac3ece1328863d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>refreshRateMs</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a295d2bc69213cb253b845fd15caad99d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefreshRateMs</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>a4957c37380c91d0f3a275ebf4d877171</anchor>
      <arglist>(const quint32 newRate) const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>rxBytes</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>abc0eeb3d4094c9c66fa5abd6b5779d46</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>txBytes</name>
      <anchorfile>classDDevice.html</anchorfile>
      <anchor>ab2f15deedba7bb44c2a12f0e99751bf2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DDevice</name>
    <filename>classDtk_1_1NetworkManager_1_1DDevice.html</filename>
  </compound>
  <compound kind="struct">
    <name>DlsDevice::DDeviceInfo</name>
    <filename>structDlsDevice_1_1DDeviceInfo.html</filename>
    <member kind="variable">
      <type>QMap&lt; QString, QString &gt;</type>
      <name>deviceInfoLstMap</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>a47230c2ed1b0a89a9e749d19be3a7a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>vendorName</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>a8f74c9e172f5f76ffb4ced5b82fe7198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>productName</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>a5239023d814be279945e9bd774eaa902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>modalias</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>af0db4abe8c1d71066e8bc4405b1067e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>vendorID</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>aa0e332ea5b9837547cf4d460a167b04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>productID</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>ad587fbcc634c10e82d53b69b7630c4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>sysFsPath</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>addc81f712c2760b598367afa333957a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>baseClassName</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>afc550fa4e413a350509375688ed364d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>subClassName</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>a7b249a265235b85fcc0c8256a22f0883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>deviceBaseAttrisLst</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>a5ff886cee3b513f6e5daa3854e9a8efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>deviceOtherAttrisLst</name>
      <anchorfile>structDlsDevice_1_1DDeviceInfo.html</anchorfile>
      <anchor>a618383d1b4ec6475a725269f42a15bed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DlsDevice::DDeviceInfo</name>
    <filename>structDtk_1_1Device_1_1DlsDevice_1_1DDeviceInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DDeviceInterface</name>
    <filename>classDDeviceInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDevicePrivate</name>
    <filename>classDDevicePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDHCP4Config</name>
    <filename>classDDHCP4Config.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>optionsChanged</name>
      <anchorfile>classDDHCP4Config.html</anchorfile>
      <anchor>a0b5478fd5c4824ff65c88a29211ae56d</anchor>
      <arglist>(const Config &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>Config</type>
      <name>options</name>
      <anchorfile>classDDHCP4Config.html</anchorfile>
      <anchor>a4f5aa10f337880e34422838db745289f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DDHCP4Config</name>
    <filename>classDtk_1_1NetworkManager_1_1DDHCP4Config.html</filename>
  </compound>
  <compound kind="class">
    <name>DDHCP4ConfigInterface</name>
    <filename>classDDHCP4ConfigInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDHCP4ConfigPrivate</name>
    <filename>classDDHCP4ConfigPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDHCP6Config</name>
    <filename>classDDHCP6Config.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>optionsChanged</name>
      <anchorfile>classDDHCP6Config.html</anchorfile>
      <anchor>a3bb78213e449b27948c567379500931a</anchor>
      <arglist>(const Config &amp;option)</arglist>
    </member>
    <member kind="function">
      <type>Config</type>
      <name>options</name>
      <anchorfile>classDDHCP6Config.html</anchorfile>
      <anchor>ada74a4f2d90e46897d6e50ea22b5cc6f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DDHCP6Config</name>
    <filename>classDtk_1_1NetworkManager_1_1DDHCP6Config.html</filename>
  </compound>
  <compound kind="class">
    <name>DDHCP6ConfigInterface</name>
    <filename>classDDHCP6ConfigInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDHCP6ConfigPrivate</name>
    <filename>classDDHCP6ConfigPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDialog</name>
    <filename>classDDialog.html</filename>
    <base>DAbstractDialog</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a6adba921a288613b241dcb1d230b913d</anchor>
      <arglist>(QShowEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>hideEvent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>a613af173ed5c279067d76792e3b646e9</anchor>
      <arglist>(QHideEvent *event) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeEvent</name>
      <anchorfile>classDDialog.html</anchorfile>
      <anchor>af44a41730e13d723833279f3ac84b28b</anchor>
      <arglist>(QResizeEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDialogCloseButton</name>
    <filename>classDDialogCloseButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DDialogCloseButton</name>
      <anchorfile>classDDialogCloseButton.html</anchorfile>
      <anchor>a27d747c4862c4bdb5be96a412f5d39e8</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDialogExample</name>
    <filename>classDDialogExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DDialogPrivate</name>
    <filename>classDDialogPrivate.html</filename>
    <base>DAbstractDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>DDiskDevice</name>
    <filename>classDDiskDevice.html</filename>
    <base>QObject</base>
    <class kind="struct">DDiskDevice::DDiskIoStat</class>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a68373f2688814c5e22fcf07e4802bf6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a7d58ea2bee431561baf9ba2ecc988ffd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>acb13af7d2b34e2091c6fddbac532209f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>mediaType</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>abbf6c6d4a10885eed0fe2d6d8a1e46f4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>size</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>abd328a1ec65945383dccb934d699a0a3</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>interface</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a64e6f1a7e00eb14728a3c4c25a8f84b7</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serialNumber</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a9b85affad2de3164b31d8787261b6d3f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>deviceFile</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a695c68e2a7b910a0dd61affc8c45ac94</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>rotationRate</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a6e4fe4e70a40c8f0c35402b90cd7fffa</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>firmwareVersion</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a3185981a09596943f7b13732a024fb78</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>sectorSize</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>ae7ddef2c46932b2f2f4f7a8b11a21e79</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>temperature</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>a2e3bb450f785057c5f23c6340c7d04f5</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>DDiskIoStat</type>
      <name>diskIoStat</name>
      <anchorfile>classDDiskDevice.html</anchorfile>
      <anchor>ae65ed502438584c9389ada87083ea3f1</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DDiskDevice</name>
    <filename>classDtk_1_1Device_1_1DDiskDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DDiskDevicePrivate</name>
    <filename>classDDiskDevicePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DDiskDrive</name>
    <filename>classDDiskDrive.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>eject</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>afdf3b551aaa762a9e3ba0912664e511a</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>powerOff</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a2d85a00bafac81fffcf22b1c7db18f72</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setConfiguration</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a4503e9cd1c978d95d767aa0e006be5d0</anchor>
      <arglist>(const QVariantMap &amp;value, const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DDiskDrive</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>ad1400e56861e91f0bedb0811aa4681a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>path</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a24454f86f116ad37d52f6b503d12b2ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPowerOff</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>afc7891b73ea581b16c2674146f1c7a5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariantMap</type>
      <name>configuration</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a94bb4263226144eabf30bdb25253c1ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>connectionBus</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a7c3801159977dd09e75ab9793abd2ede</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ejectable</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a9b5b8b77df3ddb4d2a8a4818e1da587e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>id</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a64456b4aa9d6659c6f4542007ac5527a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>media</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a5af49af54ea63813fad97cb49ae049a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mediaAvailable</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a533a316287210d0311fe16ea10a3f6f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mediaChangeDetected</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a47d3b473cd1f83c2073d39044e08c803</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>mediaCompatibility</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a910817828a5f86511985c26185ca011a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mediaRemovable</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a0d88ea830c21b782dca3db9413f067e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a896b6e1546bfa69924e567dfc8b581c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>optical</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>ace47eb9ba5c1ab08421e503c1aee76c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>opticalBlank</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a194e9da6fcaffb1f34fa8680801f421f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>opticalNumAudioTracks</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>adf1af0d83f0f2ea1061a47c4a3e5864b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>opticalNumDataTracks</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>aea553e8fc213575d3728d01dd16e0fb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>opticalNumSessions</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>aed2f022dacfe1485abeee79660c790ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint</type>
      <name>opticalNumTracks</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a0709a6c07a77282e9031d23ab917e0c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removable</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>afe6afa05f868eb2ebcdf1bbd7873333e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>revision</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a3fd4388237548605bb9b4da15341bf6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rotationRate</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>ab15eaf302fce94f8e70a98dbbe2c1e16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>seat</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a40a85d6190c6e04d5e9b5f245eda85cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serial</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a29a5a3732a632225e35516b4f8171cd4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>siblingId</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a8c74426d0eb3f33c7b4506a20491362b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>size</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>af9f2fd9f6a1b4bb736b01ffbdee15bc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>sortKey</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a4ea75f7418619b0776002bdf7b44abae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>timeDetected</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a0cebb5d0b2e76c9d28f27192bdedf65e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>timeMediaDetected</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a99aaebfd48349e528296477c34c85c45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>a8f8fe27479267fed8f2c956189d6f191</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>WWN</name>
      <anchorfile>classDDiskDrive.html</anchorfile>
      <anchor>ae0d369fc01dcbd9f0563c96d467205d5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DDiskDrive</name>
    <filename>classDtk_1_1Mount_1_1DDiskDrive.html</filename>
  </compound>
  <compound kind="class">
    <name>DDiskDrivePrivate</name>
    <filename>classDDiskDrivePrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>DDiskDevice::DDiskIoStat</name>
    <filename>structDDiskDevice_1_1DDiskIoStat.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>readsCompletedSuccessfully</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a3080b278fc8a16bcd08c0015f5ba2999</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>readsMerged</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>acebff5cfda321e9f947f562b3a9a2fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>readSectors</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>aaea20f5f829f48bbf27756de645cad38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>spentReadingTime</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>af255a31e866ec77e538df58f498a87e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>writesCompleted</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a8a8948d2f919d73afac4ec5911d2e5e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>writesMerged</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>aa355ec8350d0016c939225be72a42de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>writtenSectors</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>acdc030469138dbd4f928c393e477c052</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>spentWritingTime</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a5d07cd235e76c44121ae95a8740b1e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>currentProgressIOs</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>aff05f717518c6b34a95dbbbb7fe6be82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>spentDoingIOsTime</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a1cfcfe90deffc99f481c30f1865ba239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>spentDoingIOsWeightedTime</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a31057f0d030d5bea4bbef53afbcfb4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>discardsCompletedSuccessfully</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>ad6d8a98972200271b7db8a58cb46a3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>discardsMerged</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>aaf11a648316a9e1611b4c33effd03d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>discardedSectors</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a935c36e1ac30c9c6dc92e343d73dad86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>spentDiscardingTime</name>
      <anchorfile>structDDiskDevice_1_1DDiskIoStat.html</anchorfile>
      <anchor>a4c3f71e976d554d66aa700de80bf4ead</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DDiskDevice::DDiskIoStat</name>
    <filename>structDtk_1_1Device_1_1DDiskDevice_1_1DDiskIoStat.html</filename>
  </compound>
  <compound kind="class">
    <name>DDiskJob</name>
    <filename>classDDiskJob.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a7ff5a5e3dc1756937f5a0c452343cb0f</anchor>
      <arglist>(const QVariantMap &amp;options)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>completed</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>ac14e1a92b2a995377049f7127b8ddd7c</anchor>
      <arglist>(bool success, const QString &amp;message)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>progressChanged</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a95bdef29f2f1fd57d0053498ddf7b09c</anchor>
      <arglist>(double progress)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rateChanged</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>abe270511c9469adccca6082e326f03e7</anchor>
      <arglist>(quint64 rate)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>expectedEndTimeChanged</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>ae7d2ba28b4a5391dfc9b070daa2088f6</anchor>
      <arglist>(quint64 expectedEndTime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DDiskJob</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>aab15d290a9925b2ee74bdb5a84a9658b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>path</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>adb778ec8110d0df9c09f0fd2682d338d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>objects</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a356ad6172109f224c08398db462ffabd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cancelable</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a6bb57a4b57dd6881d29c9e875ecd5d7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>progressValid</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a38ac38eb4a0926f4e358189e59688f3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>progress</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a91fdd141ff680b144943e278b767fac6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>operation</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>add02c6605f3e5e14717bce93eb131d7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>startedByUid</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a30816846291d1cf0ef9ac2d74d75decc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>bytes</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>aab4df7e648a40fbcf84cafceafe76019</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>expectedEndTime</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a76a4674e62e03327022b1a20be6ec02c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>rate</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>a0f3ddf4d80b70cc2c8f4b85d2c3f5abc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>startTime</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>aa543e7e07a7fd2e6b54fc3476de18802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DDiskJob</name>
      <anchorfile>classDDiskJob.html</anchorfile>
      <anchor>ae3bd3b739be7d6b4fa073bbfb773c5dd</anchor>
      <arglist>(const QString &amp;path, QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DDiskJob</name>
    <filename>classDtk_1_1Mount_1_1DDiskJob.html</filename>
  </compound>
  <compound kind="class">
    <name>DDiskJobPrivate</name>
    <filename>classDDiskJobPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DDiskSizeFormatter</name>
    <filename>classDtk_1_1Core_1_1DDiskSizeFormatter.html</filename>
    <base>Dtk::Core::DAbstractUnitFormatter</base>
    <member kind="enumeration">
      <type></type>
      <name>DiskUnits</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>a73488f9c69a8fb812006eb1e74df9ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>unitStr</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>ae3b3ddd6a8132b2c964b93c3d0844233</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
    <member kind="function">
      <type>DDiskSizeFormatter</type>
      <name>rate</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>aa2f7f223ae4afe3419c31c385f06dbc2</anchor>
      <arglist>(int rate)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMin</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>acd56fd844f0e86046023dcea48493ded</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMax</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>a18f41a2758f293d25799568ec7c1596f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>unitConvertRate</name>
      <anchorfile>classDtk_1_1Core_1_1DDiskSizeFormatter.html</anchorfile>
      <anchor>a3a58aaba8417abe47af53501c8978d04</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DDndClientSignalRelay</name>
    <filename>classDDndClientSignalRelay.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDndSourceInterface</name>
    <filename>classDDndSourceInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DDoubleSpinBox</name>
    <filename>classDDoubleSpinBox.html</filename>
    <base>QDoubleSpinBox</base>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDDoubleSpinBox.html</anchorfile>
      <anchor>abb13d12bd88c79301ac54b36d80a9ad7</anchor>
      <arglist>(const QString &amp;text, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDDoubleSpinBox.html</anchorfile>
      <anchor>a3ecbe2c05bfd5aa9b77c8e12e06792da</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDoubleSpinBox</name>
    <filename>classDtk_1_1Widget_1_1DDoubleSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DDoubleSpinBoxPrivate</name>
    <filename>classDDoubleSpinBoxPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawer</name>
    <filename>classDDrawer.html</filename>
    <base>DFrame</base>
    <member kind="signal">
      <type>void</type>
      <name>expandChange</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a1f4eaf89d2ef99174cd6db7337d5b1b9</anchor>
      <arglist>(bool e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DDrawer</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a57394661a72ee01ae364a5f70a27f2b6</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeader</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a291d9fa0d23e1df4b871ba54f7199257</anchor>
      <arglist>(QWidget *header)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>acdbd8c1717059cbf13a98812a14eee96</anchor>
      <arglist>(QWidget *content, Qt::Alignment alignment=Qt::AlignHCenter)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>getContent</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>aba71b84a294be08e7df70a1f4bc107df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeaderHeight</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>ac59ce154b686cbd1dc4770f28879a987</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setExpand</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a5cc8eebf60a9db68bf6abf2768c60d3e</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>expand</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>ac4fbbe70fe34a0293fd7872afb22e31c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimationDuration</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a3dc608cf5cf193fb1bbac17fcb73f8ae</anchor>
      <arglist>(int duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnimationEasingCurve</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a1604e41e52637258c2575639cb2e259a</anchor>
      <arglist>(QEasingCurve curve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeparatorVisible</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>aa78d0e3dee52d7ef49cab585984aa2d1</anchor>
      <arglist>(bool arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpandedSeparatorVisible</name>
      <anchorfile>classDDrawer.html</anchorfile>
      <anchor>a1d762b97cc953d8c1d7f37b6b6391ebd</anchor>
      <arglist>(bool arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDrawer</name>
    <filename>classDtk_1_1Widget_1_1DDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawerGroup</name>
    <filename>classDDrawerGroup.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DDrawerGroup</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a531bfaaabe3389eb25ba4d61fde6f87d</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDrawer * &gt;</type>
      <name>expands</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>ac6af5440d114c07424604eabf171da73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DDrawer *</type>
      <name>checkedExpand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a4eac3fb9d931ed84ebed74441946c182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DDrawer *</type>
      <name>expand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a730dd70ea322094785f65f7666c05511</anchor>
      <arglist>(int id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExpand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>ae6a54e2a1ec3ced6b9b0f7d8756781ea</anchor>
      <arglist>(DDrawer *expand, int id=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a1455345fb1e65f115ef6e8d530c0518a</anchor>
      <arglist>(DDrawer *expand, int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExpand</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>adad2aa750dee08a07837048772f10f73</anchor>
      <arglist>(DDrawer *expand)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkedId</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>ab1e0bf4b2ab2c0bdf36d49b51ab5c416</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>id</name>
      <anchorfile>classDDrawerGroup.html</anchorfile>
      <anchor>a1f6a9a3ed0330ae41c813bede3aacfa5</anchor>
      <arglist>(DDrawer *expand) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DDrawerGroup</name>
    <filename>classDtk_1_1Widget_1_1DDrawerGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawerGroupPrivate</name>
    <filename>classDDrawerGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DDrawerPrivate</name>
    <filename>classDDrawerPrivate.html</filename>
    <base>DFramePrivate</base>
  </compound>
  <compound kind="class">
    <name>DeleteJob</name>
    <filename>classDeleteJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>DEnginePlayer</name>
    <filename>classDEnginePlayer.html</filename>
    <base>DPlatformMediaPlayer</base>
    <member kind="slot">
      <type>void</type>
      <name>positionProxyChanged</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a19067e5336a8ba90a01bb151cecfdce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual qint64</type>
      <name>duration</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a18874a111cb07c6cedd7142af6c30eb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual qint64</type>
      <name>position</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>af8138c66d3498f31a6256d797aa56829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a7818b775ed394d131ac0da46adfacd77</anchor>
      <arglist>(qint64 position)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>bufferProgress</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>acbc588d8e9e4b6ca669652862ad74aaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QMediaTimeRange</type>
      <name>availablePlaybackRanges</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a82f9e47829262a4a41263591121f92d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual qreal</type>
      <name>playbackRate</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a05e289b2fdbf110d169ff5da34f4b4c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPlaybackRate</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a38cb40a45db925e25d4463f0195f9e61</anchor>
      <arglist>(qreal rate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QUrl</type>
      <name>media</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>abff7b3105be22e0c4cb127ea983f3550</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const QIODevice *</type>
      <name>mediaStream</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>adef6b6903fabb8a372dd7ab89a64bb0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMedia</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a26a21d7f4e0394009914c4d8025b5f57</anchor>
      <arglist>(const QUrl &amp;media, QIODevice *stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVolume</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>ac3502a9d016eaa47e0419d1f1f4bdcb9</anchor>
      <arglist>(float volume)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMuted</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a43a0480c439983793aadcfdf4dcdbac7</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>play</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>af0ddb0a227da66ddbfc8a37bc940cea2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pause</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a2fd760c181c133c618dcf9a7a1ba9922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a84a9f22d1d566f1909f2c551826bc873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVideoSink</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a30013677e84189c9204d4665b9c6dd3e</anchor>
      <arglist>(DVideoSink *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPlayer</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a3c4d7a2d18cda042a28219a55f86b834</anchor>
      <arglist>(QWidget *Player)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeSoundMode</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a4654fe7616b893f8074795505cd4db0c</anchor>
      <arglist>(const DPlayerBackend::SoundMode &amp;sm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a7bb151698683bf7d1c017e83c2282f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>previousFrame</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a665c315b9aba52b9896353a57f899beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDecodeModel</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a4996fbfc544de15d1bdf7476e424b95c</anchor>
      <arglist>(const DPlayerBackend::hwaccelMode &amp;hwaccelMode)</arglist>
    </member>
    <member kind="function">
      <type>QImage</type>
      <name>takeScreenshot</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a3761c9b1e83cb927e6374fb0521d2c04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>burstScreenshot</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>ad285559a8b4fe06a9547b7446afa7415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoRotation</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a27ff7fdb81801b8ec81cb287d84d2058</anchor>
      <arglist>(int degree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeVolume</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a09575f438159fdc20a075142e501fb7f</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>ad447bbc3bbe345b5166411a9e65fbfa6</anchor>
      <arglist>(bool bMute)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seekAbsolute</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>afd6dcb771d1bad8b2ac942a4bca160f3</anchor>
      <arglist>(int pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayMode</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a19c714a66c4b27292b42905c01d35e93</anchor>
      <arglist>(const PlayMode &amp;pm)</arglist>
    </member>
    <member kind="function">
      <type>PlayMode</type>
      <name>playMode</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>af01846fb8c410a4dc9ab0f19cdb14a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playByName</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>acf6f829f0d2926df33c52db6ebf897f5</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadSubtitle</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a5943075703b1b23614846cf187bcc652</anchor>
      <arglist>(const QFileInfo &amp;fi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPlayFile</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a178394fe30df8a9c22b4c8cc6f42c092</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>const struct MovieInfo &amp;</type>
      <name>movieInfo</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a1df7e537cc101b197f93d2a10218be16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DAudioOutput *</type>
      <name>audioOut</name>
      <anchorfile>classDEnginePlayer.html</anchorfile>
      <anchor>a00933028caba73df78f92440e7e14081</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DEnginePlayer</name>
    <filename>classDtk_1_1Multimedia_1_1DEnginePlayer.html</filename>
  </compound>
  <compound kind="class">
    <name>DEnginePlayerPrivate</name>
    <filename>classDEnginePlayerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DEnhancedWidget</name>
    <filename>classDEnhancedWidget.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setTarget</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>affb84ed60b1093d823f42cd1482772c3</anchor>
      <arglist>(QWidget *target)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a955bdd7e9c0acf8e9010f7c0656ab59f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>xChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>acd4b367792ffe105198adc022d51a4bd</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>yChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a0e4bb4254be00e91c1914393fda639bf</anchor>
      <arglist>(int y)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>positionChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a79444d04fa2c3b77ee4076deb9aae074</anchor>
      <arglist>(const QPoint &amp;point)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>widthChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>aa74dbb2721f6be3fa65db7b445a05b32</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>heightChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a43c1a01bf8445c06fc5dbfd746da6333</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>acd05371cca614e19b9b1bbe6b6d5a865</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>targetChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a3a510e9bbf1f8ca4ab6ccd67dfc79350</anchor>
      <arglist>(QWidget *target)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enabledChanged</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>ae4a520770e62e97d3cd5dd4a95429b07</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>showed</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>aa05a770aa0bac2d77ce102b5c56031a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEnhancedWidget</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a779b5a22d4ce85f5da827558ab804862</anchor>
      <arglist>(QWidget *target, QObject *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>target</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a4e81818b58ad39482046c0993677c2f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDEnhancedWidget.html</anchorfile>
      <anchor>a72031aa0ac338d7f844f174ce28392c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DEnhancedWidget</name>
    <filename>classDtk_1_1Widget_1_1DEnhancedWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DEnhancedWidgetPrivate</name>
    <filename>classDEnhancedWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DEnumerator</name>
    <filename>classDEnumerator.html</filename>
  </compound>
  <compound kind="class">
    <name>DEnumeratorPrivate</name>
    <filename>classDEnumeratorPrivate.html</filename>
    <base>QObject</base>
    <class kind="struct">DEnumeratorPrivate::NormalFutureAsyncOp</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DError</name>
    <filename>classDtk_1_1Core_1_1DError.html</filename>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a7b9e6f13971cbc57df05e10e0b7f0ebb</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>ac49cead00185d1a9898b83d6c7e3e0fa</anchor>
      <arglist>(const DError &amp;e) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a0d198be34c0adfb4c0227004a99e215c</anchor>
      <arglist>(DError &amp;&amp;e) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>aad85b72fc9cbb4b5fe2108a176637863</anchor>
      <arglist>(qint64 code, const QString &amp;msg) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a0837e30f37d34d465ed70281976d3343</anchor>
      <arglist>(qint64 code, QString &amp;&amp;msg) noexcept</arglist>
    </member>
    <member kind="function">
      <type>DError &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>ac3f718e16429088ab9b1f6373c058bf8</anchor>
      <arglist>(const DError &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>DError &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a656aa73e3aaf0ec6143328185f3899a8</anchor>
      <arglist>(DError &amp;&amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DError</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>aaaae7d50f254ec270a77ab48b479d9c4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>getErrorCode</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>af42e66aaf3583568285a21c9866f37bd</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorCode</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a3f95c86d00455fe62cc337e4edd594c5</anchor>
      <arglist>(qint64 code) &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>const QString &amp;</type>
      <name>getErrorMessage</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>af9375ee7267946a8363eff205e61dca6</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getErrorMessage</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a1ffab4864655dbb940737a88c7ffeee9</anchor>
      <arglist>() const &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorMessage</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a0607320bf3cfcb9f949ff9e6412cf2ae</anchor>
      <arglist>(const QString &amp;msg) &amp;</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a642b8113dedd3c490e235440e14f804a</anchor>
      <arglist>(const DError &amp;x, const DError &amp;y) noexcept</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>afe3234e791d043daa0e5377257d14066</anchor>
      <arglist>(const DError &amp;x, const DError &amp;y) noexcept</arglist>
    </member>
    <member kind="friend">
      <type>friend QDebug</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classDtk_1_1Core_1_1DError.html</anchorfile>
      <anchor>a665cfb436d21a3342a6589fc9dd753cd</anchor>
      <arglist>(QDebug debug, const DError &amp;e)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Detect_t</name>
    <filename>structDetect__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>DetectObject</name>
    <filename>structDetectObject.html</filename>
  </compound>
  <compound kind="class">
    <name>Detector</name>
    <filename>classDetector.html</filename>
    <base>nsUniversalDetector</base>
  </compound>
  <compound kind="struct">
    <name>DeviceData</name>
    <filename>structDeviceData.html</filename>
  </compound>
  <compound kind="struct">
    <name>DeviceInfo</name>
    <filename>structDeviceInfo.html</filename>
    <member kind="variable">
      <type>quint32</type>
      <name>id</name>
      <anchorfile>structDeviceInfo.html</anchorfile>
      <anchor>a1475ff06ed5cfc4506a2cf6d196953c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>structDeviceInfo.html</anchorfile>
      <anchor>a50d8e788fefe0cd02ba13baaea1d6c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DeviceType</type>
      <name>type</name>
      <anchorfile>structDeviceInfo.html</anchorfile>
      <anchor>a61178e4a39b8294283bccb055ee4722b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DeviceInfo</name>
    <filename>structDtk_1_1Device_1_1DeviceInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DExpandGroup</name>
    <filename>classDtk_1_1Widget_1_1DExpandGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DExpected</name>
    <filename>classDtk_1_1Core_1_1DExpected.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a69ec10f2c36b000be8849029f3392599</anchor>
      <arglist>() noexcept(std::is_nothrow_default_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a0fdd0c71df462c57587a0a309594654f</anchor>
      <arglist>(const DExpected &amp;_x) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value and std::is_nothrow_copy_constructible&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a3885d717f1e5f0b3396f3f2197ab6fe8</anchor>
      <arglist>(DExpected &amp;&amp;_x) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value and std::is_nothrow_move_constructible&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ac2b9605fb374e4ffe650af388ec9b638</anchor>
      <arglist>(const DExpected&lt; U, G &gt; &amp;_x) noexcept(std::is_nothrow_constructible&lt; T, const U &amp; &gt;::value and std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ac2b9605fb374e4ffe650af388ec9b638</anchor>
      <arglist>(const DExpected&lt; U, G &gt; &amp;_x) noexcept(std::is_nothrow_constructible&lt; T, const U &amp; &gt;::value and std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a92f81ba7b40bd250b8d0f4ad5ea12d9d</anchor>
      <arglist>(DExpected&lt; U, G &gt; &amp;&amp;_x) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value and std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a92f81ba7b40bd250b8d0f4ad5ea12d9d</anchor>
      <arglist>(DExpected&lt; U, G &gt; &amp;&amp;_x) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value and std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a82d3986b525839bc655acfdcdf04e767</anchor>
      <arglist>(U &amp;&amp;_v) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a82d3986b525839bc655acfdcdf04e767</anchor>
      <arglist>(U &amp;&amp;_v) noexcept(std::is_nothrow_constructible&lt; T, U &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aab0aaa6e88fd6a4b88db2bb8fd67d278</anchor>
      <arglist>(const DUnexpected&lt; G &gt; &amp;_u) noexcept(std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aab0aaa6e88fd6a4b88db2bb8fd67d278</anchor>
      <arglist>(const DUnexpected&lt; G &gt; &amp;_u) noexcept(std::is_nothrow_constructible&lt; E, const G &amp; &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1f4ff83978dec9dbeac6e4419d56d093</anchor>
      <arglist>(DUnexpected&lt; G &gt; &amp;&amp;_u) noexcept(std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1f4ff83978dec9dbeac6e4419d56d093</anchor>
      <arglist>(DUnexpected&lt; G &gt; &amp;&amp;_u) noexcept(std::is_nothrow_constructible&lt; E, G &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a057ad3f9d2270aa8ad666a5d8c3e79b6</anchor>
      <arglist>(emplace_tag, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; T, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a14155e23e9d7851adf158b5822bc4701</anchor>
      <arglist>(emplace_tag, std::initializer_list&lt; U &gt; _li, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; T, std::initializer_list&lt; U &gt; &amp;, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a7db3e241c34d47c0757c642b5723c63d</anchor>
      <arglist>(dunexpected_tag, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a3bd18418ea81915849b9ee697d06df4d</anchor>
      <arglist>(dunexpected_tag, std::initializer_list&lt; U &gt; _li, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, std::initializer_list&lt; U &gt; &amp;, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DExpected</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a868eab317dd4157380fbcbe680920590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aea8d3fb522c8fa0afe0d9fe3b63a4072</anchor>
      <arglist>(const DExpected &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a8871a0aefb27d498de245f7b0b557b62</anchor>
      <arglist>(const DExpected &amp;_x) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value and std::is_nothrow_copy_constructible&lt; E &gt;::value and std::is_nothrow_copy_assignable&lt; T &gt;::value and std::is_nothrow_copy_assignable&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ae78e9a5d4c6fd62a32f5ddaec4681930</anchor>
      <arglist>(DExpected &amp;&amp;_x) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value and std::is_nothrow_move_constructible&lt; E &gt;::value and std::is_nothrow_move_assignable&lt; T &gt;::value and std::is_nothrow_move_assignable&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a686c33e3f3b2328d64907c63440b157d</anchor>
      <arglist>(U &amp;&amp;_v)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a759bd8ec2e916cf3ef532fbc35685f00</anchor>
      <arglist>(const DUnexpected&lt; G &gt; &amp;_e)</arglist>
    </member>
    <member kind="function">
      <type>DExpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aef86cced3146c6b22bcd92385d9db4d6</anchor>
      <arglist>(DUnexpected&lt; G &gt; &amp;&amp;_e)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aa27cccc579e09335ad2ae63d56bcde05</anchor>
      <arglist>(Args &amp;&amp;...args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a586c1512390b7d6bbad8bb14d0effb71</anchor>
      <arglist>(std::initializer_list&lt; U &gt; li, Args &amp;&amp;...args) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a9ca748c1377ed5c102d5d0bb812873cf</anchor>
      <arglist>(DExpected &amp;_x) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value and std::is_nothrow_move_constructible&lt; E &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ae4458c405bb84dba4883ecc5dcf2da22</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1b27a56b75fd7d2ca1cb24c0b2c5c1a7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a4d006887ff523514ec24ac5170817335</anchor>
      <arglist>() const &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a6321f3fec693cf839039f14e4f67d693</anchor>
      <arglist>() &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;&amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a227ed93e76212ff78657124075247ba7</anchor>
      <arglist>() const &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>T &amp;&amp;</type>
      <name>operator*</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>ae6b8eea66d835028be8f96e9b7361378</anchor>
      <arglist>() &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>af03f63f886ba4a531713ff973d842c37</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>hasValue</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aa99f8be0bd8a8e434180cc78b9dab7a7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>afaa80017d0f01ebc06663708348e9ef1</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>afffd46786e0836baa0ad77ffe6ae6d44</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;&amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>aabf12f9357bd3414dc6d53fbc8fc25bc</anchor>
      <arglist>() const &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>T &amp;&amp;</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a40b622bdbd0916871ba693ee4146ac87</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>const E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a929c7922684a3eb5173bc8fd4572ff8e</anchor>
      <arglist>() const &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1d2e0451b444935f233daf4df12cb20e</anchor>
      <arglist>() &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>const E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a7ad0baf5f44f65b8c474e799aef80278</anchor>
      <arglist>() const &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a526a47bcc5fe7bc1627879f98e5c72b2</anchor>
      <arglist>() &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value_or</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a08f5cb42876dd8ca17d370d7c8b3d047</anchor>
      <arglist>(U &amp;&amp;_v) const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value_or</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a2f5a3fa81f055f3de495c7ebff313d2b</anchor>
      <arglist>(U &amp;&amp;_v) &amp;&amp;</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a88a0694bfd5c0b41d5a8d553180f7646</anchor>
      <arglist>(const DExpected &amp;_x, const DExpected&lt; U, E2 &gt; &amp;_y) noexcept(noexcept(bool(*_x== *_y)) and noexcept(bool(_x.error()==_y.error())))</arglist>
    </member>
    <member kind="friend">
      <type>constexpr friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a1f24af9647de655339be53d386d9cc26</anchor>
      <arglist>(const DExpected &amp;_x, const U &amp;_v) noexcept(noexcept(bool(*_x==_v)))</arglist>
    </member>
    <member kind="friend">
      <type>constexpr friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>a08ec6bed0eec7501afd2f52ef09ce181</anchor>
      <arglist>(const DExpected &amp;_x, const DUnexpected&lt; E2 &gt; &amp;_e) noexcept(noexcept(bool(_x.error()==_e.error())))</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DExpected.html</anchorfile>
      <anchor>af9f13a88a03183783ed7d55ada334570</anchor>
      <arglist>(DExpected &amp;_x, DExpected &amp;_y) noexcept(noexcept(_x.swap(_y)))</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DExpected&lt; void, E &gt;</name>
    <filename>classDtk_1_1Core_1_1DExpected_3_01void_00_01E_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DExportedInterface</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DExportedInterface.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DExportedInterfaceDBusInterface</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DExportedInterfaceDBusInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DExportedInterfacePrivate</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DExportedInterfacePrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFakeInterface</name>
    <filename>classDFakeInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DFeatureDisplayDialog</name>
    <filename>classDFeatureDisplayDialog.html</filename>
    <base>DDialog</base>
    <member kind="function">
      <type></type>
      <name>DFeatureDisplayDialog</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>acd7be88386df05f8c9357dc90e5022d3</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DFeatureDisplayDialog</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a116f74b30a495ac9b00a46d39b953612</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>af9cd7f3f8ef07c0c2dbfa84b6079402c</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a0bd13314fe8a1ef3ac90215210a39682</anchor>
      <arglist>(DFeatureItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a05c857d332cd7c32f1a875aad332b4ad</anchor>
      <arglist>(DFeatureItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItems</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a672aa3b32378ad3517359403b2f4cb55</anchor>
      <arglist>(QList&lt; DFeatureItem * &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a09c4b4ef28b283ba2301a40e17c535e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinkButtonVisible</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a954284fc14efdc0d798d3048e421bbea</anchor>
      <arglist>(bool isVisible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinkUrl</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a37adcede4032ee5a506c80e7017ce9d3</anchor>
      <arglist>(const QString &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classDFeatureDisplayDialog.html</anchorfile>
      <anchor>a959a1e529b3c3f27ee514c99b46ceed0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFeatureDisplayDialog</name>
    <filename>classDtk_1_1Widget_1_1DFeatureDisplayDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DFeatureDisplayDialogPrivate</name>
    <filename>classDFeatureDisplayDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFeatureItem</name>
    <filename>classDFeatureItem.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DFeatureItem</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>a4189c422a81481644f37012dbd66328a</anchor>
      <arglist>(const QIcon &amp;icon=QIcon(), const QString &amp;name=QString(), const QString &amp;description=QString(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DFeatureItem</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>aad47f6589fa24dc1c34e120e1f761393</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>icon</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>ace7972bb5a418ec8e36784f88767e0c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>a450c069b5fd728c99db294d9c6b175ec</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>a3aac8d7894b2d033858e4c49f9d4a6ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>a34988e70a29ecf9bec80d54326421d8f</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>a628cdfdd31d3f0e687f1977cafa93545</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classDFeatureItem.html</anchorfile>
      <anchor>a1faa856bbd7a2051170ae9dba3ef0f80</anchor>
      <arglist>(const QString &amp;description)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFeatureItem</name>
    <filename>classDtk_1_1Widget_1_1DFeatureItem.html</filename>
  </compound>
  <compound kind="class">
    <name>DFeatureItemPrivate</name>
    <filename>classDFeatureItemPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFeatureItemWidget</name>
    <filename>classDFeatureItemWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DFile</name>
    <filename>classDFile.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileChooserEdit</name>
    <filename>classDFileChooserEdit.html</filename>
    <base>DLineEdit</base>
    <member kind="signal">
      <type>void</type>
      <name>fileChoosed</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>aa4d84f1436535e870a71709b1bcd776e</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dialogOpened</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a61a5fc9d9aeec5d16e53de481c727590</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dialogClosed</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a7cfc4513ccb814ab5204abd66719a4ba</anchor>
      <arglist>(int code)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFileChooserEdit</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a3f476d9ff776d0f75258378b600c6649</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileMode</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a6eccd9366099554b5ff4db1c199ef018</anchor>
      <arglist>(QFileDialog::FileMode mode)</arglist>
    </member>
    <member kind="function">
      <type>QFileDialog::FileMode</type>
      <name>fileMode</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a31c91202cd36bd9fea9154a9834ee727</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNameFilters</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>ada10d58b34e147115cfcbfa00114f639</anchor>
      <arglist>(const QStringList &amp;filters)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>nameFilters</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a97787d7657bd7e87e80311a997774b72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDialogDisplayPosition</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>aac09bdccec37b9946a91cfc6621cd50b</anchor>
      <arglist>(DialogDisplayPosition dialogDisplayPosition)</arglist>
    </member>
    <member kind="function">
      <type>DFileChooserEdit::DialogDisplayPosition</type>
      <name>dialogDisplayPosition</name>
      <anchorfile>classDFileChooserEdit.html</anchorfile>
      <anchor>a573054d1fc0b77cfcb006af0a82e3e0b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFileChooserEdit</name>
    <filename>classDtk_1_1Widget_1_1DFileChooserEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileChooserEditExample</name>
    <filename>classDFileChooserEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFileChooserEditPrivate</name>
    <filename>classDFileChooserEditPrivate.html</filename>
    <base protection="private">DLineEditPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFileDialog</name>
    <filename>classDFileDialog.html</filename>
    <base>QFileDialog</base>
    <class kind="struct">DFileDialog::DComboBoxOptions</class>
    <class kind="struct">DFileDialog::DLineEditOptions</class>
    <member kind="function">
      <type>void</type>
      <name>addComboBox</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a113591b57763bb43a17267bb99030411</anchor>
      <arglist>(const QString &amp;text, const QStringList &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComboBox</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a0da8f2e5b3f53c2ebc0f9a4314d8de81</anchor>
      <arglist>(const QString &amp;text, const DComboBoxOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLineEdit</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>ac377056c749c1fe946ef3d091003e83d</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLineEdit</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a43374f93f4ee60b95dbf4b88e42a4052</anchor>
      <arglist>(const QString &amp;text, const DLineEditOptions &amp;options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowMixedSelection</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>af202e900bd6fa485047cdebd88f28501</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getComboBoxValue</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a6115a32a9b27c8e50b587a576462794d</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getLineEditValue</name>
      <anchorfile>classDFileDialog.html</anchorfile>
      <anchor>a9808ebd2d88215f9e5d03b1a539c569c</anchor>
      <arglist>(const QString &amp;text) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFileDialog</name>
    <filename>classDtk_1_1Widget_1_1DFileDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDialogExample</name>
    <filename>classDFileDialogExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFileDrag</name>
    <filename>classDFileDrag.html</filename>
    <base>QDrag</base>
    <member kind="signal">
      <type>void</type>
      <name>targetUrlChanged</name>
      <anchorfile>classDFileDrag.html</anchorfile>
      <anchor>a2c0cd15f6f1c6454d9905807b24e5878</anchor>
      <arglist>(QUrl url)</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>targetUrl</name>
      <anchorfile>classDFileDrag.html</anchorfile>
      <anchor>a3553c2ff3a9f3bf483b8054b7270e904</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMimeData</name>
      <anchorfile>classDFileDrag.html</anchorfile>
      <anchor>adf42b1fc2931eb081a7e48add02f0a59</anchor>
      <arglist>(QMimeData *data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFileDrag</name>
    <filename>classDtk_1_1Gui_1_1DFileDrag.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDragClient</name>
    <filename>classDFileDragClient.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>progressChanged</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a01d0156804a0f2084a4f568bf0201ce7</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>stateChanged</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a1a32f6927bf6c58d37de165db86db1c6</anchor>
      <arglist>(DFileDragState state)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>serverDestroyed</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a275736acc5abe6080bd603ad9bb22ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>progress</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a4044d58d2755f4bbe8aca5612c0f54b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DFileDragState</type>
      <name>state</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a8affafb13a36f2aabb8027979f562a67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkMimeData</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>acbd4c7c7090d14e8472c13a4c107f043</anchor>
      <arglist>(const QMimeData *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTargetData</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>ab4a54b86071a1acc38fa41061c2aace2</anchor>
      <arglist>(const QMimeData *data, QString key, QVariant value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTargetUrl</name>
      <anchorfile>classDFileDragClient.html</anchorfile>
      <anchor>a4c506e38d2d207919f1bf1c621d6ba14</anchor>
      <arglist>(const QMimeData *data, QUrl url)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFileDragClient</name>
    <filename>classDtk_1_1Gui_1_1DFileDragClient.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDragClientPrivate</name>
    <filename>classDFileDragClientPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileDragServer</name>
    <filename>classDFileDragServer.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setProgress</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>af3d5c150495d2eda9ba0995af8f5c269</anchor>
      <arglist>(int progress)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>aa84e47e5951fed9906062245744955c4</anchor>
      <arglist>(DFileDragState state)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>targetDataChanged</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>a9752d1aac5ddcabffd9e47e6d1a29dd0</anchor>
      <arglist>(const QString &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>targetData</name>
      <anchorfile>classDFileDragServer.html</anchorfile>
      <anchor>a0170ec299c1dc773e1905c73f68afe19</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFileDragServer</name>
    <filename>classDtk_1_1Gui_1_1DFileDragServer.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileFuture</name>
    <filename>classDFileFuture.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DFileIconProvider</name>
    <filename>classDFileIconProvider.html</filename>
    <base>QFileIconProvider</base>
  </compound>
  <compound kind="class">
    <name>DFileIconProviderPrivate</name>
    <filename>classDFileIconProviderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileInfo</name>
    <filename>classDFileInfo.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DFileInfoPrivate</name>
    <filename>classDFileInfoPrivate.html</filename>
    <base>QObject</base>
    <base>QSharedData</base>
    <class kind="struct">DFileInfoPrivate::NormalFutureAsyncOp</class>
  </compound>
  <compound kind="class">
    <name>DFileMonitor</name>
    <filename>classDFileMonitor.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>DTK_CORE_NAMESPACE::DExpected&lt; bool &gt;</type>
      <name>start</name>
      <anchorfile>classDFileMonitor.html</anchorfile>
      <anchor>a47c505788907caa4813b64d9c32dc806</anchor>
      <arglist>(quint32 timeRate=200)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFileMonitorPrivate</name>
    <filename>classDFileMonitorPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileOperator</name>
    <filename>classDFileOperator.html</filename>
  </compound>
  <compound kind="class">
    <name>DFileOperatorPrivate</name>
    <filename>classDFileOperatorPrivate.html</filename>
    <base>QObject</base>
    <class kind="struct">DFileOperatorPrivate::NormalFutureAsyncOp</class>
  </compound>
  <compound kind="class">
    <name>DFilePrivate</name>
    <filename>classDFilePrivate.html</filename>
    <base>QObject</base>
    <class kind="struct">DFilePrivate::NormalFutureAsyncOp</class>
    <class kind="struct">DFilePrivate::ReadAllAsyncFutureOp</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileServices</name>
    <filename>classDtk_1_1Core_1_1DFileServices.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileSystemWatcher</name>
    <filename>classDtk_1_1Core_1_1DFileSystemWatcher.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type></type>
      <name>DFileSystemWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a898df68bda1a1b3f31ce54ffb2dbfc0d</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFileSystemWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a2cb634cb4a19e5d9ad1baecc6ae2936e</anchor>
      <arglist>(const QStringList &amp;paths, QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DFileSystemWatcher</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>af0261247601d380db10af96412b9ba55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPath</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a596b42f0264af6c2ca6186e1fa234a7c</anchor>
      <arglist>(const QString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>addPaths</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a95f9b90e40f268873682ea191996bb9c</anchor>
      <arglist>(const QStringList &amp;files)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removePath</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a723bb916c339ffe791e521c3bf300ea0</anchor>
      <arglist>(const QString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>removePaths</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>afd0a393eb251aa01d927abccde5f2057</anchor>
      <arglist>(const QStringList &amp;files)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>files</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>a3aabd837ad02f5403ac619dd00ac83b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>directories</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcher.html</anchorfile>
      <anchor>af5b02cad6c6588395e1562750713bfe7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileSystemWatcherPrivate</name>
    <filename>classDtk_1_1Core_1_1DFileSystemWatcherPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <base>Dtk::Core::DObjectPrivate</base>
    <base>Dtk::Core::DObjectPrivate</base>
    <member kind="function">
      <type>void</type>
      <name>_q_readFromInotify</name>
      <anchorfile>classDtk_1_1Core_1_1DFileSystemWatcherPrivate.html</anchorfile>
      <anchor>a02d1916e14c3d770ac85bebe153df0c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFileThumbnailProviderPrivate</name>
    <filename>classDFileThumbnailProviderPrivate.html</filename>
    <base>DThumbnailProvider</base>
    <base>DThumbnailProvider</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcher</name>
    <filename>classDtk_1_1Core_1_1DFileWatcher.html</filename>
    <base>Dtk::Core::DBaseFileWatcher</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcherManager</name>
    <filename>classDtk_1_1Core_1_1DFileWatcherManager.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
    <member kind="function">
      <type>DFileWatcher *</type>
      <name>add</name>
      <anchorfile>classDtk_1_1Core_1_1DFileWatcherManager.html</anchorfile>
      <anchor>a688f6d112cfb42cf310430b9bb843c38</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classDtk_1_1Core_1_1DFileWatcherManager.html</anchorfile>
      <anchor>ae2b829d8576b30c37af8d8eeb09e30ca</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcherManagerPrivate</name>
    <filename>classDtk_1_1Core_1_1DFileWatcherManagerPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DFileWatcherPrivate</name>
    <filename>classDtk_1_1Core_1_1DFileWatcherPrivate.html</filename>
    <base protection="private">Dtk::Core::DBaseFileWatcherPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFloatingButton</name>
    <filename>classDFloatingButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DFloatingButton</name>
      <anchorfile>classDFloatingButton.html</anchorfile>
      <anchor>aa5469ef21b7e9a10cf06fb5ba913d462</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFloatingButtonExample</name>
    <filename>classDFloatingButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFloatingMessage</name>
    <filename>classDFloatingMessage.html</filename>
    <base>DFloatingWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a356135eaa6a210e267fcec78319bc593</anchor>
      <arglist>(const QIcon &amp;ico)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>ae398619560a825b287553b3d84c71141</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a4e853d0b19f5ab6ac81123cdea9754cc</anchor>
      <arglist>(QWidget *w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDuration</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a2a5cfea17af78221a467eadeef161687</anchor>
      <arglist>(int msec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDFloatingMessage.html</anchorfile>
      <anchor>a923f8ab92157d958dfbef208a7937212</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFloatingMessage</name>
    <filename>classDtk_1_1Widget_1_1DFloatingMessage.html</filename>
  </compound>
  <compound kind="class">
    <name>DFloatingMessagePrivate</name>
    <filename>classDFloatingMessagePrivate.html</filename>
    <base>DFloatingWidgetPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFloatingWidget</name>
    <filename>classDFloatingWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>setBlurBackgroundEnabled</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a11b246c9bc1c4a8845637595d268b2b1</anchor>
      <arglist>(bool blurBackgroundEnabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFloatingWidget</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>acce00f3a2a92cee5ae6d3b02c208075e</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a923f8ab92157d958dfbef208a7937212</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFramRadius</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>aafd5a9c8a4b1179335f5502c0df9186c</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initStyleOption</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a8373bb2e19368f95e48bebe2ae291fec</anchor>
      <arglist>(DStyleOptionFloatingWidget *option) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blurBackgroundIsEnabled</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a3389e489461f52d9695bab3ab3e74a04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DBlurEffectWidget *</type>
      <name>blurBackground</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>a891ee8948dcc17ff3bd6afc62746758d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DFloatingWidget</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>ac4e8042b6ba99adaee59e10d22d54d88</anchor>
      <arglist>(DFloatingWidgetPrivate &amp;dd, QWidget *parent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classDFloatingWidget.html</anchorfile>
      <anchor>adc149c56fd7c4c627d6de403a56425c8</anchor>
      <arglist>(QEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFloatingWidgetPrivate</name>
    <filename>classDFloatingWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFlowLayout</name>
    <filename>classDFlowLayout.html</filename>
    <base>QLayout</base>
    <member kind="slot">
      <type>void</type>
      <name>setHorizontalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a444857ae4f995d270e77bb7e34e95b64</anchor>
      <arglist>(int horizontalSpacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVerticalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a1b2a386a24c7d93b9101a9c633905f55</anchor>
      <arglist>(int verticalSpacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a83004594feda3e5f7a37425c767f2ab7</anchor>
      <arglist>(int spacing)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFlow</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a3a95898b832ec4f8e479a17d03c0e27a</anchor>
      <arglist>(Flow flow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>add3c8bdc620b58797847010257b3043d</anchor>
      <arglist>(int index, QLayoutItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a4606788589276afac1f53faa5bd75007</anchor>
      <arglist>(int index, QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLayout</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>abd3290649ff9fead5422b0c7009663f7</anchor>
      <arglist>(int index, QLayout *layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>af38f734c02e01cc90085b8453b18712a</anchor>
      <arglist>(int index, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertStretch</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a41f5302b0afb2693e935d45d69a86174</anchor>
      <arglist>(int index, int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpacerItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>af001b54375f07343857f7d0f19affc57</anchor>
      <arglist>(int index, QSpacerItem *spacerItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a24395bc6981864663f63cca7fa1d38dc</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addStretch</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a7e4d125f9a8cf7d70cb1f34fbc8f53c4</anchor>
      <arglist>(int stretch=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpacerItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a62cb6c5a3c7631f0175923dacc900263</anchor>
      <arglist>(QSpacerItem *spacerItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a3ca7f32828c63774ef30fe8fd30c409e</anchor>
      <arglist>(QLayoutItem *item) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasHeightForWidth</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>ac4733374419f239f6f2ac442615fec51</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>heightForWidth</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>af204722516914f09161374289237cbf4</anchor>
      <arglist>(int) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a1dd33b25505bc6739d99575f5c71e5de</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>QLayoutItem *</type>
      <name>takeAt</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a63a409d74a598a8a4444174f076ef0b2</anchor>
      <arglist>(int index) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>horizontalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a50a788fcb9cf4f01feb1e3e2980b0da5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>verticalSpacing</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>ab8036a67baf95e7f5acfe83358cb4dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Flow</type>
      <name>flow</name>
      <anchorfile>classDFlowLayout.html</anchorfile>
      <anchor>a6f4c6548e7a137494194c6337cf2e83b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFlowLayout</name>
    <filename>classDtk_1_1Widget_1_1DFlowLayout.html</filename>
  </compound>
  <compound kind="class">
    <name>DFlowLayoutPrivate</name>
    <filename>classDFlowLayoutPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontComboBox</name>
    <filename>classDFontComboBox.html</filename>
    <base>DComboBox</base>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentFont</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a2ea244a4602eda079656d8d9e3a1fdad</anchor>
      <arglist>(const QFont &amp;f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DFontComboBox</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a29295d3d4492049803258a3b7a2c0421</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWritingSystem</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a4ea7ae951731446a5a3fcc0bfa96e0c5</anchor>
      <arglist>(QFontDatabase::WritingSystem)</arglist>
    </member>
    <member kind="function">
      <type>QFontDatabase::WritingSystem</type>
      <name>writingSystem</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>ae6d6683728b10a8dd431346ec1ad5913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontFilters</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>abc9ba0d4762f72452dc4d24177975d94</anchor>
      <arglist>(QFontComboBox::FontFilters filters)</arglist>
    </member>
    <member kind="function">
      <type>QFontComboBox::FontFilters</type>
      <name>fontFilters</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>ab5d1eed8ff005caa7a39495b41679407</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QFont</type>
      <name>currentFont</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a0a38f057e6eecb02656e303de83189cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>a0fb1c0088cb88dcf4e451b7c03909ee7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>event</name>
      <anchorfile>classDFontComboBox.html</anchorfile>
      <anchor>ac02b887455a24504cda00d1d1de28957</anchor>
      <arglist>(QEvent *e) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFontComboBoxExample</name>
    <filename>classDFontComboBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFontComboBoxPrivate</name>
    <filename>classDFontComboBoxPrivate.html</filename>
    <base>DComboBoxPrivate</base>
  </compound>
  <compound kind="class">
    <name>DFontManager</name>
    <filename>classDFontManager.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>Q_INVOKABLE int</type>
      <name>fontPixelSize</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a288368436a44e45ce511ed2ccb68801b</anchor>
      <arglist>(SizeType type) const</arglist>
    </member>
    <member kind="function">
      <type>Q_INVOKABLE void</type>
      <name>setFontPixelSize</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a219a729130d0d97c0b9e6c3ee13696ce</anchor>
      <arglist>(SizeType type, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBaseFont</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a073047e1c74acbf01a551967b7aa0411</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QFont</type>
      <name>get</name>
      <anchorfile>classDFontManager.html</anchorfile>
      <anchor>a6fb5e0a1de5877644eae1fca8ad16145</anchor>
      <arglist>(int pixelSize, const QFont &amp;base)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DFontManager</name>
    <filename>classDtk_1_1Gui_1_1DFontManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontManagerPrivate</name>
    <filename>classDFontManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontSizeManager</name>
    <filename>classDFontSizeManager.html</filename>
    <member kind="function">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a1882fe37243ec33dca65b7e549420296</anchor>
      <arglist>(QWidget *widget, SizeType type, int weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unbind</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a21d1a132e973d1be037e4a9066baa5f4</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>quint16</type>
      <name>fontPixelSize</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>ad1668e295e236a3cd79d35bb7d199ee4</anchor>
      <arglist>(SizeType type) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontPixelSize</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a87e6d4fe0e47448080059cfd61d44fe5</anchor>
      <arglist>(SizeType type, quint16 size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontGenericPixelSize</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>ae51e5a4367f947716d256cf1ed3e3564</anchor>
      <arglist>(quint16 size)</arglist>
    </member>
    <member kind="function">
      <type>const QFont</type>
      <name>get</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a88655d29842b22bc027a4c882c29813c</anchor>
      <arglist>(SizeType type, int weight, const QFont &amp;base=QFont()) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DFontSizeManager *</type>
      <name>instance</name>
      <anchorfile>classDFontSizeManager.html</anchorfile>
      <anchor>a4d38b4d13ee70801eb8f9f53851469b4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DFontSizeManager</name>
    <filename>classDtk_1_1Widget_1_1DFontSizeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DFontSizeManagerPrivate</name>
    <filename>classDFontSizeManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DForeignWindow</name>
    <filename>classDForeignWindow.html</filename>
    <base>QWindow</base>
    <member kind="signal">
      <type>void</type>
      <name>wmClassChanged</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>aaad3cc1043a896236756fe0371183c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>pidChanged</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>a424eadf0537e565295498eda505e0ff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DForeignWindow</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>abe67965134550275b0cfc445872c4024</anchor>
      <arglist>(QWindow *parent=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DForeignWindow *</type>
      <name>fromWinId</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>ab5416d7037a8dc71654db6c4386958d0</anchor>
      <arglist>(WId id)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>wmClass</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>a4a44fdbbd12323932f2f52af9b4487bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint32</type>
      <name>pid</name>
      <anchorfile>classDForeignWindow.html</anchorfile>
      <anchor>adf06aa24cb3c3875185c46c33ed7b01d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DForeignWindow</name>
    <filename>classDtk_1_1Gui_1_1DForeignWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>DForeignWindowPrivate</name>
    <filename>classDForeignWindowPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFrame</name>
    <filename>classDFrame.html</filename>
    <base>QFrame</base>
    <member kind="function">
      <type></type>
      <name>DFrame</name>
      <anchorfile>classDFrame.html</anchorfile>
      <anchor>ab8aea70683e87356f13b12c3232b11fd</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrameRounded</name>
      <anchorfile>classDFrame.html</anchorfile>
      <anchor>ab70885116a3f88b39f6b746850b3b93d</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackgroundRole</name>
      <anchorfile>classDFrame.html</anchorfile>
      <anchor>aa7e121179b92692772c6eeb971948e0f</anchor>
      <arglist>(DGUI_NAMESPACE::DPalette::ColorType type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DFrameExample</name>
    <filename>classDFrameExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DFramePrivate</name>
    <filename>classDFramePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DFuturePrivate</name>
    <filename>classDFuturePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DGenericDevice</name>
    <filename>classDGenericDevice.html</filename>
    <base>DDevice</base>
    <member kind="signal">
      <type>void</type>
      <name>HwAddressChanged</name>
      <anchorfile>classDGenericDevice.html</anchorfile>
      <anchor>adb21f149081c57722249ab282e6ac533</anchor>
      <arglist>(const QByteArray &amp;addr)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>typeDescriptionChanged</name>
      <anchorfile>classDGenericDevice.html</anchorfile>
      <anchor>a284d96f9c40c9a67fc5e71635d56f5b6</anchor>
      <arglist>(const QString &amp;desc)</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>HwAddress</name>
      <anchorfile>classDGenericDevice.html</anchorfile>
      <anchor>a40b5ea60c2270c2ce8e886ce6c2c84d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>typeDescription</name>
      <anchorfile>classDGenericDevice.html</anchorfile>
      <anchor>a722a4d9554e99f115b01390337dad7cd</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DGenericDevice</name>
    <filename>classDtk_1_1NetworkManager_1_1DGenericDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DGenericDeviceInterface</name>
    <filename>classDGenericDeviceInterface.html</filename>
    <base>DDeviceInterface</base>
  </compound>
  <compound kind="class">
    <name>DGenericDevicePrivate</name>
    <filename>classDGenericDevicePrivate.html</filename>
    <base>DDevicePrivate</base>
  </compound>
  <compound kind="class">
    <name>DGenericSetting</name>
    <filename>classDGenericSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DGenericSettingPrivate</name>
    <filename>classDGenericSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsClipEffect</name>
    <filename>classDGraphicsClipEffect.html</filename>
    <base>QGraphicsEffect</base>
    <member kind="slot">
      <type>void</type>
      <name>setMargins</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a95adde3ff7730b38090e70db34d6e2af</anchor>
      <arglist>(const QMargins &amp;margins)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a8a8871f0814ccea9657c0b36d6a8c9f3</anchor>
      <arglist>(const QPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>marginsChanged</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a8e15bf128a6d841c976008a49987f047</anchor>
      <arglist>(QMargins margins)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>clipPathChanged</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>af93423586a6ee14660ddde915da1f815</anchor>
      <arglist>(QPainterPath clipPath)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DGraphicsClipEffect</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a337122610c814a47f0386eada3d4f7bf</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="property">
      <type>QMargins</type>
      <name>margins</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a889a0275a4c6c1d19de2082d7f16d2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDGraphicsClipEffect.html</anchorfile>
      <anchor>a355c6d91153fb7bace3fd21eb9c7d201</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DGraphicsClipEffect</name>
    <filename>classDtk_1_1Widget_1_1DGraphicsClipEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsClipEffectPrivate</name>
    <filename>classDGraphicsClipEffectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsCropItem</name>
    <filename>classDGraphicsCropItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="class">
    <name>DGraphicsGlowEffect</name>
    <filename>classDGraphicsGlowEffect.html</filename>
    <base>QGraphicsEffect</base>
    <member kind="function">
      <type></type>
      <name>DGraphicsGlowEffect</name>
      <anchorfile>classDGraphicsGlowEffect.html</anchorfile>
      <anchor>acab9769de8a44fc993b30177d1168135</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>draw</name>
      <anchorfile>classDGraphicsGlowEffect.html</anchorfile>
      <anchor>a6e703d0a4bbee5a8cb7cabe94057a612</anchor>
      <arglist>(QPainter *painter)</arglist>
    </member>
    <member kind="function">
      <type>QRectF</type>
      <name>boundingRectFor</name>
      <anchorfile>classDGraphicsGlowEffect.html</anchorfile>
      <anchor>a11d351e515f68fb236a02634c6806a9b</anchor>
      <arglist>(const QRectF &amp;rect) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DGraphicsGlowEffect</name>
    <filename>classDtk_1_1Widget_1_1DGraphicsGlowEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>DGraphicsMovieItem</name>
    <filename>classDGraphicsMovieItem.html</filename>
    <base>QObject</base>
    <base>QGraphicsPixmapItem</base>
  </compound>
  <compound kind="class">
    <name>DGraphicsPixmapItem</name>
    <filename>classDGraphicsPixmapItem.html</filename>
    <base>QGraphicsPixmapItem</base>
  </compound>
  <compound kind="class">
    <name>DGraphicsSVGItem</name>
    <filename>classDGraphicsSVGItem.html</filename>
    <base>QGraphicsObject</base>
  </compound>
  <compound kind="class">
    <name>DGroupBoxExample</name>
    <filename>classDGroupBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DGstPlayerGLWidget</name>
    <filename>classDGstPlayerGLWidget.html</filename>
    <base>QOpenGLWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DGstPlayerGLWidget</name>
      <anchorfile>classDGstPlayerGLWidget.html</anchorfile>
      <anchor>a96c7c86f1facffcabf415dfffa73678f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleRoundedClip</name>
      <anchorfile>classDGstPlayerGLWidget.html</anchorfile>
      <anchor>ad0e921c36c0fea6eaef5dc507082862f</anchor>
      <arglist>(bool bFalse)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeGL</name>
      <anchorfile>classDGstPlayerGLWidget.html</anchorfile>
      <anchor>ad163a49a19bd27cd67175cca7cf2cb8e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DGstPlayerProxy</name>
    <filename>classDGstPlayerProxy.html</filename>
    <base>DPlayerBackend</base>
    <member kind="slot">
      <type>void</type>
      <name>play</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a7979017b6cb33240e9f004feb5edbc88</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>pauseResume</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a75a18503c7196e0d869ccbd006f22654</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ac173fdfbb7d2c22d54fe3b1a9656f937</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>seekForward</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a1df79cb9d5d16eea52047c99beea6911</anchor>
      <arglist>(int nSecs) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>seekBackward</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a756d5940ae96a1bfe7a4d17a08ae583f</anchor>
      <arglist>(int nSecs) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>seekAbsolute</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a0b7bf814560dc7a0054eaa413170a476</anchor>
      <arglist>(int nPos) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>volumeUp</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a6cde77949bbff0d5f2fc8d92443d02cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>volumeDown</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>af5fb8df16d623bd3c51c2f8dd7523181</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>changeVolume</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ae860d9086f3b35a632e1a6d7376c9579</anchor>
      <arglist>(int nVol) override</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>volume</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a1a3e3c9abcccb20bb974538bdb4b575a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>muted</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>af2390371f30661cece7f2549d97a112d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>toggleMute</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a90ca64b70443248e35bd13073e31b734</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ad7fad01cce5521db5c6746e4d11fa52a</anchor>
      <arglist>(bool bMute) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>updateSubStyle</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a38ebdd5132cb56d27a29bdfb965f8ef8</anchor>
      <arglist>(const QString &amp;font, int sz) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSubCodepage</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a5fb961873a3fb97e19a841d78bfb2355</anchor>
      <arglist>(const QString &amp;cp) override</arglist>
    </member>
    <member kind="slot">
      <type>QString</type>
      <name>subCodepage</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a16611c79485ff89b553794109e95ab8c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>addSubSearchPath</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>af91819e1252bd55973a83451f466c99e</anchor>
      <arglist>(const QString &amp;path) override</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>loadSubtitle</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ab44b165f6a69a6f75cd6ba2eccd6ea3d</anchor>
      <arglist>(const QFileInfo &amp;fi) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>toggleSubtitle</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a20dc02dd62d922e23ce75ea3e4ee9c33</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>bool</type>
      <name>isSubVisible</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ae209b677fdd6e112ce77b37079a275fe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectSubtitle</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a9ea39cd64cc67646de6f74cf5538e662</anchor>
      <arglist>(int id) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectTrack</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a1efd248b102213e0d4f9addb8910d622</anchor>
      <arglist>(int id) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSubDelay</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>aee885f3ec629e0dcbbb12953a17b6f0d</anchor>
      <arglist>(double secs) override</arglist>
    </member>
    <member kind="slot">
      <type>double</type>
      <name>subDelay</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>aceeb7ffc9954c86eba43f0f7dc0ef534</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>aid</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>afa9d36297889c7480e6ac17d52abfed2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>sid</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a8524d363cfd21dffe232e0bca24426bb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>changeSoundMode</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a33260550eccf1896bc6d7a750c1d7313</anchor>
      <arglist>(SoundMode) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVideoAspect</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a43ebf275a4cfc8f20d676090bb05c940</anchor>
      <arglist>(double r) override</arglist>
    </member>
    <member kind="slot">
      <type>double</type>
      <name>videoAspect</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ab9451e4ec15878ce53affdee1d42b957</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>videoRotation</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a358cd02e9e9b0885a357da4faef3ba36</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVideoRotation</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a505f39e1c20e68da4c9aded186a364e0</anchor>
      <arglist>(int degree) override</arglist>
    </member>
    <member kind="slot">
      <type>QImage</type>
      <name>takeScreenshot</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a8b4bb53e3a46e10b58b577cda9a235b7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>burstScreenshot</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a30efde85c0f3e26284f8079dbb299c97</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stopBurstScreenshot</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a6a276210474d48b9b2c45a00f8735eca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>QVariant</type>
      <name>getProperty</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ac6d6ca99554b275297bf9a83d3654c4b</anchor>
      <arglist>(const QString &amp;) const override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a386f66ef0e67aed3fac9e8577920fe23</anchor>
      <arglist>(const QString &amp;, const QVariant &amp;) override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a157ec4acbbc5ab62212f3fb9a60ee3b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>previousFrame</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>af765ee24c110cc19380e221e6784e39c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>makeCurrent</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>afc05acf7874108001fa410bda41cbbfc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>changehwaccelMode</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ab251ba95b023f46697122b9152d0ea90</anchor>
      <arglist>(hwaccelMode hwaccelMode) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>firstInit</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a6813a25a05c7c5e4dd5621457892fc61</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRoundClip</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>afe757a280beaaf72150b22743849f6f3</anchor>
      <arglist>(bool roundClip)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentFrame</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a3a18dd83bf1a5c42255e47a0b38d9e5d</anchor>
      <arglist>(const QImage &amp;img)</arglist>
    </member>
    <member kind="function">
      <type>const PlayingMovieInfo &amp;</type>
      <name>playingMovieInfo</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a4af088793f4e2a35b41396167c899c15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayable</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>aaae7aeefd542dad92eb0937eacb22e1d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pollingEndOfPlayback</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a1b206b57ee0db8d46b2c0a68eea912b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>duration</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a1fe8c790764419122c22090d82b51a93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>elapsed</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a5a8f7ac99e0ce535791fbab767248e94</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>videoSize</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a7cd79f3f8067dd3824c12b16861b05ab</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaySpeed</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>ac9c6c8b9e6bdb5c0e4d62418bad73321</anchor>
      <arglist>(double dTimes) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>savePlaybackPosition</name>
      <anchorfile>classDGstPlayerProxy.html</anchorfile>
      <anchor>a94a21ce199b5904607a4ac6f3fce8868</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DGstPlayerProxy</name>
    <filename>classDtk_1_1Multimedia_1_1DGstPlayerProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>DGstPlayerProxyPrivate</name>
    <filename>classDGstPlayerProxyPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DGuiApplicationHelper</name>
    <filename>classDGuiApplicationHelper.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>ColorType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a95bb3c2345b862eb18aebb372351099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a2baabc46b6bf60f6b430da872d7ba386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DarkType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a6882189c1f3cd4aae73d4ec9a505655d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Attribute</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseInactiveColorGroup</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caeff4d0f8dd5d66a2cccb9ae9d35bdab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorCompositing</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca4b2fd01fb675d8834a977785369b1488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ReadOnlyLimit</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca9b429f61321b3c1623f2f3d3a24963f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinPlatformTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cae9fd7d42031f1ae533fb8bac7f22ecf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDXcbPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caebd2551a8fbf187ef3c77fea39afc8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsXWindowPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca0477d73aad74e1f0f28ef39745a85fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsTableEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caa2f8de4bba85fadf6df1e46fa09ae6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cad7394061402858d07d1c3a012130460b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a95bb3c2345b862eb18aebb372351099d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LightType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a2baabc46b6bf60f6b430da872d7ba386</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DarkType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aded1affde49f3af542f861eedbd32d92a6882189c1f3cd4aae73d4ec9a505655d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseInactiveColorGroup</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caeff4d0f8dd5d66a2cccb9ae9d35bdab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ColorCompositing</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca4b2fd01fb675d8834a977785369b1488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ReadOnlyLimit</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca9b429f61321b3c1623f2f3d3a24963f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinPlatformTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cae9fd7d42031f1ae533fb8bac7f22ecf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDXcbPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caebd2551a8fbf187ef3c77fea39afc8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsXWindowPlatform</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155ca0477d73aad74e1f0f28ef39745a85fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsTableEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155caa2f8de4bba85fadf6df1e46fa09ae6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IsDeepinEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>af2609d4dc9b44f180e93c23f2bc1155cad7394061402858d07d1c3a012130460b</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPaletteType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a9a100f0f248307b7cc2df722a8aff68e</anchor>
      <arglist>(ColorType paletteType)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>handleHelpAction</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a23eec3eb5148c6b235229354a12bbcf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DGuiApplicationHelper::SizeMode</type>
      <name>sizeMode</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ae950b7b4e01a6ed440e006a4d3ab4487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSizeMode</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a208e5c9822d5b492f7d30df6df1efeb9</anchor>
      <arglist>(const DGuiApplicationHelper::SizeMode mode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>resetSizeMode</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aab27c0fafd1b8f0b2e288978cea8450a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot" static="yes">
      <type>static bool</type>
      <name>isCompactMode</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a2162fe02c11d1d7d9f1c16aa5c4ae54b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>newProcessInstance</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ab94fab6c42b86328baffcbb7bb3de0ad</anchor>
      <arglist>(qint64 pid, const QStringList &amp;arguments)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>applicationPaletteChanged</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a5001b4c491748c4b04bf45b97e2bb003</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sizeModeChanged</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aac3729c9f48d2d959b8020dee0c2fd17</anchor>
      <arglist>(DGuiApplicationHelper::SizeMode sizeMode)</arglist>
    </member>
    <member kind="function">
      <type>DPlatformTheme *</type>
      <name>systemTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a54696b5f532a5deaad028efdf4069fa1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DPlatformTheme *</type>
      <name>applicationTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a68b559d15c50f259ff5a88bee40eb372</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED DPlatformTheme *</type>
      <name>windowTheme</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ad47af29164477016275cafc944c28783</anchor>
      <arglist>(QWindow *window) const</arglist>
    </member>
    <member kind="function">
      <type>DPalette</type>
      <name>applicationPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>affc1f7774ce419a1ca73eab31f13cac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setApplicationPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a88d71049a24d357f21a3fcf01575c48c</anchor>
      <arglist>(const DPalette &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED DPalette</type>
      <name>windowPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a36bc2b0660c97a4bdb2ba559151e4ccf</anchor>
      <arglist>(QWindow *window) const</arglist>
    </member>
    <member kind="function">
      <type>const DFontManager *</type>
      <name>fontManager</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a577e7dd7a88636632917bd1b88e1c98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ColorType</type>
      <name>themeType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ae52eaafd5dac53d984f343818dc14621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ColorType</type>
      <name>paletteType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ad3c12b8c91f93ef04a9f212842113aa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasUserManual</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a348f427c0f2e68b390a16a6b8ad5be09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED void</type>
      <name>registerInstanceCreator</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a168bc69f3dd3a98b978f6441b110e8f0</anchor>
      <arglist>(HelperCreator creator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DGuiApplicationHelper *</type>
      <name>instance</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a4a9d84ced740d42bf39666aaa4d3c089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>adjustColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a9cde0c1e68ad96a4f51983dcd2e74cea</anchor>
      <arglist>(const QColor &amp;base, qint8 hueFloat, qint8 saturationFloat, qint8 lightnessFloat, qint8 redFloat, qint8 greenFloat, qint8 blueFloat, qint8 alphaFloat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QImage</type>
      <name>adjustColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a30a0a5a3123d5e71415210cfbb5b8e7f</anchor>
      <arglist>(const QImage &amp;base, qint8 hueFloat, qint8 saturationFloat, qint8 lightnessFloat, qint8 redFloat, qint8 greenFloat, qint8 blueFloat, qint8 alphaFloat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>blendColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>abc1784e93e1b0acaa2120832245087c5</anchor>
      <arglist>(const QColor &amp;substrate, const QColor &amp;superstratum)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DPalette</type>
      <name>standardPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>aa88a702eaaada0055b51d9b8617ab648</anchor>
      <arglist>(ColorType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePaletteColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a148d4077f71412e3f71fdf3f62b21ca6</anchor>
      <arglist>(DPalette &amp;base, QPalette::ColorRole role, ColorType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePaletteColor</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ab1c178b05f397b57c042e7ca564af836</anchor>
      <arglist>(DPalette &amp;base, DPalette::ColorType role, ColorType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ab881c07f42d47c801ceb75c92937fc0a</anchor>
      <arglist>(DPalette &amp;base, ColorType type=UnknownType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DPalette</type>
      <name>fetchPalette</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a80dbc8f823db2a49230e24734d4e5723</anchor>
      <arglist>(const DPlatformTheme *theme)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTabletEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a80c3706fe396568897da92d9db1e882c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSpecialEffectsEnvironment</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a52569ac7a7e3a57f2d7e2466791e57b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorType</type>
      <name>toColorType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ac3667e460316b989a6f54463b7afcaa0</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ColorType</type>
      <name>toColorType</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a25d6cc357e5f856da4c1e7765eabe420</anchor>
      <arglist>(const QPalette &amp;palette)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setSingleInstance</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>ac3172ba90dcda102e3a3ac3b68ffebe3</anchor>
      <arglist>(const QString &amp;key, SingleScope singleScope=UserScope)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSingleInstanceInterval</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>a299390a91b1c3a5aebdccba40d424c92</anchor>
      <arglist>(int interval=3000)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED void</type>
      <name>setSingelInstanceInterval</name>
      <anchorfile>classDGuiApplicationHelper.html</anchorfile>
      <anchor>acf91b183ef7e5566a9770b558db42451</anchor>
      <arglist>(int interval=3000)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DGuiApplicationHelper</name>
    <filename>classDtk_1_1Gui_1_1DGuiApplicationHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DHandleContextMenuWindow</name>
    <filename>classDHandleContextMenuWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>DHBoxWidget</name>
    <filename>classDHBoxWidget.html</filename>
    <base>DBoxWidget</base>
    <member kind="function">
      <type></type>
      <name>DHBoxWidget</name>
      <anchorfile>classDHBoxWidget.html</anchorfile>
      <anchor>a0ac4da3eabc56d580e11d256d05c0113</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DHBoxWidget</name>
    <filename>classDtk_1_1Widget_1_1DHBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DHeaderLine</name>
    <filename>classDHeaderLine.html</filename>
    <base>DBaseLine</base>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDHeaderLine.html</anchorfile>
      <anchor>af67d950ff2a59401a6e44013e22a244c</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classDHeaderLine.html</anchorfile>
      <anchor>a512cd9a86037b3cb70a5ad1b7d8bcbe0</anchor>
      <arglist>(QWidget *content)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>title</name>
      <anchorfile>classDHeaderLine.html</anchorfile>
      <anchor>a6058870ba9c4efc22c6b1abfa05381e7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DHeaderLine</name>
    <filename>classDtk_1_1Widget_1_1DHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>DHeaderViewExample</name>
    <filename>classDHeaderViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DHiDPIHelper</name>
    <filename>classDHiDPIHelper.html</filename>
    <member kind="function" static="yes">
      <type>static QPixmap</type>
      <name>loadNxPixmap</name>
      <anchorfile>classDHiDPIHelper.html</anchorfile>
      <anchor>a1253c2f29100a572e4b681e2183ea3a2</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DHiDPIHelper</name>
    <filename>classDtk_1_1Widget_1_1DHiDPIHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DHorizontalLine</name>
    <filename>classDHorizontalLine.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>DHorizontalLineExample</name>
    <filename>classDHorizontalLineExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DialogExampleWindow</name>
    <filename>classDialogExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DialogTitleBar</name>
    <filename>classDialogTitleBar.html</filename>
  </compound>
  <compound kind="class">
    <name>DIcon</name>
    <filename>classDIcon.html</filename>
    <base>QIcon</base>
    <member kind="function">
      <type>QPixmap</type>
      <name>pixmap</name>
      <anchorfile>classDIcon.html</anchorfile>
      <anchor>a3a6f361f26375942b0c4e759e4778b34</anchor>
      <arglist>(const QSize &amp;size, qreal devicePixelRatio, Mode mode=Normal, State state=Off)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DIconButton</name>
    <filename>classDIconButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="slot">
      <type>void</type>
      <name>setFlat</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a3536d66463fdab86d7ed86361e074092</anchor>
      <arglist>(bool flat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DIconButton</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a4b7ecb018499c41559e74d4d484b08fb</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a7b038759d1d45a329f556cc00d857973</anchor>
      <arglist>(const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a8aea02b46bf40a044f8ce1cc3e778626</anchor>
      <arglist>(QStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIcon</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>a41c563306065adafeb63ded24c80e44f</anchor>
      <arglist>(DStyle::StandardPixmap iconType)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>ab7f787e8752b8d0f88c02f8aec2fc3ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFlat</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>aa2662ada83b270302e3cf18c4dca70ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewNotification</name>
      <anchorfile>classDIconButton.html</anchorfile>
      <anchor>aa29eb954631d8d0c88fa312fcd7560c0</anchor>
      <arglist>(const bool set_new)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DIconButtonExample</name>
    <filename>classDIconButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DIconButtonPrivate</name>
    <filename>classDIconButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DImageButton</name>
    <filename>classDtk_1_1Widget_1_1DImageButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageButtonPrivate</name>
    <filename>classDImageButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageCapture</name>
    <filename>classDImageCapture.html</filename>
    <member kind="slot">
      <type>int</type>
      <name>captureToFile</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>abd6d319f9ca241815165e26f9cbfdc4e</anchor>
      <arglist>(const QString &amp;location=QString())</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>capture</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>ab15ea9e234c1d58b64c2a1e3f558783a</anchor>
      <arglist>(const QString &amp;location=QString())</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>errorChanged</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a78583cbb20ec6739b87a18cb943df537</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>errorOccurred</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>afb03bcf8abe90da86a31d327956b8bbc</anchor>
      <arglist>(int id, DImageCapture::Error error, const QString &amp;errorString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>readyForCaptureChanged</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a4e249f3394eea407b3ba26de54946358</anchor>
      <arglist>(bool ready)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>metaDataChanged</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a72b0d8a7d179bea5ed898e4940afb83c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fileFormatChanged</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a249f66237029b66ba1523802476eafe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>qualityChanged</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a63e3a4b1101c0421762c20ecb4a5eb74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>resolutionChanged</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>aff1b27864ca14ae3d5db68e66a8f4776</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailable</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a0133735fd6aedbd0c2cdfeab94b24b58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DMediaCaptureSession *</type>
      <name>captureSession</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a84839e42fbbabeb9baa06c6e350b2eec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>error</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a3db007fba84431ef91b1860c264600ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a22b5febf75b34024db26a9a0331bff08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyForCapture</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a04659513b164b95045f1be1b92359d73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FileFormat</type>
      <name>fileFormat</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>ae55d6ddb266c90c742e3bbfef41bf402</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileFormat</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>aca1e284d6a2098328796ba0829baf152</anchor>
      <arglist>(FileFormat format)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>resolution</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a803ca2098e5993644e9fd54213f3bfa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResolution</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a78ffebaf2d9961cdad4701ffa8577577</anchor>
      <arglist>(const QSize &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResolution</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a02694ca6e79951898c93463eac5ca643</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>Quality</type>
      <name>quality</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>aa38ce988753b595b7dd7f40b4471fd68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuality</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a01440ecfd6ac2792cf6f1ce3b0b7fa0a</anchor>
      <arglist>(Quality quality)</arglist>
    </member>
    <member kind="function">
      <type>DMediaMetaData</type>
      <name>metaData</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>afdce7692d88f732b5dd17c1021b6040e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetaData</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>ab9b04525ce9f29ce7b6ae868ecf939b4</anchor>
      <arglist>(const DMediaMetaData &amp;metaData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaData</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a1135d0b836de4270d542f1c2c64b1fcb</anchor>
      <arglist>(const DMediaMetaData &amp;metaData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; FileFormat &gt;</type>
      <name>supportedFormats</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>abf48b986c80a1f0441f1962e6ff6c22e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>fileFormatName</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a7c49a867e41161dff8c0070f5ac2386c</anchor>
      <arglist>(FileFormat f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>fileFormatDescription</name>
      <anchorfile>classDImageCapture.html</anchorfile>
      <anchor>a53f4737148bf5a2f81a062313f73ec29</anchor>
      <arglist>(FileFormat f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DImageCapture</name>
    <filename>classDtk_1_1Multimedia_1_1DImageCapture.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageCapturePrivate</name>
    <filename>classDImageCapturePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DImageHandler</name>
    <filename>classDImageHandler.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DImageHandler</name>
    <filename>classDtk_1_1Gui_1_1DImageHandler.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageHandlerPrivate</name>
    <filename>classDImageHandlerPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DImageViewer</name>
    <filename>classDImageViewer.html</filename>
    <base>QGraphicsView</base>
    <member kind="signal">
      <type>void</type>
      <name>imageChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ac5adf77bc60e4fa05e0dfe0528c48b75</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>fileNameChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ae9f427a7f4a3f8ea2eed2cc066bb1c6e</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>scaleFactorChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a852767d919704c91452113be4f12efd1</anchor>
      <arglist>(qreal scaleFactor)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rotateAngleChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a9e16d6faaeb51162ca02c8aacc28df7a</anchor>
      <arglist>(int angle)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>transformChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a9adcd16430cf68d357543df3b37b1c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>requestPreviousImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ae92f05ec00f3fd159d0f53f6b2e79433</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>requestNextImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a47bd7ea7e2225f19350b774b15fb1194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cropImageChanged</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a0d31ad7447de85145bae738938d9fb9e</anchor>
      <arglist>(const QRect &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>adbc9948a15ea14d084ffb8ef9e1c0cf5</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>aa3203939333926e7705f7fb90139d224</anchor>
      <arglist>(const QImage &amp;image, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a9e8aedfca1e7d39ffd29dd4a96e232d3</anchor>
      <arglist>(const QString &amp;fileName, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DImageViewer</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a7f69d0ec70e9ffe922de9b710bed1bc9</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>QImage</type>
      <name>image</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ae504ac1cbe5ca720cb540f4da4b2c159</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a6d167a1a2cc7a1cb6f625da26ae72529</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a4514160d5b6e71bfebfd067b87fe7ab9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>aa5fcaca1acd5650274d3f571c12840bd</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>scaleFactor</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>acecfbd6208cd75f626392a6f495a9742</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScaleFactor</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a4893b464ce2e23a612fc28881a2b6c7a</anchor>
      <arglist>(qreal factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>af7137e46d7f4e0c69b28ec09d64110be</anchor>
      <arglist>(qreal factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autoFitImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>acaa14ce4c5e206b91c7710352c739892</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fitToWidget</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a896a3a26375b304ce29d64bd00900ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fitNormalSize</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a62bca7f91922d48987d199c9eca8c7dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateClockwise</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a108f9247ca10e0ae82445039de16d807</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotateCounterclockwise</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a77cfe6d6278dc4b6ec0b173ec2f72be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rotateAngle</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a1db4d3b714713570151cf585f403cc49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRotateAngle</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a6225fb828157ffcd9ba72a92c2296eff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>ad9467f063385e675c8d51e2ce32c0bf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>centerOn</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a5562e20850a10a9fa5cbd27aa1468193</anchor>
      <arglist>(qreal x, qreal y)</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>visibleImageRect</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a4b5f5f1e5762ff894c735195349aa113</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>scaleAtPoint</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a56d0e89d9c4e3329499450ba11a625b5</anchor>
      <arglist>(QPoint pos, qreal factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginCropImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a8adeb14830f706c5f2a2a6236ecb6fd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endCropImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a663b36c3b49e8480bbdca4180f6e2659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCropImage</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a8b4d6a4b3415a5233e20006bd1eafedf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCropAspectRatio</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a7ea61df176b60bc48e4ecdecc9b595c8</anchor>
      <arglist>(qreal w, qreal h)</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>cropImageRect</name>
      <anchorfile>classDImageViewer.html</anchorfile>
      <anchor>a761323a5e0197ee0459d41ef9aa7a5b1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DImageViewer</name>
    <filename>classDtk_1_1Widget_1_1DImageViewer.html</filename>
  </compound>
  <compound kind="class">
    <name>DImageViewerPrivate</name>
    <filename>classDImageViewerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DImageViewerPrivate</name>
    <filename>classDtk_1_1Widget_1_1DImageViewerPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>dimminfo</name>
    <filename>structdimminfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>DNetDevice::DInetAddr4</name>
    <filename>structDNetDevice_1_1DInetAddr4.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>family</name>
      <anchorfile>structDNetDevice_1_1DInetAddr4.html</anchorfile>
      <anchor>af1958d7c1b78a390f403ba24af75b158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>addr</name>
      <anchorfile>structDNetDevice_1_1DInetAddr4.html</anchorfile>
      <anchor>a8e166cd7adff620696d12c6fd5f5fd42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>mask</name>
      <anchorfile>structDNetDevice_1_1DInetAddr4.html</anchorfile>
      <anchor>ae882e21ce84ba643d736dd3117a99a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>bcast</name>
      <anchorfile>structDNetDevice_1_1DInetAddr4.html</anchorfile>
      <anchor>a602db9095814fbfda77cb6c619e1b127</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DNetDevice::DInetAddr4</name>
    <filename>structDtk_1_1Device_1_1DNetDevice_1_1DInetAddr4.html</filename>
  </compound>
  <compound kind="struct">
    <name>DNetDevice::DInetAddr6</name>
    <filename>structDNetDevice_1_1DInetAddr6.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>family</name>
      <anchorfile>structDNetDevice_1_1DInetAddr6.html</anchorfile>
      <anchor>ac5fcb5cef8b363356db1665e39cbba75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>addr</name>
      <anchorfile>structDNetDevice_1_1DInetAddr6.html</anchorfile>
      <anchor>ad76b2cb3105d8ea050162ad0249decfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>prefixlen</name>
      <anchorfile>structDNetDevice_1_1DInetAddr6.html</anchorfile>
      <anchor>ae118847869d3dfcb81ad844d09591292</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scope</name>
      <anchorfile>structDNetDevice_1_1DInetAddr6.html</anchorfile>
      <anchor>a09864fa880553b9396633895a03bda8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DNetDevice::DInetAddr6</name>
    <filename>structDtk_1_1Device_1_1DNetDevice_1_1DInetAddr6.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDevice</name>
    <filename>classDInputDevice.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDInputDevice.html</anchorfile>
      <anchor>aec59260794e3d271b48551ba873ffdc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDInputDevice.html</anchorfile>
      <anchor>aa54d60104070384713076d720aa2d47a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDInputDevice.html</anchorfile>
      <anchor>a31765451caa9ce1946d470bc89bda5cf</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDInputDevice.html</anchorfile>
      <anchor>afa4c27db2de03840dd19b0ef9455bfc7</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>interface</name>
      <anchorfile>classDInputDevice.html</anchorfile>
      <anchor>a5457c21fb28bcfc487676f6df34487ef</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>driver</name>
      <anchorfile>classDInputDevice.html</anchorfile>
      <anchor>a9ffd7f32201059fdf31b31331de06ff4</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDevice</name>
    <filename>classDtk_1_1Device_1_1DInputDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceGeneric</name>
    <filename>classDInputDeviceGeneric.html</filename>
    <base>QObject</base>
    <member kind="slot" virtualness="virtual">
      <type>virtual DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a84f693f1f875de24e59743d18c87a494</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enabledChanged</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a0683fef7130787cb46b3105e42887586</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual quint32</type>
      <name>id</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a79ab4d2699c890035944768d17088c7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QString</type>
      <name>name</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>aaefe08fac558b2c1c80a065ae5930898</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DeviceType</type>
      <name>type</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a4d986bb7c54e291bb7555d163bf6db0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>enabled</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a34dfdec44833dccb29385ca0ff80040c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DInputDeviceGeneric</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a7b0c300ef0c52014432cdb43336626d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setId</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a783a76d652e3db5d03deb89f16e01fe4</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setName</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>aab0de9ee8690e7a0c20d2a6d8ec20ddd</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setType</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a8b9a0df5cd9261db6ffa555bf5de7eaf</anchor>
      <arglist>(DeviceType type)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>aa8a410ad5fffa56a9ff80690e06935fe</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setDeviceInfo</name>
      <anchorfile>classDInputDeviceGeneric.html</anchorfile>
      <anchor>a2043407fde683e4b96eaa4a7cd441021</anchor>
      <arglist>(const DeviceInfo &amp;info)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceGeneric</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceGeneric.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceGenericPrivate</name>
    <filename>classDInputDeviceGenericPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceKeyboard</name>
    <filename>classDInputDeviceKeyboard.html</filename>
    <base>DInputDeviceGeneric</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDInputDeviceKeyboard.html</anchorfile>
      <anchor>a4d49626605ee1c623ca087e633d59b19</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DInputDeviceKeyboard</name>
      <anchorfile>classDInputDeviceKeyboard.html</anchorfile>
      <anchor>ae477b9564d1b5597581da67c26a4d191</anchor>
      <arglist>(const DeviceInfo &amp;info=DeviceInfoInitializer, bool enabled=true, QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceKeyboard</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceKeyboard.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceKeyboardPrivate</name>
    <filename>classDInputDeviceKeyboardPrivate.html</filename>
    <base>DInputDeviceGenericPrivate</base>
  </compound>
  <compound kind="class">
    <name>DInputDeviceManager</name>
    <filename>classDInputDeviceManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; DInputDevicePtr &gt;</type>
      <name>createDevice</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>a712ed0a29d4bd24e4dd1929f991459a2</anchor>
      <arglist>(const DeviceInfo &amp;info)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; DInputSettingPtr &gt;</type>
      <name>setting</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>a800be55a5a2f35473a748a2baca51036</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>a5ca1089e0e72eff09c94958f971dcf95</anchor>
      <arglist>(const DeviceInfo &amp;device)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>a65b04a5e0916d708e1155f9db3d88253</anchor>
      <arglist>(const DeviceInfo &amp;device)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DInputDeviceManager</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>a4872ff0fed5ac070e744859744b9a19a</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DInputDeviceManager</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>ab2233abcbe80697900716e5aa1eedcc0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>DInputDeviceInfoList</type>
      <name>deviceInfos</name>
      <anchorfile>classDInputDeviceManager.html</anchorfile>
      <anchor>a2f1c02956417c342bb6b37b319211917</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceManager</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceManagerPrivate</name>
    <filename>classDInputDeviceManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceMouse</name>
    <filename>classDInputDeviceMouse.html</filename>
    <base>DInputDevicePointer</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>acc63fca246532feced56d7b093bea9c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>naturalScrollChanged</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a7f52dbb5517266d390f5544d8ea2ceac</anchor>
      <arglist>(bool naturalScroll)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>middleButtonEmulationChanged</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a965cbd588eef4d7ad6da9192f72533d8</anchor>
      <arglist>(bool emulation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>naturalScroll</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a0790cf1ff185866fdbdb5e173b4d1c7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>middleButtonEmulation</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>ab8d504ba004b46d78ed01747d891b9c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNaturalScroll</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a2379883845e69a3f4d33e105c321c2b5</anchor>
      <arglist>(bool naturalScroll)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMiddleButtonEmulation</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a968e7fb380e55b79606a547c661fb481</anchor>
      <arglist>(bool middleButtonEmulation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>leftHanded</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a168513aa5864e4a23a7e1c44d9cec761</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ScrollMethod</type>
      <name>scrollMethod</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>ae9c7416728743b2588fb2f1f801d51a3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>AccelerationProfile</type>
      <name>accelerationProfile</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a6b916e90a211c12232947c63a1bf7f65</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>accelerationSpeed</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>ac77c49d376b206e2f499390e479d03d4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftHanded</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>aa6ab2d62f4da53c6c81363dd2ac9385b</anchor>
      <arglist>(bool leftHanded) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrollMethod</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a356d62fd31cb927b23c6722f552a1b6f</anchor>
      <arglist>(ScrollMethod method) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationProfile</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a699cc5eec06ebcfb5a248c6cbb94752c</anchor>
      <arglist>(AccelerationProfile profile) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationSpeed</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a922e8e5fff602ecbb7f9d39c8107e2aa</anchor>
      <arglist>(double speed) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DInputDeviceMouse</name>
      <anchorfile>classDInputDeviceMouse.html</anchorfile>
      <anchor>a549e1021a8cedc9cbf306d146ca3a498</anchor>
      <arglist>(const DeviceInfo &amp;info=DeviceInfoInitializer, bool enabled=true, QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceMouse</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceMouse.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceMousePrivate</name>
    <filename>classDInputDeviceMousePrivate.html</filename>
    <base>DInputDevicePointerPrivate</base>
  </compound>
  <compound kind="class">
    <name>DInputDevicePointer</name>
    <filename>classDInputDevicePointer.html</filename>
    <base>DInputDeviceGeneric</base>
    <member kind="signal">
      <type>void</type>
      <name>leftHandedChanged</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a9d532949982c9433950b018b384dc9a3</anchor>
      <arglist>(bool leftHanded)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>scrollMethodChanged</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>ad0e5f59b61e03f2e3a002038c124de43</anchor>
      <arglist>(ScrollMethod method)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>accelerationProfileChanged</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a6eb46eba52e1f75f9ccb442ad812c50b</anchor>
      <arglist>(AccelerationProfile profile)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>accelerationSpeedChanged</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a681d822429cb5dfd0f72d8e64e5381bb</anchor>
      <arglist>(double speed)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>leftHanded</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>afa0f4e308a1381c6881a193afe860421</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScrollMethod</type>
      <name>scrollMethod</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>aa18058473ac428b863e2433ce1741bf3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AccelerationProfile</type>
      <name>accelerationProfile</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a9f016c206ba641a4005d5033944e240c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>accelerationSpeed</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a5c1b4d02744f0c8bfc9d00f3f885c2f9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLeftHanded</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>ae08ccae91a6145c7af9af32240fbbed3</anchor>
      <arglist>(bool leftHanded)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setScrollMethod</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a3d2a403435fd2fe8b2108c5498d1bbd0</anchor>
      <arglist>(ScrollMethod scrollMethod)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationProfile</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>ac4a0621cbcca85944b04e1a88c7047c8</anchor>
      <arglist>(AccelerationProfile accelerationProfile)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAccelerationSpeed</name>
      <anchorfile>classDInputDevicePointer.html</anchorfile>
      <anchor>a8bad44a8e115b8dea3751f8d2cf08848</anchor>
      <arglist>(double accelerationSpeed)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDevicePointer</name>
    <filename>classDtk_1_1Device_1_1DInputDevicePointer.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDevicePointerPrivate</name>
    <filename>classDInputDevicePointerPrivate.html</filename>
    <base>DInputDeviceGenericPrivate</base>
  </compound>
  <compound kind="class">
    <name>DInputDevicePrivate</name>
    <filename>classDInputDevicePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceSetting</name>
    <filename>classDInputDeviceSetting.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; quint32 &gt;</type>
      <name>pressureSensitivity</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a33e585cafccfa4a089340efdc727937b</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; quint32 &gt;</type>
      <name>rawSampleSize</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ab7b8b928f5bbaef4fc8d427846fe7206</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; quint32 &gt;</type>
      <name>pressureThreshold</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>afbf065103833327cf457e145d824170e</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>forceProportions</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a5bde9654965178e86a3e83a4e30c7381</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QString &gt;</type>
      <name>mapOutput</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a6ca83368a4320f2b17c413d8ca354c95</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>mouseEnterRemap</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a1fa6f5f528700ac9945cfddf566468c6</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; quint32 &gt;</type>
      <name>suppress</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ad7c3216586ee321cf588e835ca757ef6</anchor>
      <arglist>(quint32 id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setPressureSensitivity</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ad74dabf01e133c8276d61478600fb41c</anchor>
      <arglist>(quint32 id, quint32 sensitivity)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setRawSampleSize</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aeee342dff64a1ff71c6ca6075b4d991b</anchor>
      <arglist>(quint32 id, quint32 size)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setPressureThreshold</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a4e4a0583400a0013fc823df27b5a1479</anchor>
      <arglist>(quint32 id, quint32 threshold)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setForceProportions</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aff5367dae157dfae5e8eb4a15fc867b3</anchor>
      <arglist>(quint32 id, bool force)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setMouseEnterRemap</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a7d4aede8fbcd8022e876cce677fe9a05</anchor>
      <arglist>(quint32 id, bool remap)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setSuppress</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ae4e545f32c715d313db35ee24db53ba2</anchor>
      <arglist>(quint32 id, quint32 suppress)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; DInputKeyAction &gt;</type>
      <name>keymap</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ab668e61c36f3085ba2eabc4836d3f4bf</anchor>
      <arglist>(quint32 id, DInputKey key)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setKeymap</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ab342640ba26a539cde0b35a698ee29bb</anchor>
      <arglist>(quint32 id, DInputKey key, DInputKeyAction action)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>disableTouchPadWhileMouseChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a212d793a42a41e48795257858bcd41fb</anchor>
      <arglist>(bool disabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>doubleClickIntervalChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a48197cceb41ee2ac2bf83b8c1586da0a</anchor>
      <arglist>(quint32 interval)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragThresholdChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a46e29f34f00c1d51f272747ec9cbede1</anchor>
      <arglist>(quint32 distance)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>repeatEnabledChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aecd9b64014a7ac3f6e2b29808de7a9d0</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>repeatDelayChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a4353eaa12d5d34172069ef345f4a5341</anchor>
      <arglist>(quint32 delay)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>repeatIntervalChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a985fcdd50bdb596e50ecb365de4fe724</anchor>
      <arglist>(quint32 interval)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cursorBlinkIntervalChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aee6b82601e143a1f2e002d403d4fbed2</anchor>
      <arglist>(qint32 interval)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wheelSpeedChanged</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a02b78697bf0fe53a5cec62d7199c4913</anchor>
      <arglist>(quint32 speed)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableTouchPadWhileMouse</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ab245c8d5e36000769608f9a139d09c88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>doubleClickInterval</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aacab6018e57e4bb4f0e0af8d54a6908d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>dragThreshold</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ac533d35024f1e9e5796413372984a0f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>repeatEnabled</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a42dcd59f4f09b43b64e8d235a3c141d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>repeatDelay</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aa5d8ee32c01ee65613acdb86114475ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>repeatInterval</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aaf049b4088365fa9a624638619819c4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>cursorBlinkInterval</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>aa3ffc278504a60151fdeb4be765e5696</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>wheelSpeed</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a61124fd3c89cd7d29669da2ff9da81a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisableTouchPadWhileMouse</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>adf2c73b62fcf17c06f05d5b98923879f</anchor>
      <arglist>(bool disabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoubleClickInterval</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ac04fc1af17134e26f2066131d6923542</anchor>
      <arglist>(quint32 interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDragThreshold</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>adaa448d636203d81410771e1e2beed3c</anchor>
      <arglist>(quint32 distance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRepeatEnabled</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>ae2916b147b022fc65e333620ad8e5370</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRepeatDelay</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a183f0aa5401abe78d326b9beb2972192</anchor>
      <arglist>(quint32 delay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRepeatInterval</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a39f81f8ec765f486bb8fe39378239cdc</anchor>
      <arglist>(quint32 interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursorBlinkInterval</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a59e8212b18401866fb58453abb588c57</anchor>
      <arglist>(qint32 interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelSpeed</name>
      <anchorfile>classDInputDeviceSetting.html</anchorfile>
      <anchor>a7c2e68d8a4712a4d36e210b73d907fe5</anchor>
      <arglist>(quint32 speed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceSetting</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceSetting.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceSettingPrivate</name>
    <filename>classDInputDeviceSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceTablet</name>
    <filename>classDInputDeviceTablet.html</filename>
    <base>DInputDevicePointer</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a8bc026d3291b69f2166e382bceac45df</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cursorModeChanged</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>aad5325462113a141412daccfb3668742</anchor>
      <arglist>(bool cursorMode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cursorMode</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>aadf5f5e8b53340e2d424b1c24517ba8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCursorMode</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a097592de51c13354480d6b376232cefe</anchor>
      <arglist>(bool cursorMode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>leftHanded</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a6863be4bfd1e5f3ce317d31e1f0c4720</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ScrollMethod</type>
      <name>scrollMethod</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a9eb0434fcb88b62020ebab3841ec97ad</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>AccelerationProfile</type>
      <name>accelerationProfile</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>aab1da8e14a015e8c58fd6e0f0aac5442</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>accelerationSpeed</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a3cc81b9132b450c7affb95a5567dc2e5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftHanded</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a7d35cb8e82cee1a77942032634234e74</anchor>
      <arglist>(bool leftHanded) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrollMethod</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a15b4498c6b12b445b87eca4778c0bd4f</anchor>
      <arglist>(ScrollMethod scrollMethod) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationProfile</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>a14179ce484dc106de05ac31171eb21b6</anchor>
      <arglist>(AccelerationProfile accelerationProfile) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationSpeed</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>ac8610b3e08310e87770e951a9e83b3eb</anchor>
      <arglist>(double accelerationSpeed) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DInputDeviceTablet</name>
      <anchorfile>classDInputDeviceTablet.html</anchorfile>
      <anchor>af9fa3d9c8d63ace0ddedbd0fdc4cb6e4</anchor>
      <arglist>(const DeviceInfo &amp;info=DeviceInfoInitializer, bool enabled=true, QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceTablet</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceTablet.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceTabletPrivate</name>
    <filename>classDInputDeviceTabletPrivate.html</filename>
    <base>DInputDevicePointerPrivate</base>
  </compound>
  <compound kind="class">
    <name>DInputDeviceTouchPad</name>
    <filename>classDInputDeviceTouchPad.html</filename>
    <base>DInputDevicePointer</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>ae090482d60ca53d7db0e809feff26fd1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>enable</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a32a970a0135740ef5c1947c6ebd2845a</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>disableWhileTypingChanged</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a91db2e09eb22a91935d8b32520cdd19e</anchor>
      <arglist>(bool disableWhileTyping)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>naturalScrollChanged</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>ab6df68db5f6955e3cf565a45828ecba0</anchor>
      <arglist>(bool naturalScroll)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tapToClickChanged</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a0a63600b1bf79b9d1f903c73003e06d3</anchor>
      <arglist>(bool tapToClick)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableWhileTyping</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a2e66a48799bb4a58f6c5d7f1ca3f4d3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>naturalScroll</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a9e7c81f0ac9286db510a7692f23e28dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tapToClick</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a21750ecc818a5c7973d61c5f15a2bdd6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisableWhileTyping</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a2a3a2928fc383645bc1ac13034c59ba3</anchor>
      <arglist>(bool disableWhileTyping)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNaturalScroll</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a28706a88035e369d4399cd200ac1cf8c</anchor>
      <arglist>(bool naturalScroll)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTapToClick</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a82bda3bacd824a33baeda2c5a4028f05</anchor>
      <arglist>(bool tapToClick)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a114454d5369d850f21038424b9f489eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>aa8aaddfef2aaddd94b0f07f8527992ff</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>leftHanded</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>ad52e5d35bf7dcf74157ea0a26c83b84c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ScrollMethod</type>
      <name>scrollMethod</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a7abddef4f56a8799f26b00ad92a1e233</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>AccelerationProfile</type>
      <name>accelerationProfile</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a76d3329dae583ccee3441b3d36e637d0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>accelerationSpeed</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>afc1cb4593d2457a70505dde8f559cc1a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftHanded</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>ad0deac8e7a6a9c4f22aa82c0dc4dffc9</anchor>
      <arglist>(bool leftHanded) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrollMethod</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>ab3792f28ea8864985b01e1159062ae05</anchor>
      <arglist>(ScrollMethod scrollMethod) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationProfile</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a40c83f771094b7ba4ef20f958abbd38d</anchor>
      <arglist>(AccelerationProfile accelerationProfile) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationSpeed</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a501a4e1710c0a6abc6b360b56d956f04</anchor>
      <arglist>(double accelerationSpeed) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DInputDeviceTouchPad</name>
      <anchorfile>classDInputDeviceTouchPad.html</anchorfile>
      <anchor>a1a3fd74eb7e430646069a3357647bd72</anchor>
      <arglist>(const DeviceInfo &amp;info=DeviceInfoInitializer, bool enabled=true, QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceTouchPad</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceTouchPad.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceTouchPadPrivate</name>
    <filename>classDInputDeviceTouchPadPrivate.html</filename>
    <base>DInputDevicePointerPrivate</base>
  </compound>
  <compound kind="class">
    <name>DInputDeviceTrackPoint</name>
    <filename>classDInputDeviceTrackPoint.html</filename>
    <base>DInputDevicePointer</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>ae2cbcfb6d927ece2ec651720a1965053</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>middleButtonEnabledChanged</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a1140ff39b19e67354a27d06ad5da18c8</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>middleButtonTimeoutChanged</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>ae8d1791326f7b8d68338b053fc1255d5</anchor>
      <arglist>(qint32 timeout)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wheelEmulationChanged</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a7f2e413f352cb7f3acace0e07693b96a</anchor>
      <arglist>(bool emulation)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wheelEmulationButtonChanged</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a228c4c22ac5855702a82155def8df778</anchor>
      <arglist>(qint32 button)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wheelEmulationTimeoutChanged</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a724dbe5f187c08ac61c81e5920972c74</anchor>
      <arglist>(qint32 timeout)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wheelHorizontalScrollChanged</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>ae5fb1813fa48eaacbc1f6b210bab626a</anchor>
      <arglist>(bool horizontalScroll)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>middleButtonEnabled</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>af4dd3b790c4f1227566d304694e09e9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>middleButtonTimeout</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a18b3c6f7ed828403cd6f4b2f2e98de71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wheelEmulation</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a29cf89fdbd4c7dfef26b3ab83cfd77b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>wheelEmulationButton</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>aef6325ed1b0b5a2f4891b33022dc8080</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>wheelEmulationTimeout</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>ad519c347973b2eaea94c2d66ae80b13d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wheelHorizontalScroll</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a2759f7cc82b4ab70700808c468526004</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMiddleButtonEnabled</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a1d03fc39f13b4ed3d89fc3a630fbce38</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMiddleButtonTimeout</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>af41ea4b31b562e10d66c0017782c28a1</anchor>
      <arglist>(qint32 timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelEmulation</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>ac609ccf8d95db67b456c7c21a645d609</anchor>
      <arglist>(bool emulation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelEmulationButton</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>abf1dcb531e59906076e55ce1832d6e9b</anchor>
      <arglist>(qint32 button)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelEmulationTimeout</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a505fed62536bf21a9fb527bd4c875659</anchor>
      <arglist>(qint32 timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWheelHorizontalScroll</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a33624064f5a4f4e6aa659c8170c9836a</anchor>
      <arglist>(bool horizontalScroll)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>leftHanded</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a61b16c7382afdf56b50a3ea5b77b25eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ScrollMethod</type>
      <name>scrollMethod</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>ae96c054621bd48f14d1c78acabf2a018</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>AccelerationProfile</type>
      <name>accelerationProfile</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a7f548a778124a2eb15f86d83a4872ffc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>accelerationSpeed</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a17afe64ab784ae347e2386c883b19662</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftHanded</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a8f1309919e211cfcb5c12a01f608e2b1</anchor>
      <arglist>(bool leftHanded) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrollMethod</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a36804d20b6d94e25d7e139c072b1766f</anchor>
      <arglist>(ScrollMethod scrollMethod) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationProfile</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a62c477de7b6905d58a72e0d2ea946a0a</anchor>
      <arglist>(AccelerationProfile accelerationProfile) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAccelerationSpeed</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a78487d44f2b101acc8b2fbf4e91ee295</anchor>
      <arglist>(double accelerationSpeed) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DInputDeviceTrackPoint</name>
      <anchorfile>classDInputDeviceTrackPoint.html</anchorfile>
      <anchor>a1b53f20019e3c4aa0e6b150899cbe622</anchor>
      <arglist>(const DeviceInfo &amp;info=DeviceInfoInitializer, bool enabled=true, QObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DInputDeviceTrackPoint</name>
    <filename>classDtk_1_1Device_1_1DInputDeviceTrackPoint.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDeviceTrackPointPrivate</name>
    <filename>classDInputDeviceTrackPointPrivate.html</filename>
    <base>DInputDevicePointerPrivate</base>
  </compound>
  <compound kind="class">
    <name>DInputDialog</name>
    <filename>classDInputDialog.html</filename>
    <base>DDialog</base>
    <member kind="signal">
      <type>void</type>
      <name>textValueChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ad769df7720e537b022250c5da3c4748a</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>textValueSelected</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a8801a2f0ebbbb972300b0bc029dfa88b</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>intValueChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a7dcb01a2055a92f73f28bd52ded9c8eb</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>intValueSelected</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2f8d95bd17d84bce18ebfd21da60554c</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>doubleValueChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a1d7b366aa802ec2038a12cd8eb649ff7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>doubleValueSelected</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a4a459da35e84d68fc35da3161d274619</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cancelButtonClicked</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a0257002ec6e733efdfc9976d37261170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>okButtonClicked</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ace16659ee46a80bcff67f0d251a23154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>comboBoxCurrentIndexChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aa83836ad4531b505209c5fcfe0a75ead</anchor>
      <arglist>(int comboBoxCurrentIndex)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>textAlertChanged</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a9e1403c1f28a68a4bdca359d2da5d364</anchor>
      <arglist>(bool textAlert)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DInputDialog</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a41f0769bb1b237eaeca37bccbfb9f67a</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setInputMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a84718d1b240dcd5697d1911ff32d7120</anchor>
      <arglist>(InputMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setTextValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aa6d3c6a5b30c81e4921ff4258cc6e190</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setTextEchoMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a702459e67510adea50ab6393c39510bf</anchor>
      <arglist>(QLineEdit::EchoMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setComboBoxEditable</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aae99f94b7de24c9a4f84a751025b762d</anchor>
      <arglist>(bool editable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isComboBoxEditable</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a5a0e80801fed5df8855518f0c06323e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setComboBoxItems</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2fc69761a9278213b66c139be6e79e17</anchor>
      <arglist>(const QStringList &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>comboBoxItems</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a27e8971da9441fda6a37c20d9b11b74b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setComboBoxCurrentIndex</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ab1458cc918cdf17bb8e8730da6c303c3</anchor>
      <arglist>(int comboBoxCurrentIndex)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a10b8273a5cc242d11e80483ea5582b8a</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a4d2753c773ec37bcfbbac66c1ba16fbe</anchor>
      <arglist>(int min)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>af574779c3634c521ac31e44ae546bbc8</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntRange</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a525965553f46ce357993bf050fa02986</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setIntStep</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a8b4713eca44de101c70bbef8e447a347</anchor>
      <arglist>(int step)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a61ff7ac9bff8bbf7e1501fa9fbe026f7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a7b6f958a36ed1714fa9cbaf0ab76d6cb</anchor>
      <arglist>(double min)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2e92d558c0f5c97da1e035538c5dba90</anchor>
      <arglist>(double max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleRange</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>acbf36dce83ea00742c6543412dd2df73</anchor>
      <arglist>(double min, double max)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setDoubleDecimals</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ad087eaf722f4487a1a1028cbbc010c1f</anchor>
      <arglist>(int decimals)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setOkButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ab5329f2e3b225b5996d23b2b222757b7</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setOkButtonEnabled</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>adb2842733aa295ac906e2c7304ff871c</anchor>
      <arglist>(const bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>okButtonIsEnabled</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a37d6cbac6867fde5723881a90cbc0393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setCancelButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a46dc13635044797abbabe5e782895c24</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Q_SLOT void</type>
      <name>setTextAlert</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>acb63eac5ab88b5779a40fb716f499a50</anchor>
      <arglist>(bool textAlert)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTextAlert</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a02457f7495e17b481a549a6e23b3f7d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>getText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a20f55c03a0206c5e430f7125bfdbb8a3</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, QLineEdit::EchoMode echo=QLineEdit::Normal, const QString &amp;text=QString(), bool *ok=0, Qt::WindowFlags flags=0, Qt::InputMethodHints inputMethodHints=Qt::ImhNone)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>getItem</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ad4967aae2a0b8aade4884d3a3312b0ea</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, const QStringList &amp;items, int current=0, bool editable=true, bool *ok=0, Qt::WindowFlags flags=0, Qt::InputMethodHints inputMethodHints=Qt::ImhNone)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getInt</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a6b20934ad53a7621f5b96b1962d1513f</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, int value=0, int minValue=-2147483647, int maxValue=2147483647, int step=1, bool *ok=0, Qt::WindowFlags flags=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getDouble</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a6f1a1c3cd2bdfbc6cc042fa6474fd4d4</anchor>
      <arglist>(QWidget *parent, const QString &amp;title, const QString &amp;message, double value=0, double minValue=-2147483647, double maxValue=2147483647, int decimals=1, bool *ok=0, Qt::WindowFlags flags=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a26f453e1d5f83b7f06f28dd044259b72</anchor>
      <arglist>(QShowEvent *e)</arglist>
    </member>
    <member kind="property">
      <type>InputMode</type>
      <name>inputMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a979b3976777ba1ecc121e6dd67a1ca8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>textValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ac7dc0821c33ec8adaa3b1c0454c94e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a884c8f1b31c1ba76dd45c9231e2a7284</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>doubleValue</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a80797c2d1965485b989adf829ddda801</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QLineEdit::EchoMode</type>
      <name>textEchoMode</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a7adfd9a04ce831c7f1d030f337dd80f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>comboBoxEditable</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>aa62d805ddb6ca08cd2fe684b28e2c2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QStringList</type>
      <name>comboBoxItems</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a429b2389094f2ebba0ff3e8fc2c42e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>comboBoxCurrentIndex</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a61f33a14adf944bf5802403680e5bbc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a41156a2fefb1790727dc93895a8cf6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ade7da6e4faebe51bdea4b8f4db5cb020</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>intStep</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a61f80f8e07deeb51cb809318dff840aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>double</type>
      <name>doubleMinimum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a9b1b5df259c209749267dba8ae12cfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>double</type>
      <name>doubleMaximum</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a9292dc8f198b3cd558d84b30415b0b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>doubleDecimals</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>ae3a5fcfc08276cfe3002e0a06efb827f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>okButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a5d1e14f85c53590a13e7cdf8af2e411b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>cancelButtonText</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a86683a9254c4326adcea873d412bc8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>textAlert</name>
      <anchorfile>classDInputDialog.html</anchorfile>
      <anchor>a2fe552c4bc6af78fdeb9febff7dc12cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DInputDialog</name>
    <filename>classDtk_1_1Widget_1_1DInputDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DInputDialogPrivate</name>
    <filename>classDInputDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
  </compound>
  <compound kind="class">
    <name>DIPConflictCheck</name>
    <filename>classDIPConflictCheck.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; QByteArray &gt;</type>
      <name>requestIPConflictCheck</name>
      <anchorfile>classDIPConflictCheck.html</anchorfile>
      <anchor>a7e5eaa15c5c007e8482fe0704583133a</anchor>
      <arglist>(const QByteArray &amp;ip, const QByteArray &amp;ifc) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>IPConflict</name>
      <anchorfile>classDIPConflictCheck.html</anchorfile>
      <anchor>a6cd7ac882eb7492d56c5be874584c080</anchor>
      <arglist>(const QByteArray &amp;ip, const QByteArray &amp;smac, const QByteArray &amp;dmac)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DIPConflictCheck</name>
    <filename>classDtk_1_1NetworkManager_1_1DIPConflictCheck.html</filename>
  </compound>
  <compound kind="class">
    <name>DIPConflictCheckInterface</name>
    <filename>classDIPConflictCheckInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DIPConflictCheckPrivate</name>
    <filename>classDIPConflictCheckPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DIPv4Config</name>
    <filename>classDIPv4Config.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>addressDataChanged</name>
      <anchorfile>classDIPv4Config.html</anchorfile>
      <anchor>a5eb6721241dab4fd66a9a473682c2d50</anchor>
      <arglist>(const QList&lt; Config &gt; &amp;addrs) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>nameserverDataChanged</name>
      <anchorfile>classDIPv4Config.html</anchorfile>
      <anchor>a0a7d4cc71ced0e62fc3cf4bdab951b80</anchor>
      <arglist>(const QList&lt; Config &gt; &amp;nameserverData) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gatewayChanged</name>
      <anchorfile>classDIPv4Config.html</anchorfile>
      <anchor>a47325abb51257cb77772b6d35096b1f2</anchor>
      <arglist>(const QHostAddress &amp;gateway)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Config &gt;</type>
      <name>addressData</name>
      <anchorfile>classDIPv4Config.html</anchorfile>
      <anchor>aa6f91e65adbf5aef07b28f3b8b45f576</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Config &gt;</type>
      <name>nameserverData</name>
      <anchorfile>classDIPv4Config.html</anchorfile>
      <anchor>a3dbb369d9efc26c0fe1fcfbbecaf2bc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QHostAddress</type>
      <name>gateway</name>
      <anchorfile>classDIPv4Config.html</anchorfile>
      <anchor>a634c121fbee91e8f21dc6ec3b6806452</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DIPv4Config</name>
    <filename>classDtk_1_1NetworkManager_1_1DIPv4Config.html</filename>
  </compound>
  <compound kind="class">
    <name>DIPv4ConfigInterface</name>
    <filename>classDIPv4ConfigInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DIPv4ConfigPrivate</name>
    <filename>classDIPv4ConfigPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DIpv4LineEdit</name>
    <filename>classDIpv4LineEdit.html</filename>
    <base>QLineEdit</base>
    <member kind="slot">
      <type>void</type>
      <name>setCursorPosition</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a977b42eb0f5262513c64ee3528143f80</anchor>
      <arglist>(int cursorPosition)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setReadOnly</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>af61f77ac0b905ebc9da40a2f12690ec9</anchor>
      <arglist>(bool readOnly)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setSelection</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a93fcc16a0cdc96902f6165068ce8c5e2</anchor>
      <arglist>(int start, int length)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>selectAll</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aa87f02ed688d7bd9d902fc94ef93257a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DIpv4LineEdit</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aa1bdce3f2644c91dad7c73b99ae28b03</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>displayText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ae23488ff0476599eb96e28094a8da934</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ae2a9cbf81b3853a37fd63c77a982ccd0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ac3acc4c9cba0200625e7335485c6884a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAcceptableInput</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aaeeb40433fd41c82153a7399e495ad61</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a926d3b426497e94173ee669f9280b118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>displayText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a5015c45f7e71257304aae6c86c13ca16</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>cursorPosition</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>aca3e0bd1d36a4bb00d3bd0415c2f2892</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a44a76cc4c8e721d83f771fa11bbb48cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>selectedText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a4d6a519104fa65a478b743d13756e419</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>acceptableInput</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>ac12fdfec17b40e055adf1b8ca9ee9f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>readOnly</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a09d29b84134d86df5129313799d34a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>placeholderText</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a7e4f79f8c948aa84fdb5d962bb9f5462</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>clearButtonEnabled</name>
      <anchorfile>classDIpv4LineEdit.html</anchorfile>
      <anchor>a696c521b66ed4b8f163605e685f4de88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DIpv4LineEdit</name>
    <filename>classDtk_1_1Widget_1_1DIpv4LineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DIpv4LineEditExample</name>
    <filename>classDIpv4LineEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DIpv4LineEditPrivate</name>
    <filename>classDIpv4LineEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DIpv4Setting</name>
    <filename>classDIpv4Setting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DIpv4SettingPrivate</name>
    <filename>classDIpv4SettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DIPv6Config</name>
    <filename>classDIPv6Config.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>addressDataChanged</name>
      <anchorfile>classDIPv6Config.html</anchorfile>
      <anchor>af36c8afd02d31fac94e64cf17d92bb6e</anchor>
      <arglist>(const QList&lt; Config &gt; &amp;addrs) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>nameserversChanged</name>
      <anchorfile>classDIPv6Config.html</anchorfile>
      <anchor>ab185051e8c99b0c9fab1f5e1f4d5718c</anchor>
      <arglist>(const QList&lt; QHostAddress &gt; &amp;nameserver) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>gatewayChanged</name>
      <anchorfile>classDIPv6Config.html</anchorfile>
      <anchor>a05da13acc72626d31a7f5135de850386</anchor>
      <arglist>(const QHostAddress &amp;gateway)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Config &gt;</type>
      <name>addressData</name>
      <anchorfile>classDIPv6Config.html</anchorfile>
      <anchor>ad84022d80eeab04e17ff89b6106920c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QHostAddress &gt;</type>
      <name>nameservers</name>
      <anchorfile>classDIPv6Config.html</anchorfile>
      <anchor>a02e1420319c2cacbb01af0f9fe6d140c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QHostAddress</type>
      <name>gateway</name>
      <anchorfile>classDIPv6Config.html</anchorfile>
      <anchor>a8070cbec5b1638ea8f890a2132cc1439</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DIPv6Config</name>
    <filename>classDtk_1_1NetworkManager_1_1DIPv6Config.html</filename>
  </compound>
  <compound kind="class">
    <name>DIPv6ConfigInterface</name>
    <filename>classDIPv6ConfigInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DIPv6ConfigPrivate</name>
    <filename>classDIPv6ConfigPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DIpv6Setting</name>
    <filename>classDIpv6Setting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DIpv6SettingPrivate</name>
    <filename>classDIpv6SettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DirImageEntry</name>
    <filename>classDirImageEntry.html</filename>
    <base>ImageEntry</base>
  </compound>
  <compound kind="struct">
    <name>disk_locn</name>
    <filename>structdisk__locn.html</filename>
  </compound>
  <compound kind="class">
    <name>DKbdBacklight</name>
    <filename>classDKbdBacklight.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; qint32 &gt;</type>
      <name>brightness</name>
      <anchorfile>classDKbdBacklight.html</anchorfile>
      <anchor>a8ea06ed961818572f1bd3b1454c5bb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; qint32 &gt;</type>
      <name>maxBrightness</name>
      <anchorfile>classDKbdBacklight.html</anchorfile>
      <anchor>af4d15d2868ac63ca404d46a3773d3c34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setBrightness</name>
      <anchorfile>classDKbdBacklight.html</anchorfile>
      <anchor>ac760d7ac321e247cf06d348fffcef2f1</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>brightnessChanged</name>
      <anchorfile>classDKbdBacklight.html</anchorfile>
      <anchor>aaa96af41a597a29d0fd3dbe40577ad2a</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>brightnessChangedWithSource</name>
      <anchorfile>classDKbdBacklight.html</anchorfile>
      <anchor>a235571118ba0d5c953c21630ae27651c</anchor>
      <arglist>(const qint32 value, const KbdSource &amp;source)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Power::DKbdBacklight</name>
    <filename>classDtk_1_1Power_1_1DKbdBacklight.html</filename>
  </compound>
  <compound kind="class">
    <name>DKbdBacklightPrivate</name>
    <filename>classDKbdBacklightPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DKeyboardMonitor</name>
    <filename>classDKeyboardMonitor.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="class">
    <name>DKeyLabel</name>
    <filename>classDKeyLabel.html</filename>
    <base>DFrame</base>
  </compound>
  <compound kind="class">
    <name>DKeySequenceEdit</name>
    <filename>classDKeySequenceEdit.html</filename>
    <base>QLineEdit</base>
    <member kind="function">
      <type></type>
      <name>DKeySequenceEdit</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>aa2731cd78f83eacc6b3ca6cf018e6850</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>ac5e9a193c460938590bd87eaec158b05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setKeySequence</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>a3f1d583885c468b23dc09ae39a74581d</anchor>
      <arglist>(const QKeySequence &amp;keySequence)</arglist>
    </member>
    <member kind="function">
      <type>QKeySequence</type>
      <name>keySequence</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>a3b5bf22efb4b5db597171d9af119658d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShortcutDirection</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>a3902f5d618d3a0b591dd0344b782da4f</anchor>
      <arglist>(Qt::AlignmentFlag alig)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getKeySequence</name>
      <anchorfile>classDKeySequenceEdit.html</anchorfile>
      <anchor>ac213cd6daff7e1670c4c66c2b86e6754</anchor>
      <arglist>(QKeySequence sequence)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DKeySequenceEditExample</name>
    <filename>classDKeySequenceEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DKeySequenceEditPrivate</name>
    <filename>classDKeySequenceEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DKeyWidget</name>
    <filename>classDKeyWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DLabel</name>
    <filename>classDLabel.html</filename>
    <base>QLabel</base>
    <member kind="function">
      <type></type>
      <name>DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>aebd85739449fc220e672188957def357</anchor>
      <arglist>(QWidget *parent=nullptr, Qt::WindowFlags f=Qt::WindowFlags())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a7e37df0447992113e4359a73196af957</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a42f69497d8e3bfc4d2da5d023743f647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundRole</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>ae346ec7bc4497e67570a1d781767d739</anchor>
      <arglist>(QPalette::ColorRole role)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundRole</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a9840bd489ac153b5e0d897d627c5f931</anchor>
      <arglist>(DPalette::ColorType color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElideMode</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a07f72f0f8c919151b3b6cbf9fbba00bd</anchor>
      <arglist>(Qt::TextElideMode elideMode)</arglist>
    </member>
    <member kind="function">
      <type>Qt::TextElideMode</type>
      <name>elideMode</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a37e9814b57c971e139170aed780a8b07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DLabel</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>ae1847c41881b10ec4ca2ef0622693794</anchor>
      <arglist>(DLabelPrivate &amp;dd, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initPainter</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>aeed6953db9b354e79079d1e7ee7b2b62</anchor>
      <arglist>(QPainter *painter) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDLabel.html</anchorfile>
      <anchor>a5060bb4ddf413f9fb9b43f14663883c0</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DLabel</name>
    <filename>classDtk_1_1Widget_1_1DLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>DLabelPrivate</name>
    <filename>classDLabelPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DLCDNumberExample</name>
    <filename>classDLCDNumberExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DLibFreeImage</name>
    <filename>classDLibFreeImage.html</filename>
  </compound>
  <compound kind="class">
    <name>DLineEdit</name>
    <filename>classDLineEdit.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DLineEdit</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>aa661aa34b08bca84ef7a8583cddec7c5</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a4943f717a676ec58518fe97062b1375d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>af36d555231707218d81f168e2a60d76d</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlertMessageAlignment</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a8f61255f0ca25a64471a1d5f7597501b</anchor>
      <arglist>(Qt::Alignment alignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAlertMessage</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>acbc07e19f725f662801abc33b5a6ef03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftWidgets</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a2cd0d182f8013c377d3f6a20509a44d3</anchor>
      <arglist>(const QList&lt; QWidget * &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightWidgets</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a5830ee05be2bfdacf212e3dffc741b5e</anchor>
      <arglist>(const QList&lt; QWidget * &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftWidgetsVisible</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a01a5c8614925a3d8752a98094eb41fd2</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightWidgetsVisible</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a1161ffbb92a1cf776d58a780674968a1</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClearButtonEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ac3317a78798534ac644f556f6cf5ba00</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClearButtonEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a0d800b8ca598dbdb14864ee3e4b08f4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setText</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a6036abbc33a908907499780173086f88</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>text</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>af888c2aea961ca10da95a3b4d27a9f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ae83af2a9df031205af1643ff94dfb033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit::EchoMode</type>
      <name>echoMode</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ada9469dda250396d22645fac55e4e8e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a075ce0174b4deaebedde2e1986709abf</anchor>
      <arglist>(QLineEdit::EchoMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContextMenuPolicy</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a1cbeabc4abbafa69e456313dbf30c1a7</anchor>
      <arglist>(Qt::ContextMenuPolicy policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>speechToTextIsEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a35b6cd2b01855df6aa4f5cf5420c6249</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeechToTextEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a207a440f3c5c644d63154fbe0e410655</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToSpeechIsEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>afead7a51be0ca44449d8472424a76e4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToSpeechEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a153666a079ff70d0dba9a647352baa8d</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToTranslateIsEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>ac16848a137c4699c5ece203940f9c528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToTranslateEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a1e62f8dc7a8acd1da88b5620cd50f609</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copyEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a53299af75ae1429adb396277d09162ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCopyEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>af3fe85e01d6be2afc6e260d02125b338</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cutEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a63d415acd3fbe55919f20931675541eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCutEnabled</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a843154136c3cf7fd206098422d41eb19</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>aa853c3d36da7655ec69650fa9a077226</anchor>
      <arglist>(QObject *watched, QEvent *event) override</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>alert</name>
      <anchorfile>classDLineEdit.html</anchorfile>
      <anchor>a739e6d05e4bd65ff9854def89d9c9960</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DLineEdit</name>
    <filename>classDtk_1_1Widget_1_1DLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DLineEditExample</name>
    <filename>classDLineEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DFileDialog::DLineEditOptions</name>
    <filename>structDFileDialog_1_1DLineEditOptions.html</filename>
  </compound>
  <compound kind="class">
    <name>DLineEditPrivate</name>
    <filename>classDLineEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DListView</name>
    <filename>classDListView.html</filename>
    <base>QListView</base>
    <member kind="function">
      <type>bool</type>
      <name>isActiveRect</name>
      <anchorfile>classDListView.html</anchorfile>
      <anchor>ac7562ca28b793119dc60d3195c533fbb</anchor>
      <arglist>(const QRect &amp;rect) const</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDListView.html</anchorfile>
      <anchor>a0ce3f8f6a083ddbf6c3bd45d81f453e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>Qt::Orientation</type>
      <name>orientation</name>
      <anchorfile>classDListView.html</anchorfile>
      <anchor>a45891f6bd9e2512afca43083240891b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DListViewExample</name>
    <filename>classDListViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DListViewPrivate</name>
    <filename>classDListViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoadingIndicator</name>
    <filename>classDLoadingIndicator.html</filename>
    <base>QGraphicsView</base>
    <member kind="enumeration">
      <type></type>
      <name>RotationDirection</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cbab7af88b64e8a3aac305924491b1d4e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Counterclockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cba655b8bc509d407f52e33b64bf20585e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Clockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cbab7af88b64e8a3aac305924491b1d4e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Counterclockwise</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a8df63c04b02fd31fbfb610ed9e0a43cba655b8bc509d407f52e33b64bf20585e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a3c3b86d9e0a09d35eb6eadb16bb5ac52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>acce3d2bd2dd286b71e404408c94bcd5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAniEasingCurve</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a5dfeec7aed72bace6671b3812e65cb3d</anchor>
      <arglist>(const QEasingCurve &amp;easing)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DLoadingIndicator</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>adb5066aa85224301df325766c38dce0e</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>RotationDirection</type>
      <name>direction</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a36ed27b12abf63e5d08bcd9f2a35b042</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>backgroundColor</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>af26a442d8aa04c44f9c8cca029f3d254</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>loading</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a95e38e9633fed1a4c0a39587a3d77666</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>smooth</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a12d514bc6d4dc260a2149211f2cb3493</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPixmap</type>
      <name>imageSource</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>ae117367f775533a5c6be22ebd0ec7dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>widgetSource</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a37a3a4ad2f52924a1ca3897b7c31dc45</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>aniDuration</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a815545b1eb658674b6f8f6ce46f6aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QEasingCurve::Type</type>
      <name>aniEasingType</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a593fda6f6627ea26b3d127733a7f65a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>RotationDirection</type>
      <name>direction</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>a0d1164dbf393fb920ff49b49d4a0711d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>qreal</type>
      <name>rotate</name>
      <anchorfile>classDLoadingIndicator.html</anchorfile>
      <anchor>aac9fdb1b3d1711d96e594d017b0fb81b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DLoadingIndicator</name>
    <filename>classDtk_1_1Widget_1_1DLoadingIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoadingIndicatorPrivate</name>
    <filename>classDLoadingIndicatorPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoginManager</name>
    <filename>classDLoginManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>activateSession</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a0263f39c63d547a2ac50109e47abc744</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>activateSessionOnSeat</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a7fd62300b322f4e5524124e0ebc8d120</anchor>
      <arglist>(const QString &amp;sessionId, const QString &amp;seatId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canHalt</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a6fd29270aaf5f6b86928edc4761a2133</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canHibernate</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aac1a6f21eced36e1c12d3cef7e3db4a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canHybridSleep</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a3263f72250ed116570107b42a3130a78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canPowerOff</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a340b865056d9496c988cd3cba945ca5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canReboot</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a9070a9f26154e9b7c58899f5a0671feb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canSuspend</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a24bf13e858c7761a8a08f3d5265dfbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginExecStatus &gt;</type>
      <name>canSuspendThenHibernate</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>af9f9313cc59efde30a784c8c8366c3ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>cancelScheduledShutdown</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ab2bc42ca4f773c7b597c3f8ba38771bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginSeatPtr &gt;</type>
      <name>findSeatById</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a2a3286077b5684a64f6296631097292a</anchor>
      <arglist>(const QString &amp;seatId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginSessionPtr &gt;</type>
      <name>findSessionById</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aacf70b6db436d55a2361388ace57bd5a</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginSessionPtr &gt;</type>
      <name>findSessionByPID</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ac9b8f98b427fe8e1527ea436f09e5832</anchor>
      <arglist>(quint32 PID)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginUserPtr &gt;</type>
      <name>findUserById</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a49c6f998be613a15098e23b8eb835550</anchor>
      <arglist>(quint32 UID)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginUserPtr &gt;</type>
      <name>findUserByPID</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a396a909e3dab7afa7dfe2e8f06feaa68</anchor>
      <arglist>(quint32 PID)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>halt</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a2f8d3e9e3830683f76681b0b24bbe793</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>hibernate</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aa7909528b4bf7857833bc8d99da7105b</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>hybridSleep</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ab96ee9b5fafcd6e0df40c21f912cf1e3</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; int &gt;</type>
      <name>inhibit</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a6799052dc9ae001eab3a0ca5a95a846a</anchor>
      <arglist>(int what, const QString &amp;who, const QString &amp;why, LoginInhibitMode mode)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>killSession</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>af820978dc0d7c5cc1f54c06caa7d423c</anchor>
      <arglist>(const QString &amp;sessionId, LoginSessionRole who, qint32 signalNumber)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>killUser</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a1d065b547fa691dfdc2e699b6b40ab47</anchor>
      <arglist>(quint32 UID, qint32 signalNumber)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginInhibitorList &gt;</type>
      <name>listInhibitors</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a688c066e6f05d6fabdac2cb84ce8263a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>listSeats</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>afefe151de534da2fa00d0346592a270c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>listSessions</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a9f854b9f1c2d0b07b27ffcc263747820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QList&lt; quint32 &gt; &gt;</type>
      <name>listUsers</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a58e9b0174887d67b7b6ede9d089dd451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>lockSession</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a5352aa878ef06acb753ddcea08cb6438</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>powerOff</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a8c2bd560ccf33a05954795a51537e0bc</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reboot</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ab82f42d37cbbdf4c51625550fe0c61ef</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>scheduleShutdown</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ae121f9af00eb37d8a5ea3b46404228fe</anchor>
      <arglist>(LoginShutdownType type, const QDateTime &amp;usec)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setUserLinger</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ae1a51960a49c772b5c5b4f95afc0a48f</anchor>
      <arglist>(quint32 UID, bool enable, bool interactive)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>suspend</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a44dd4bc1d7ddeecbe1934535b3ae250c</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>suspendThenHibernate</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a439211f55e54208d5a1e7f4d49d77703</anchor>
      <arglist>(bool interactive=false)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>terminateSession</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a88f971a43bd23e1c1e8de459b6cd9283</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>terminateUser</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a1026776c1163fe0a0823f027eb6da772</anchor>
      <arglist>(quint32 uid)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>logout</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>abd568a06bd769b0d76d3774fa00ea399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginSeatPtr &gt;</type>
      <name>currentSeat</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>af327c3d24e846226c1ed0caa6feacc4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginSessionPtr &gt;</type>
      <name>currentSession</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aab54260ce61248a4e535a588dd1358eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; LoginUserPtr &gt;</type>
      <name>currentUser</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aba29d5d744c1b455de9e9b150b66b0f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>prepareForShutdown</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a5c2734f314459899f9eb1e39598d24d4</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>prepareForSleep</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a23c2181ea676434184773be11edbc2ca</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>seatNew</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a97e6dee754fa2808de85609e8ef4c5e2</anchor>
      <arglist>(const QString &amp;seatId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>seatRemoved</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a7bbe5e7921898af9c476e79b6cdca7b7</anchor>
      <arglist>(const QString &amp;seatId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sessionNew</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>afaeefaac8195f27e2747531ba487f2aa</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sessionRemoved</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a1f2b628830d1714de3b9a932934384f7</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>userNew</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a9e7a056e23d22b5d5e72579a8e7f1954</anchor>
      <arglist>(quint32 UID)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>userRemoved</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a62541448b5b5eea3f975f3736410c3b5</anchor>
      <arglist>(quint32 UID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DLoginManager</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a5ef5f538f657cbafe83679748f631aea</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>killExcludeUsers</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a987954b99c1a825569beca90a5ade4e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>killOnlyUsers</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a0b204908d2a09225133b26f34f84e528</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>docked</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a10de27f42a0672b43824c36061d05be1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>idleHint</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a686ee1ad2082b61a622d51ac6df9d44b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>killUserProcesses</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a2d8870dc98428da25669411e1b73fcd9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lidClosed</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a252fe712ef2654ad72e000989fdced9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>preparingForShutdown</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aee393e9f2e143da8b6bb26414257f719</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>preparingForSleep</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a8021cb35bf0c2a093a11d761587c6692</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeIPC</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ad177f09f19e8f1b4829a99b1dc89acad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>blockInhibited</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>ac47aa2520657ed5a657745ecba7f2cda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>delayInhibited</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a6f846c5448368eb25933b583cb6f2fc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>handleHibernateKey</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aea9bd379e939bf1b5504d617458ce804</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>handleLidSwitch</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a7a82c6092fc4185278390c50aea97b9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>handleLidSwitchDocked</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a35784bd188d7e3520aed4eecda453f64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>handleLidSwitchExternalPower</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a63421b18c1bac73bbe70a4005e40bf27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>handlePowerKey</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a669123646d48113601c8e3e7a57302a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>handleSuspendKey</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>afcdd51d163678a22bb36ce39b6daf61d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerAction</type>
      <name>idleAction</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a77fb5dce80d52a6f483332715b34a075</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ScheduledShutdownValue</type>
      <name>scheduledShutdown</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a0fa45594d55a1c7ce189d11eab159c27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>nAutoVTs</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a85d08984ff64c9473bfcc5ea8a3c8e0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>holdoffTimeoutUSec</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a085179ba572b8e0351604c5dcd3dc4ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>idleActionUSec</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a6510df99f1dba025609ab84f575be263</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>idleSinceHint</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a8166301bbd8a88b71b4ec0d89e9c7551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>idleSinceHintMonotonic</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a148aec23e0e3e8e61c005254ddc59416</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>inhibitDelayMaxUSec</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>abfe8a54f24a246fd69a22683b04248ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>inhibitorsMax</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a27243c8c1b502393646f98c64431c11a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>nCurrentInhibitors</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a7ececc4dabd69bc64d71cc8dd331f30f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>nCurrentSessions</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a3c964035705273f544bd6ebd726f77ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>runtimeDirectoryInodesMax</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a38cea875b2f1187a2f7c792a252ccfa7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>runtimeDirectorySize</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a4753f919a73760a81c33ef9792b780a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>sessionsMax</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>a1481d1895ac2e2d174aef7a8e9d28d8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>userStopDelayUSec</name>
      <anchorfile>classDLoginManager.html</anchorfile>
      <anchor>aae1f62725f33729a875cb1a39b1417ad</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Login::DLoginManager</name>
    <filename>classDtk_1_1Login_1_1DLoginManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoginManagerPrivate</name>
    <filename>classDLoginManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DLoginSeat</name>
    <filename>classDLoginSeat.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>activateSession</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a5509b4292897d20dc781286532dc1c77</anchor>
      <arglist>(const QString &amp;sessionId)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>switchTo</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a3db264c68000b9f1a4260fc42d142630</anchor>
      <arglist>(quint32 VTNr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canGraphical</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>abd43dca89682f3e4ee3b7ff689eb7460</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canTTY</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a14c9c2267487ba92974c606f8caffdfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>idleHint</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>ac82326eae96884e846ced94858f019fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>sessions</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>af68c94a9286ec883680635d387239675</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>id</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a5cecc824329441df0f9af2a118ff4722</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>activeSession</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a0b76416ef3be9fe4290a2e3f82b40244</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>idleSinceHint</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a680806e62d1bc2fccda563ce538f6231</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>idleSinceHintMonotonic</name>
      <anchorfile>classDLoginSeat.html</anchorfile>
      <anchor>a61fbfcc4b3497d7b8a87093e0a6631de</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Login::DLoginSeat</name>
    <filename>classDtk_1_1Login_1_1DLoginSeat.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoginSeatPrivate</name>
    <filename>classDLoginSeatPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DLoginSession</name>
    <filename>classDLoginSession.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>activate</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a20c1d98200f9b61bf45fb0c2f72e7977</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>kill</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a6e962d101acf2ac175af85c581046c98</anchor>
      <arglist>(DTK_LOGIN_NAMESPACE::SessionRole who, qint32 signalNumber)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>lock</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>aefc36441fc3d7c4435bca619bff8bfb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setIdleHint</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a7d6916b9b2ad43d07c0cc76ac982d82f</anchor>
      <arglist>(bool idle)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setType</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a1aa80e12bab1ed09d313c04f756f3827</anchor>
      <arglist>(DTK_LOGIN_NAMESPACE::SessionType type)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>terminate</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a07b6f0ed85476125283b17dcdc6dd4c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>autostartList</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a95c81df7079d68664a755cdeaeca3d86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>isAutostart</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a96cbb964d60fdf81661e297a3d5dec4a</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>removeAutostart</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ac6f57ae35e54511fa4372fb09510e4ff</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>addAutostart</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae82a327d7d9abbb82878a5178180c2ce</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lockedChanged</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a1e642d2cf71762b3727b9c4d152d909e</anchor>
      <arglist>(bool locked)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autostartAdded</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>af73733641e52dc84a0b5c1bb56c2cf7a</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autostartRemoved</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae7f51f23fceac09d50f9a938deaf917b</anchor>
      <arglist>(const QString &amp;fileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>active</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a888d7b1ffb6225aa3fc999bb8ad11668</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>idleHint</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>acdc94d2af79a0897408ba2cbe2ab92ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>locked</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae9448049068cab92228026749b0495fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remote</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>afb1958970c9a6daf0d3f9186236fbf5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SessionClass</type>
      <name>sessionClass</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ab24079659b42ffb5ca8efdbec49acf25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>desktop</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ac642359d4c8936007bdfc3d3ddb79ef5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>display</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a8315891d0d23c975e2c05ce9a47eba00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>id</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a18164efe8da7e0c0ae9fc90fd6b79184</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a75a4d5f919df90bc7575279decf4b484</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>remoteHost</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ad88819b7987588ebc1da1e0b5699e17d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>remoteUser</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a3a382d883060d8d230b0fb146b2b1d98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>scope</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a869985e1129f112c3188869c0ecf23ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>service</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a4827b5820fd6c819ac93f1be6e7c896a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SessionState</type>
      <name>state</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae8e2135ab678ed486fffe4232aa98350</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>TTY</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ad3bd09e176492db93fe3b3500980f774</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SessionType</type>
      <name>type</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>aca346b47183d3ac9c1391f3ced4543ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>seat</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>abb387a0cd1820196ae4363cd7a0e9dcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>user</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>afe78d0e8d74ba43b48c8e5be73d2bb35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>audit</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a06ccb843e749ede9f5d1cee92fce2643</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>leader</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae556f9c4ae3a0da274f9d436ee890c6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>VTNr</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>aaa93caa435e52789e39cbbc5c5341c8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>idleSinceHint</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a5bf11ca330f2e04351d11395af9d5c72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>idleSinceHintMonotonic</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>aa98d4a17bfc00649f8819b4943bad5ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>createdTime</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>aff6be5901272eafb70c722017ee040c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>createdTimeMonotonic</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a58e8afa44fe1f7ab1175f8da6bdbdfca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>active</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae1a8ce246cecb80ff54c422fc7de69f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>idleHint</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ae21947d874d402e97a0be4f21599872c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>locked</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ade2810858ec170e2d66a2d3a84fa000d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>remote</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>acbd8114a5b37786af8f5fa1605994983</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>SessionClass</type>
      <name>sessionClass</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a20b8dc70c664429c9afa66fe52eba0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>desktop</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>adc31991d1b7e7ce8e73977cf61d6006f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>display</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>af3fe3154f1f1c5414e02a190457896cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>id</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>af872f7514b3ecc35915b944120ce2112</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a76120442ea382e986e5cceaf189738b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>remoteHost</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a1b19c576e990eb4adf3a8292479cec21</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>remoteUser</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ad2b1ede3b8e42c3def38bdfa45974b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>scope</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a8fe5854d4a84e0ece72eb62fd2d8f05f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>service</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a78e4de27a8daf813651db52888d75bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>SessionState</type>
      <name>state</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a1f4f05663921ecd68612517bdaf0ba1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>TTY</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a42b9872251a22bc8937fa86161799ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>SessionType</type>
      <name>type</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>afda4ad22ad7ecd58ee8257695ea15ef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>seat</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a9fd5190b7f33444a7127dff9af6ded8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint32</type>
      <name>user</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>add74772b68c7f643fcaa0fffb78a3068</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint32</type>
      <name>audit</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>adf4438ccab28b7238b7df2adffd1b31f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint32</type>
      <name>leader</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>ac50795e7e8e386038938c427b959da18</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint32</type>
      <name>VTNr</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a9b9c2f2f78cf4499eb8cc0837f17832d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QDateTime</type>
      <name>idleSinceHint</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a3c7472d66f975626e8e62a6196a0c0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint64</type>
      <name>idleSinceHintMonotonic</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a4174fefaa649657280614078ef240f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QDateTime</type>
      <name>createdTime</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a41963f7c318f467ad6e93b71c7f3c127</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>quint64</type>
      <name>createdTimeMonotonic</name>
      <anchorfile>classDLoginSession.html</anchorfile>
      <anchor>a07f5afd92c67f763a16616b304757ad4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Login::DLoginSession</name>
    <filename>classDtk_1_1Login_1_1DLoginSession.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoginSessionPrivate</name>
    <filename>classDLoginSessionPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DLoginUser</name>
    <filename>classDLoginUser.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>kill</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a1a0689bbe5748d27b77d25b5bd0a610e</anchor>
      <arglist>(qint32 signalNumber)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>terminate</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a6cddae146797fb48305776be1bcdcfd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>sessions</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>abcccafecc6ceb02e4484496e1c075272</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>idleHint</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>ac1b75edd493e69467557693b32b2e021</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>linger</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a777c6addc4d2faec01b20ef53b62c14e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a35976e6b6968171ab9ff23c47919e81b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>runtimePath</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a4b92d8d59274270aca19d6475a7ace2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>service</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a522d1f726d6b29b934521cf9d8c6095d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>slice</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a1a131f45ac04c6e7aec0300abd0a523e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UserState</type>
      <name>state</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a8eced71b8aad17333532ff7ef68d663b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>display</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a03c972bc44332304807b1da26e1eb3d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>GID</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a7b93c1a26702c13a3b589449ad046505</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>UID</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a49590cdbdae187913811951bd9cfd5c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>idleSinceHint</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>afeb20915744afa9696f56df1406f6aa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>idleSinceHintMonotonic</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>ad12495a3b9f14056fe11fb9189695973</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>loginTime</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a26fcd6b7cf5d610784c46047b2f0e829</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>loginTimeMonotonic</name>
      <anchorfile>classDLoginUser.html</anchorfile>
      <anchor>a60e3c2cd57a60bb10bb88882516c800f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Login::DLoginUser</name>
    <filename>classDtk_1_1Login_1_1DLoginUser.html</filename>
  </compound>
  <compound kind="class">
    <name>DLoginUserPrivate</name>
    <filename>classDLoginUserPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DLogManager</name>
    <filename>classDtk_1_1Core_1_1DLogManager.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerConsoleAppender</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a75eaa3fb937257500a338b93265f175e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerFileAppender</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a7dd9d18d92668bc6003431156b681050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>getlogFilePath</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>ab8f63169474d6356514b8138970f6a51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setlogFilePath</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a17cce4af36f998bc8b496843cfb9c37f</anchor>
      <arglist>(const QString &amp;logFilePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setLogFormat</name>
      <anchorfile>classDtk_1_1Core_1_1DLogManager.html</anchorfile>
      <anchor>a3c54be6fb5294f3bf386d5a06affa2ff</anchor>
      <arglist>(const QString &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DlsDevice</name>
    <filename>classDlsDevice.html</filename>
    <base>QObject</base>
    <class kind="struct">DlsDevice::DDeviceInfo</class>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>devicesInfosAll</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a387d737c503b4cbe152030200d93383d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>deviceAttris</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>aa6cfa2735023aa55ee6f1083e92d0931</anchor>
      <arglist>(DevClass etype)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceInfo</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a073272fe9142781414decbd2a2bf2dbb</anchor>
      <arglist>(DevClass etype)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceInfo</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>ae0cd90fe2ba7a422af18b445e7f2eda9</anchor>
      <arglist>(DevClass etype, const int idex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>devicesCount</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a8d95127ba72d78a9919ed080ac125a42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>devicesCount</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a17ba538ea6390c626f54b9e20c775acb</anchor>
      <arglist>(DevClass devclass)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>updateSystemCpuUsage</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a01c6b40b42dac8ca81145fa9d0b52568</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCpuUsage</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a793095856986eb0a41e4276b825bccc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceCPU</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a195b37434d56b97153778f12c20c47d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceStorage</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>aefd5ec56e9a9140bb5904b87b1debbc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceGPU</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a6fc01e2c6193f19220f6fc793c09483f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceMemory</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>aa3e477ba173a572da42790ec62a3adaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceMonitor</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a07de4f06d7486734f7d07a899057721c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceAudio</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a4f722c7f4204c84039fd916067e2feac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceNetwork</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a22f445a594721fa0c6286be142bdc714</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceCamera</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a3ad1aa2ee475b60c5a920509db67b9c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceKeyboard</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>aca67c35b83ca9e9232cb270463187db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceMouse</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>adae181284ae5465d3740d08e187cd437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DDeviceInfo &gt;</type>
      <name>deviceComputer</name>
      <anchorfile>classDlsDevice.html</anchorfile>
      <anchor>a235ebb2594b1ed2d0cf69eb0e883223e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DlsDevice</name>
    <filename>classDtk_1_1Device_1_1DlsDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DlsDevicePrivate</name>
    <filename>classDlsDevicePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMainWindow</name>
    <filename>classDMainWindow.html</filename>
    <base>QMainWindow</base>
    <member kind="slot">
      <type>void</type>
      <name>setWindowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>abf2ae1508316883197121706c5fe39ae</anchor>
      <arglist>(int windowRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBorderWidth</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a0712e2cf9d495f81c59301663eaec59c</anchor>
      <arglist>(int borderWidth)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBorderColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a230949e3277fae04479aec0428ce6665</anchor>
      <arglist>(const QColor &amp;borderColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a0c0907a9acfca0908a173a86aac65d11</anchor>
      <arglist>(int shadowRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowOffset</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a7f73f69fe03da09397a3d98819ad45a6</anchor>
      <arglist>(const QPoint &amp;shadowOffset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a9c3e19749a495817783a1483fad2971a</anchor>
      <arglist>(const QColor &amp;shadowColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setClipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ab8e2db8d009aa5d5f97cfc1ed70b2cf7</anchor>
      <arglist>(const QPainterPath &amp;clipPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setFrameMask</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a3590e416fff6e4c010160f1cf4d16b84</anchor>
      <arglist>(const QRegion &amp;frameMask)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTranslucentBackground</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a74a710fd50a442018121163893df5ce5</anchor>
      <arglist>(bool translucentBackground)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableSystemResize</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ab8907a4fa6be21ff4ff6d651bae6505c</anchor>
      <arglist>(bool enableSystemResize)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableSystemMove</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a8e6d7a86d0ef3d4d1a30247a8ef95055</anchor>
      <arglist>(bool enableSystemMove)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableBlurWindow</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>aab5f93bf6b82f8c94b9998e1f3cfd4fe</anchor>
      <arglist>(bool enableBlurWindow)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAutoInputMaskByClipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a72dd82a366ee55bdbfca6a514850bf09</anchor>
      <arglist>(bool autoInputMaskByClipPath)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a1db4e2018cb41379bc3f80fd9eb45404</anchor>
      <arglist>(const QIcon &amp;icon, const QString &amp;message)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ac25bfa06f4093be05039e4e08de318b9</anchor>
      <arglist>(DFloatingMessage *message)</arglist>
    </member>
    <member kind="function">
      <type>DTitlebar *</type>
      <name>titlebar</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ad44b053369899c3238e33a4576402792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDXcbWindow</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a00418b7294d1df29fe69e16abea8308f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a7b84f8abf32d7b9527379a870999dafa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>windowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a067eae241a20649bed297afc5345ce91</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>borderWidth</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ad160a625393e3dbf1b8961dfa9088b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>borderColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a23d9d6813f59b946606f8c619d2c2d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>shadowRadius</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>af5a6202786a7c85e4d1990f08e75e014</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPoint</type>
      <name>shadowOffset</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ace2018c032f2b80610afdb4dd3278ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>shadowColor</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a2f044b842bed98b1ba5179a8cb764c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a487dd0c87b79b3b029f007287a513bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QRegion</type>
      <name>frameMask</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a61231ad182b760b7cad1cdcbbbcacf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>translucentBackground</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a2ac18d7653ccb5216261278028134464</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>ac48e78de67085875f571705ad58f240a</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemMove</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a815d4adc9b48388859d9a2844c01d3ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableBlurWindow</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a80057bf094f82325427595015d8aca54</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoInputMaskByClipPath</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>aac3ed8de931e3b5ee504185638283ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>titlebarShadowEnabled</name>
      <anchorfile>classDMainWindow.html</anchorfile>
      <anchor>a54fb033c470dfda352731f7fd2090e60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DMainWindow</name>
    <filename>classDtk_1_1Widget_1_1DMainWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>DMainWindowExample</name>
    <filename>classDMainWindowExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DMainWindowPrivate</name>
    <filename>classDMainWindowPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaCaptureSession</name>
    <filename>classDMediaCaptureSession.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>audioInputChanged</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>ac041bdb647c7929ee7bbe397efaa8e9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cameraChanged</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a5181ed94bb8955b87dc91cbe91981045</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>imageCaptureChanged</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>ad29111ca77c250eb3563fb56ce52c363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>recorderChanged</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>ab4348886e0095af87b482b411b37913f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>videoOutputChanged</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>ad2bbf16f6ca017b6317a9140faffe423</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>audioOutputChanged</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>ac0cf0378f4537d22fd96652f54603d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DAudioInput *</type>
      <name>audioInput</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a8f7d2aa88814052275766a78d58335fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioInput</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a0658f1ce04f1c69bd1e027a028acf940</anchor>
      <arglist>(DAudioInput *input)</arglist>
    </member>
    <member kind="function">
      <type>DCamera *</type>
      <name>camera</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a5a6022a56fbbd480655262b72905848a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCamera</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a29a48d2a4aae9c748630567ae1da903f</anchor>
      <arglist>(DCamera *camera)</arglist>
    </member>
    <member kind="function">
      <type>DImageCapture *</type>
      <name>imageCapture</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a4aa36383e17c5f82da77db3fe63bb800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImageCapture</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a709e448b8461fc98b9fec7738e9b0208</anchor>
      <arglist>(DImageCapture *imageCapture)</arglist>
    </member>
    <member kind="function">
      <type>DMediaRecorder *</type>
      <name>recorder</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a57e38ad92a9e678d12c8450f49f5a601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecorder</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a536993ee3b35a1b3caa38adb9f4a17b5</anchor>
      <arglist>(DMediaRecorder *recorder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoOutput</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>ac9f6c3dc13973ad0c93981b77be674bb</anchor>
      <arglist>(QObject *output)</arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>videoOutput</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a65e1c737e12de99c91bc2c062055c971</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoSink</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a11ffe650cd0682e4ffbd1934cdee5b0f</anchor>
      <arglist>(DVideoSink *sink)</arglist>
    </member>
    <member kind="function">
      <type>DVideoSink *</type>
      <name>videoSink</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a7148cd92665a6143621eb608fc21f16d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioOutput</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a86c8677e32dadbf832570731c25627e6</anchor>
      <arglist>(DAudioOutput *output)</arglist>
    </member>
    <member kind="function">
      <type>DAudioOutput *</type>
      <name>audioOutput</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a832275debed30370920b05a18f7f67c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DMediaCaptureSession *</type>
      <name>platformSession</name>
      <anchorfile>classDMediaCaptureSession.html</anchorfile>
      <anchor>a626f59009e4b82fb2910f0026202e517</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DMediaCaptureSession</name>
    <filename>classDtk_1_1Multimedia_1_1DMediaCaptureSession.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaCaptureSessionPrivate</name>
    <filename>classDMediaCaptureSessionPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMediaFormat</name>
    <filename>classDMediaFormat.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>FileFormat</type>
      <name>fileFormat</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a27890c54260aab063dd7a88a036631b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileFormat</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a5461bb53e1a6012f9da88ff0a218c900</anchor>
      <arglist>(FileFormat f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoCodec</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a0850b35c987edce388073c7ac2ab5a9e</anchor>
      <arglist>(VideoCodec codec)</arglist>
    </member>
    <member kind="function">
      <type>VideoCodec</type>
      <name>videoCodec</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>af04cf6045e63151fcec9c791ccbd2e72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioCodec</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a211536abf1af04e9bdb57b83a21609b8</anchor>
      <arglist>(AudioCodec codec)</arglist>
    </member>
    <member kind="function">
      <type>AudioCodec</type>
      <name>audioCodec</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>ad294e3bae3511a5bb839f87ff4227c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Q_INVOKABLE bool</type>
      <name>isSupported</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>acf6bb7db2c2e369796e8144eea462eb6</anchor>
      <arglist>(ConversionMode mode) const</arglist>
    </member>
    <member kind="function">
      <type>Q_INVOKABLE QList&lt; FileFormat &gt;</type>
      <name>supportedFileFormats</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a53846737cf84ac783c0c7daae340e7f4</anchor>
      <arglist>(ConversionMode m)</arglist>
    </member>
    <member kind="function">
      <type>Q_INVOKABLE QList&lt; VideoCodec &gt;</type>
      <name>supportedVideoCodecs</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a4a0da77fd63ca676eadfa2309978a2e1</anchor>
      <arglist>(ConversionMode m)</arglist>
    </member>
    <member kind="function">
      <type>Q_INVOKABLE QList&lt; AudioCodec &gt;</type>
      <name>supportedAudioCodecs</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a511ed187d8afeb9dc3c41d1beaf0c784</anchor>
      <arglist>(ConversionMode m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a10caa0d1a7b618c98f48d5c1842562c0</anchor>
      <arglist>(const DMediaFormat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>aedaae7f33753291aa9b80cc40ccd2103</anchor>
      <arglist>(const DMediaFormat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resolveForEncoding</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a56a130c52dad160e6a0803fa96e5c894</anchor>
      <arglist>(ResolveFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QString</type>
      <name>fileFormatName</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>aa8b159e105d79c8c7e04ae8b17449fdb</anchor>
      <arglist>(FileFormat fileFormat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QString</type>
      <name>audioCodecName</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a77583b789e2ddd35bf3b113aa58fdee2</anchor>
      <arglist>(AudioCodec codec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QString</type>
      <name>videoCodecName</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a3b0fef6b410fbba7b68d148be1e52661</anchor>
      <arglist>(VideoCodec codec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QString</type>
      <name>fileFormatDescription</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a6dc8f9a4fb8ad9f3163e44e4329d0d1e</anchor>
      <arglist>(DMediaFormat::FileFormat fileFormat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QString</type>
      <name>audioCodecDescription</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>a8634d6a3b0f947df2367547c96106e6a</anchor>
      <arglist>(DMediaFormat::AudioCodec codec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Q_INVOKABLE QString</type>
      <name>videoCodecDescription</name>
      <anchorfile>classDMediaFormat.html</anchorfile>
      <anchor>aab844b8c3903062d416bfb2d3653aee8</anchor>
      <arglist>(DMediaFormat::VideoCodec codec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DMediaFormat</name>
    <filename>classDtk_1_1Multimedia_1_1DMediaFormat.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaFormatPrivate</name>
    <filename>classDMediaFormatPrivate.html</filename>
    <base>QSharedData</base>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMediaMetaData</name>
    <filename>classDMediaMetaData.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaPlayer</name>
    <filename>classDMediaPlayer.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>play</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a989e0f4b1cf53097215f0426c8044d01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a93f0b48f9c00313674ac0c93b963fea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a466c915745fd410fd99cd380adb32a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>aac87ce811db90645754375765e7c61ec</anchor>
      <arglist>(qint64 position)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVolume</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>acc7883b100f48808d9fe9336a55e8faf</anchor>
      <arglist>(int volume)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a18efbe6124197d722374a8b8a84ba9f6</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPlaybackRate</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a8cdf828a87c0f66b4148ebd620ca8ba1</anchor>
      <arglist>(qreal rate)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMedia</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a84b48e5d68c12592129e6e33f25af2c8</anchor>
      <arglist>(const QMediaContent &amp;media, QIODevice *stream=nullptr)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPlaylist</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a029e6cf1fb78a12f640b3e9e6a7c672e</anchor>
      <arglist>(QMediaPlaylist *playlist)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setNetworkConfigurations</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a48c91ef9230b289b31f9a8a605a359c9</anchor>
      <arglist>(const QList&lt; QNetworkConfiguration &gt; &amp;configurations)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVideoOutput</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a7aecdc1d4c491b1e6dabee161119454b</anchor>
      <arglist>(QVideoWidget *)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPlayer</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a55ecbe653aa37c068cdb60ede08e54b6</anchor>
      <arglist>(DPlatformMediaPlayer *player)</arglist>
    </member>
    <member kind="function">
      <type>DPlatformMediaPlayer *</type>
      <name>getPlayer</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a04508d4bdd97459934d8d4e6a5c6d895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QVideoWidget *</type>
      <name>getVideoOutput</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a8f3308a909bb0f86d2e422ecef11a716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QMediaPlaylist *</type>
      <name>getPlaylist</name>
      <anchorfile>classDMediaPlayer.html</anchorfile>
      <anchor>a52b213a2e1c06004f9ed727a9d4c5e29</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DMediaPlayer</name>
    <filename>classDtk_1_1Multimedia_1_1DMediaPlayer.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaPlayerPrivate</name>
    <filename>classDMediaPlayerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMediaPlaylist</name>
    <filename>classDMediaPlaylist.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>shuffle</name>
      <anchorfile>classDMediaPlaylist.html</anchorfile>
      <anchor>a2ebd73de8a2f9948fe2cd113785e2cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>next</name>
      <anchorfile>classDMediaPlaylist.html</anchorfile>
      <anchor>a9472219198ad764dbf423468f3ad33e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>previous</name>
      <anchorfile>classDMediaPlaylist.html</anchorfile>
      <anchor>abbee44600103f4eccef55bf66bf549aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classDMediaPlaylist.html</anchorfile>
      <anchor>a96c3e3f6675612f9e9a76a5b93918bb7</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DMediaPlaylist</name>
    <filename>classDtk_1_1Multimedia_1_1DMediaPlaylist.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaRecorder</name>
    <filename>classDMediaRecorder.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>record</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>acb9853ebe8a0c21bf2607ed605ee4ec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a518eae36229a665db4588e731b7bcb8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a5b68820e8308e2bfcfbc791e374ed7c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>recorderStateChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a4ea268e46d794b0d63df308e5065ed1c</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>actualLocationChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a906a5ca1eba8f9e7724d516b77267d85</anchor>
      <arglist>(const QUrl &amp;location)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>encoderSettingsChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a0a7b8a2e0164fc935b7deb9cc1055bb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>errorOccurred</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>abae7cd119f0c03217f7b0018b5af679f</anchor>
      <arglist>(Error error, const QString &amp;errorString)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>errorChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>abf841833f43436d62ab134714b67af57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>metaDataChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>aac5675100e8d203a58251a6f2bf6062c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mediaFormatChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a6faa2a03454b09eaf9b8936d02ca7a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>encodingModeChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a3efdd42e3798e782904a208dd6cb8a86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>qualityChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ad321f31a42cafe9fe5630a42454e414b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>videoResolutionChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a4f602d8b2e10f015ff06c372703492bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>videoFrameRateChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a7eba2cec7db2a982ffc3afe8f4d6ebf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>videoBitRateChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>acacf6345b8c7d44f3f33bb0b0d2da329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>audioBitRateChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a2ce1a925d11cd2612a133e0d5c149865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>audioChannelCountChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a29412c4cdda43c17c921f1c11e440391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>audioSampleRateChanged</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a7690a12e1118666096678a4083d1867d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailable</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a8bbb99ce56b737a99fef929c60a92958</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>outputLocation</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ae50b78981a4dccdb80dc8a2f58515cc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputLocation</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a4c3e73445ba1dee667cb138e94fbd767</anchor>
      <arglist>(const QUrl &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>actualLocation</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>af37a79c70fb3e907326a28261bee2229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>recorderState</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>aeef8fdbf2181e36196c06b0bcdd1e0ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>error</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ad0a958de6c45a2dce2e14ad8bced71e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a7a26b4e56bb1ff28669ec5e27792996a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>duration</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a8f9238c297bdc421f0a0e8ae1d787f65</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DMediaFormat</type>
      <name>mediaFormat</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a698bc1a22a5fd2b7494efe4d848058cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMediaFormat</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>af4d5c6de7cf7595d2ad6b3606e6c3000</anchor>
      <arglist>(const DMediaFormat &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>EncodingMode</type>
      <name>encodingMode</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a0ed4e1a6ab44af3d9168a159b1754bdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEncodingMode</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a2f2a29cf8d80132fa33e1b9574c46b53</anchor>
      <arglist>(EncodingMode)</arglist>
    </member>
    <member kind="function">
      <type>Quality</type>
      <name>quality</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a660564a62f884c19b8df7374a9f8d404</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuality</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a8a6b8b9cfd4f0e1a28fc7d05f3481d4a</anchor>
      <arglist>(Quality quality)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>videoResolution</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a3499335e40eddd80bc087de5bdeee186</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoResolution</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ae773c3986bc21dc34dd56847cee37f7e</anchor>
      <arglist>(const QSize &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoResolution</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ad1d13b3a8ea649ab6a5585311647537a</anchor>
      <arglist>(int width, int height)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>videoFrameRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a666024dd57917e5734b669e5168a2fe5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoFrameRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>af0ce9c1fd196d5fd0d989384405af734</anchor>
      <arglist>(qreal frameRate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>videoBitRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a6eca52f10320e042ed5d92fd5e052e8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoBitRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a1401d8009e01297b87a8c773975a2807</anchor>
      <arglist>(int bitRate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>audioBitRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ae9bc17af6827830b18b592f37a49b674</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioBitRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>aed5ad7e73332e0fae5f95cdbd77c8a4e</anchor>
      <arglist>(int bitRate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>audioChannelCount</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ae387d3ff78d55779f03c66a489b2dd21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioChannelCount</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a533d226a30e9e7bac2badc1ea9ab971c</anchor>
      <arglist>(int channels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>audioSampleRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>aa5563e4cab9ada605999cb5d86850ecc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAudioSampleRate</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>a1ea13995e232e6e89527f68535b26cc2</anchor>
      <arglist>(int sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>DMediaMetaData</type>
      <name>metaData</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ad885b793977e14c5d83144cce7339bca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetaData</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ad9cb3f70b9022e795581c8f81b063a79</anchor>
      <arglist>(const DMediaMetaData &amp;metaData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetaData</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ac8841c8eff19e97329e60e8b282475d2</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMetaData</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ac251e19cd19be09a247f98373743b715</anchor>
      <arglist>(const DMediaMetaData &amp;metaData)</arglist>
    </member>
    <member kind="function">
      <type>DMediaCaptureSession *</type>
      <name>captureSession</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>ab8192b60d50c26f99bc127b021bf2aab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QMediaRecorder *</type>
      <name>platformRecoder</name>
      <anchorfile>classDMediaRecorder.html</anchorfile>
      <anchor>af12472fe3bdd8626cf6549fc3be81b20</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DMediaRecorder</name>
    <filename>classDtk_1_1Multimedia_1_1DMediaRecorder.html</filename>
  </compound>
  <compound kind="class">
    <name>DMediaRecorderPrivate</name>
    <filename>classDMediaRecorderPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMemoryDevice</name>
    <filename>classDMemoryDevice.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a054bbc58cddb12ebae9cbbbfa71bbdc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a4ac385574ec64e26477810bd13c8b9ab</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>ad9900c071c62f269add19b5f9fdad7a8</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>totalWidth</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a6b7e2f40853362504cc7bf1372f4de36</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>dataWidth</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a1cbce86b5c9ecfd3470825684c04630c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>type</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a301828f305b88687837fd7906634d38d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>speed</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>afdb0ad7d34cf8f0dcf022ccec0d31322</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serialNumber</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a9f558451b9c20361c0222e273836963c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>size</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>ab902a402ac0580a885be59e21909801d</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>swapSize</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a46677997b1ab64668fc3463e20b811d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>available</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a0550c8c3931bb78c2b979275f32785b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>buffers</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>ab3f714e932093d107ff6310f165e745b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>cached</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>ab0dbaea5f45baff84f11aadec5dc3a95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>active</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>aa9afa4ebc409a339018c396e719ea981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>inactive</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a614c8dba7d764eeee6d8d83bd881c2e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>sharedSize</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>ad53c768331484b67771b1c66aff28f7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>swapFree</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a0378b95002f4e0af72e84c80b7e76ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>swapCached</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a1aba2bae478076a4b396aeb291eeba8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>slab</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>ac503c23682f13db3a138bf23b9ab9633</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>dirty</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>a0c61675df83496f16de76167ebb6f214</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>mapped</name>
      <anchorfile>classDMemoryDevice.html</anchorfile>
      <anchor>adfedfbca297ef2f3fdc5b202a9991a19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DMemoryDevice</name>
    <filename>classDtk_1_1Device_1_1DMemoryDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DMemoryDevicePrivate</name>
    <filename>classDMemoryDevicePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DMenuExample</name>
    <filename>classDMenuExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DMessageManager</name>
    <filename>classDMessageManager.html</filename>
    <base>QObject</base>
    <base>QObject</base>
    <member kind="function">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a741a1b2ed704a7dc0c517caa4d4019e9</anchor>
      <arglist>(QWidget *par, DFloatingMessage *floMsg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a9810d61f821eb880e48e6e0eb3ffa0ee</anchor>
      <arglist>(QWidget *par, const QIcon &amp;icon, const QString &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setContentMargens</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>ab7c1295f3e92ef7b3fad204f3b843ecd</anchor>
      <arglist>(QWidget *par, const QMargins &amp;margins)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DMessageManager *</type>
      <name>instance</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a73e4a26ac05586b5b46c7c92e4c69c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>classDMessageManager.html</anchorfile>
      <anchor>a7e72fe455cfb7dfc16243b799923b410</anchor>
      <arglist>(QObject *watched, QEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DMessageManagerExample</name>
    <filename>classDMessageManagerExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>dmi_header</name>
    <filename>structdmi__header.html</filename>
  </compound>
  <compound kind="class">
    <name>DMotherboardDevice</name>
    <filename>classDMotherboardDevice.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>ac5f165d4ac2c7355f6227fef374165e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>afd3342ace48dd3f9fd2d6e485d8f293b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>date</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>a3b3ca8e008ff15ac99aa29c5e7178e60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serialNumber</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>a98a7a72ea7107c92b8ea919e8b1745ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>biosInformation</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>a1ff9b78765a835b110dd8234241bb669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>chassisInformation</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>a75eaafd2a1a26bc59f53697fcbf3f1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>PhysicalMemoryArrayInformation</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>a0c99a4f1e4544f3362f21c51afed84ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>temperature</name>
      <anchorfile>classDMotherboardDevice.html</anchorfile>
      <anchor>a24523376754906b93f7b2327413d07da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DMotherboardDevice</name>
    <filename>classDtk_1_1Device_1_1DMotherboardDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DMotherboardDevicePrivate</name>
    <filename>classDMotherboardDevicePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DMovableTabWidget</name>
    <filename>classDMovableTabWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>DMPRISControl</name>
    <filename>classDMPRISControl.html</filename>
    <base>QFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>setPictureVisible</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>ae2c46ff8a4850b165592c49ff49deff8</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setPictureSize</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>acd7e099807a63e0c8bc8844c42e7124b</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mprisAcquired</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>af77f2832d327bd9508205e60684c3dc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mprisChanged</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>a84800472cb873b33c42b6b97aaa780d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mprisLosted</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>a60a940f4772a055914cb664178b0db05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DMPRISControl</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>a0abe40115893d379d27c458399b50f64</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWorking</name>
      <anchorfile>classDMPRISControl.html</anchorfile>
      <anchor>ae5ee6e6372a85deb563a96f19c564fb2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DMPRISControl</name>
    <filename>classDtk_1_1Widget_1_1DMPRISControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DMPRISControlPrivate</name>
    <filename>classDMPRISControlPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DMPRISMonitor</name>
    <filename>classDMPRISMonitor.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMpvGLWidget</name>
    <filename>classDMpvGLWidget.html</filename>
    <base>QOpenGLWidget</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DMpvGLWidget</name>
      <anchorfile>classDMpvGLWidget.html</anchorfile>
      <anchor>a402684d4d1b655e2d7952d61955f78e6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DMpvProxy</name>
    <filename>classDMpvProxy.html</filename>
    <base>DPlayerBackend</base>
    <member kind="function">
      <type>void</type>
      <name>setDecodeModel</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>adee3f94b8eae27d246e720fa5cea5394</anchor>
      <arglist>(const QVariant &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshDecode</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a04eb06befd290f80c3c9bc8b9fc64069</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initMpvFuns</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ad20894b8bad891ee245082e1a214de8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>firstInit</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ae68d8b44acdb0b0a14ba553bee0d0900</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initSetting</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>aaba33550497eba8dad5cca43839b85c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PlayingMovieInfo &amp;</type>
      <name>playingMovieInfo</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>adcc8bc099ddff93cb435468346d1f39a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayable</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a65b636da5ca98223147abb56a00100da</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pollingEndOfPlayback</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>aaaf20e64be8f00d813b837fe220d30d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>duration</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ab0abd1b99b51d32b5753418a1c717337</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>elapsed</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a4111b2418bdfe5a40ca8e57781b1f7a0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>videoSize</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a497a55bb5da1af81846f705bf3e26e1b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaySpeed</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a77565e2b7b3cd567405e4eed4c655b0f</anchor>
      <arglist>(double dTimes) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>savePlaybackPosition</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a09ceec8ea48ce4142cf83a4dd23fb1d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadSubtitle</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ab8ad6df17eea37f6a84d4c4037bdf1d2</anchor>
      <arglist>(const QFileInfo &amp;fileInfo) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSubtitle</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a06d6dc7d5ef4bb2c74ce92019389b1e5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubVisible</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a9640a0982f6d8f0f4bab5bec57124502</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectSubtitle</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>aeb72f303b41eef5a8c65d204c4f9f863</anchor>
      <arglist>(int nId) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sid</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ac140dfdc2115394e72ce6731392b71a9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubDelay</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a660bff97e85947cb261a21870cba541e</anchor>
      <arglist>(double dSecs) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>subDelay</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a8c4737cb2c5a84e21016b8bdda36c171</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSubStyle</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a5888baa8e1f75baf7c46bb5903174b52</anchor>
      <arglist>(const QString &amp;sFont, int nSize) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSubCodepage</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>af167e0e975778d3c2075509f0c3dbda8</anchor>
      <arglist>(const QString &amp;sCodePage) override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>subCodepage</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>adec4669d061050be9e5e94490b92a153</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSubSearchPath</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a37542b27fc1943e28b640aa322bb56fd</anchor>
      <arglist>(const QString &amp;sPath) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectTrack</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>af36ce5377d17d20c7c3c8740ea13757f</anchor>
      <arglist>(int nId) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>aid</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a2b37a4e70f2f5343244e36457950f60b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeSoundMode</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a7788c4ae8dff2bc115a408b528bd33a3</anchor>
      <arglist>(SoundMode soundMode) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>volume</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ac778fd825526a29ccdf0eba321003fe5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>muted</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a029fce22286cc9095ea63d38e14f32a7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoAspect</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>aae5f83dbbda0831dd97cdba51adab581</anchor>
      <arglist>(double dValue) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>videoAspect</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a3c6f9b96ef4eeece1b82751459a69b07</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>videoRotation</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ac927fab54bf26bccf667a86ac8079bad</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoRotation</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>ad1399ffeb8bd8207b4a735633dba72d7</anchor>
      <arglist>(int nDegree) override</arglist>
    </member>
    <member kind="function">
      <type>QImage</type>
      <name>takeScreenshot</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a8599e28643c7debd5c5f7db1969f6bd5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>burstScreenshot</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>aa98116094297762f5370798f775ba187</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopBurstScreenshot</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a8d9e30708fe38866e14b7def90b3c785</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>getProperty</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>aed7932af6ff1d59cdb1f3fa5691422a2</anchor>
      <arglist>(const QString &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a7b38b8d34486816db4e2c1d9ff273842</anchor>
      <arglist>(const QString &amp;, const QVariant &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextFrame</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a2025e0f322b49506e4472aeb84c1d068</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>previousFrame</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a23c7b62d57f3210d7324777aac9ee856</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changehwaccelMode</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a2172784eecd50d9fcd482913752c671f</anchor>
      <arglist>(hwaccelMode hwaccelMode) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCurrent</name>
      <anchorfile>classDMpvProxy.html</anchorfile>
      <anchor>a057b0c9de970e34b4057818d4e7c9bc0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DMpvProxy</name>
    <filename>classDtk_1_1Multimedia_1_1DMpvProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>DMpvProxyPrivate</name>
    <filename>classDMpvProxyPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMultiOperateInterface</name>
    <filename>classDMultiOperateInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DMultiOperateInterfacePrivate</name>
    <filename>classDMultiOperateInterfacePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DNativeSettings</name>
    <filename>classDNativeSettings.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DNativeSettings</name>
    <filename>classDtk_1_1Gui_1_1DNativeSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>DNativeSettingsPrivate</name>
    <filename>classDNativeSettingsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DNetDevice</name>
    <filename>classDNetDevice.html</filename>
    <base>QObject</base>
    <class kind="struct">DNetDevice::DInetAddr4</class>
    <class kind="struct">DNetDevice::DInetAddr6</class>
    <class kind="struct">DNetDevice::DNetifInfo</class>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>ae8add68b3fa6617172184ac677997884</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>aa8b6059c8fa59275f23cd6ca733bade8</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a8e1945d4b4917252529e622da735bc4f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>type</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a0cd8daea38ca1b4a39f51a514a1dcdba</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>macAddress</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a26be2218db63ec5b3f6f947afbfd89bd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>driver</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a6d3181474507c2f46924febc49978cb2</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>speed</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>aafde49c013382de325278add626f2fcf</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>status</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a9ba53e8c33a16aae20bef80727aa4bab</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>DInetAddr4</type>
      <name>inetAddr4</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a95f4abbaa09c1e1b55307edbb70a735b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>DInetAddr6</type>
      <name>inetAddr6</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>abe0b46df1d80d1ee4c3bcbec81422d83</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>DNetifInfo</type>
      <name>netifInfo</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a232c06ac4f24cb89097cfd44a8a1772f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>portStatus</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>ac441cf5de92f33beee259428eef34ab2</anchor>
      <arglist>(int index, int port)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>applicationPorts</name>
      <anchorfile>classDNetDevice.html</anchorfile>
      <anchor>a37a7bab3f91dea8a065d58847b014065</anchor>
      <arglist>(int pid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DNetDevice</name>
    <filename>classDtk_1_1Device_1_1DNetDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DNetDevicePrivate</name>
    <filename>classDNetDevicePrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>DNetDevice::DNetifInfo</name>
    <filename>structDNetDevice_1_1DNetifInfo.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>rxPackets</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>aabd538692874d715395327b840f2ac04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>rxBytes</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a70810d080432c838829686fc718c049a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>rxErrors</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a34f8e71436908758c6118284c91fa452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>rxDropped</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a940b2e97e06666f71d3a9fbd2f7dbc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>rxFifo</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>aac2811098dd3ba3e9417b17ecde55ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>rxFrame</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a7f1675aa5d0fa8557be7290d241ad498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>txPackets</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>ab99cd8a185d68494e7e353e1c98eb694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>txBytes</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>ab18e90e2337ecdceb98d8daa5bf7efdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>txErrors</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a7f50302527a930dc189c2219ffd95fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>txDropped</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a446bf4247f800e920ec5c090452820e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>txFifo</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>a6b2393f547b9173c6f1b5725c93c7fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>txCarrier</name>
      <anchorfile>structDNetDevice_1_1DNetifInfo.html</anchorfile>
      <anchor>ae32803b8643055e507039f138efc12ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DNetDevice::DNetifInfo</name>
    <filename>structDtk_1_1Device_1_1DNetDevice_1_1DNetifInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DNetworkManager</name>
    <filename>classDNetworkManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; quint64 &gt;</type>
      <name>activateConnection</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>aaafa3704061a114de9c3c5d181029d4e</anchor>
      <arglist>(const quint64 connId, const quint64 deviceId, const qint64 objId=0) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; NewConn &gt;</type>
      <name>addAndActivateConnection</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a8b9fd78c61cee64023d952d3a1ff80d7</anchor>
      <arglist>(const SettingDesc &amp;conn, const quint64 deviceId, const qint64 objId=0) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>deactivateConnection</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a5201853694019bc3e9e23178e2ad71dd</anchor>
      <arglist>(const quint64 activeConnId) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>enable</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a2da9f02c76caf76d76f833c64c429d63</anchor>
      <arglist>(const bool enabled) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; NMConnectivityState &gt;</type>
      <name>checkConnectivity</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>af4ce2024f2dad832373abcc936e4bb43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>networkingEnabledChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a81b31feb47df12c05bf83f6db2157633</anchor>
      <arglist>(const bool enable)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wirelessEnabledChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>ac22273ada6c54b9fbabdb21c79195572</anchor>
      <arglist>(const bool enable)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wirelessHardwareEnabledChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a3294c3dfcbf6a61f3dc5daaad29330bd</anchor>
      <arglist>(const bool enable)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeConnectionsChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a4d5e4dca98a441db6c69f96a69de6709</anchor>
      <arglist>(const QList&lt; quint64 &gt; &amp;connIds)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>primaryConnectionChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>afadf3c7973a0fffe52644eccbe170279</anchor>
      <arglist>(const quint64 connId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>primaryConnectionTypeChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>addad447a220b079d2610cd8ee6ae45cf</anchor>
      <arglist>(const DNMSetting::SettingType &amp;type)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectivityChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a054049e8cd39e86f251f200262ff2eb5</anchor>
      <arglist>(const NMConnectivityState connState)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DeviceAdded</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a3faeaa86edceb6b14dce5066e6da8722</anchor>
      <arglist>(const quint64 deviceId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>DeviceRemoved</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a02dd94a1525753e5bc01a54dab6d58b7</anchor>
      <arglist>(const quint64 deviceId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>CheckPermissions</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a000aa392e2d877007bb0bc9c982244b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>StateChanged</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a38fc3e9c528b3e1f9b001d0ca6f71176</anchor>
      <arglist>(const NMState state)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>networkingEnabled</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a6c061e50dbdc3d29dd3a848fa0f2a1f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wirelessEnabled</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a9be35abb194bee3d492aadf36f3eb53d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWirelessEnabled</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a1e7e8fbfcf780abcf250adf1ee71fdbe</anchor>
      <arglist>(const bool enable) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wirelessHardwareEnabled</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a46546bce102882fd021892ab3044ebac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; quint64 &gt;</type>
      <name>getActiveConnectionsIdList</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a3e47d62b522c86a943318c9a8ee1860a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>primaryConnection</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a56035b3fd1d72c86ea2f446822929a5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DNMSetting::SettingType</type>
      <name>primaryConnectionType</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>aeed8455af1fc87d032ccc1d831452464</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMState</type>
      <name>state</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a22011852b4aa635c2a9dfabc17e5b737</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMConnectivityState</type>
      <name>connectivity</name>
      <anchorfile>classDNetworkManager.html</anchorfile>
      <anchor>a0b3e773eb9ce3757eaf000145ea2e6f8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DNetworkManager</name>
    <filename>classDtk_1_1NetworkManager_1_1DNetworkManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DNetworkManagerInterface</name>
    <filename>classDNetworkManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DNetworkManagerPrivate</name>
    <filename>classDNetworkManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DNMSetting</name>
    <filename>classDNMSetting.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DNMSetting</name>
    <filename>classDtk_1_1NetworkManager_1_1DNMSetting.html</filename>
  </compound>
  <compound kind="class">
    <name>DNMSettingPrivate</name>
    <filename>classDNMSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DNotificationAppConfig</name>
    <filename>classDNotificationAppConfig.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>notificationEnabledChanged</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a0ea3f317ea98fa2dd0e5ea71ec2e5fcc</anchor>
      <arglist>(const QString &amp;id, const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>previewEnabledChanged</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a6e86cb51f98496cf6738ee282ebabf78</anchor>
      <arglist>(const QString &amp;id, const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>soundEnabledChanged</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a51691ebe7eb14dc39ad97551cf6eb74e</anchor>
      <arglist>(const QString &amp;id, const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>showInNotificationCenterEnabledChanged</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>aa11433c23d8cf80bfada19e8bec2df3c</anchor>
      <arglist>(const QString &amp;id, const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>showInLockScreenEnabledChanged</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a7152de555a37aab4b5799384a1d88725</anchor>
      <arglist>(const QString &amp;id, const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DNotificationAppConfig</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>af5a07aa8a5a000489efe2265b908800a</anchor>
      <arglist>(const QString &amp;id, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>appName</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>aa557a902fa679a003f8b409d2374b2d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>appIcon</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a0b3776a8aa7b0f5642946c66643ad9be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>notificationEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a485dfad3c66c09e820544df0bef2d675</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setNotificationEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a521c26f53c2f20a552aa84599f142d41</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>previewEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>adf3eebb073520617c9a014faa5f8c9f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setPreviewEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a62adbe95490ad39b5852b037fdbef3fb</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>soundEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a42a77fa4be9509a187c9cc3c1d44b9f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setSoundEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a02b76bf4e1e5e86f462ccc10f3be7538</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showInNotificationCenterEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a4aa50f35f5cc69c3605cc24db4977ef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setShowInNotificationCenterEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a1d0f7b83eef9025923a80f6a549069a6</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showInLockScreenEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>aa9b347af24f016f8fd00e38ae97a372f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setShowInLockScreenEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>af9730bd0a9e7a7bcbce87306f18c882e</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>appName</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a057c44219c4051a1d88cfb4b2e1d870d</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>appIcon</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>ab2d5a1db47c1984106ab305c19145868</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>notificationEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>ad6c2c9637286a9b86bac5e94a636d131</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>previewEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>ab9bee65906c61520b70aa0e01c4eb93f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>soundEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a46514b8b22f8d20b97a2ea6bcabc4f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>showInNotificationCenterEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a15d319390fa5ef0657ddc02b815931f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>showInLockScreenEnabled</name>
      <anchorfile>classDNotificationAppConfig.html</anchorfile>
      <anchor>a9e315a2270d382237c5fd940d5299b03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Notifications::DNotificationAppConfig</name>
    <filename>classDtk_1_1Notifications_1_1DNotificationAppConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>DNotificationAppConfigPrivate</name>
    <filename>classDNotificationAppConfigPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>DNotificationData</name>
    <filename>structDNotificationData.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>appName</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>abab904a9f9943daeb4146c0f56a1855b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>id</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>afede760ef3706790f4b511a48b805419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>appIcon</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>a69317d0bc58315c480e9e05b8568ba19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>summary</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>a2cf2be312b4c72b6bf3d042ea28afe5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>body</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>acdbfe0f337b4f54da27a978c01dc6ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QStringList</type>
      <name>actions</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>ac62b2f5a55ee6597f1262ef17735c284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QVariantMap</type>
      <name>hints</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>a8351cb13dd365cab9c164642f4fddbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>ctime</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>acb50a2bae88d7e4bbbdc3b169fcfe6af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>replacesId</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>a9745106b6ae0d452f117e8a98ffcf398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>timeout</name>
      <anchorfile>structDNotificationData.html</anchorfile>
      <anchor>a2d2313b3ba3bdc7a7c284839d29b242d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Notifications::DNotificationData</name>
    <filename>structDtk_1_1Notifications_1_1DNotificationData.html</filename>
  </compound>
  <compound kind="class">
    <name>DNotificationDNDModeConfig</name>
    <filename>classDNotificationDNDModeConfig.html</filename>
    <base>Dtk::Notifications::DAbstractNotificationModeConfig</base>
    <member kind="signal">
      <type>void</type>
      <name>DNDModeInLockScreenEnabledChanged</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a2d9984498519020f0f2ac301e0fc212d</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>openByTimeIntervalEnabledChanged</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a8792c1044edd6ab2a292f0772111b052</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>startTimeChanged</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a555aab9d570e12ece99c536dcfa2b3fd</anchor>
      <arglist>(const QString &amp;startTime)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>endTimeChanged</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a04b93bad028b605825d51e237f7c35c4</anchor>
      <arglist>(const QString &amp;endTime)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>showIconEnabledChanged</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>ad7bd6211b1a26fef8020c7eb58349d74</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DNotificationDNDModeConfig</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>ac08716a13476218f1c52d6d777d384ed</anchor>
      <arglist>(const QString &amp;name, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>aab1d6f995b7ab30e739a7503f2195ec9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a2ec903753a29ca83b9e95abfb0c45b11</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DNDModeInLockScreenEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a40c2833957f2208ff3e9a7bb05d999c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setDNDModeInLockScreenEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>aeb193b319792c098b3c2cfe2ce92387a</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>openByTimeIntervalEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>ae49834a90793b773d6c5fb53fc515712</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setOpenByTimeIntervalEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a0ad0d115370218dc863e4d457c89f98e</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>startTime</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a301e873c52ec46c6533c083ed1bdcef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setStartTime</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a01f790e2aa87671a8b66b9a7664ced50</anchor>
      <arglist>(const QString &amp;startTime)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>endTime</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a6b951ef6b08e344d4f2bdc7c66c23481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setEndTime</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>ab7f9f53b1df5ec03aed25ec395af9914</anchor>
      <arglist>(const QString &amp;endTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showIconEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a0d87d948858dbd24fe5b040ddf0aade7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DExpected&lt; void &gt;</type>
      <name>setShowIconEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a1835d9708e1d5c640032490225249eba</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>DNDModeInLockScreenEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a7530d966763f80ee66110e9ba6f7c11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>openByTimeIntervalEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a5c672f0445652aa7d492ccfcd825bcc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>startTime</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a82e4d883b69c093ade0c1e36256017d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>endTime</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>af2c5444a1893b4b585939e49353f590b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>showIconEnabled</name>
      <anchorfile>classDNotificationDNDModeConfig.html</anchorfile>
      <anchor>a385157fad015a6549256b7397c98bede</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Notifications::DNotificationDNDModeConfig</name>
    <filename>classDtk_1_1Notifications_1_1DNotificationDNDModeConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>DNotificationDNDModeConfigPrivate</name>
    <filename>classDNotificationDNDModeConfigPrivate.html</filename>
    <base>DAbstractNotificationModeConfigPrivate</base>
  </compound>
  <compound kind="class">
    <name>DNotificationInterface</name>
    <filename>classDNotificationInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DNotificationManager</name>
    <filename>classDNotificationManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; DNotificationData &gt;</type>
      <name>getRecordById</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>aef194b91842a79ce8987ab2cbaa9dcee</anchor>
      <arglist>(const QString &amp;id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; int &gt;</type>
      <name>recordCount</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>afba0cb2ada3b8ae8ac42b472781c1bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>clearRecords</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>a983c228d14ebff6405ebd1cd33d8a9d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>removeRecord</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>ab59d7c5c4b4cea2780ddc0c993fbecea</anchor>
      <arglist>(const QString &amp;id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; ServerInformation &gt;</type>
      <name>serverInformation</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>a62a1dc80714db9b650d5eec410c901b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>capbilities</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>ab72900006dc15e081fcde2556bf65a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; uint &gt;</type>
      <name>notify</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>a31ac38ea121fb536cf0616fdd37566fd</anchor>
      <arglist>(const QString &amp;appName, uint replacesId, const QString &amp;appIcon, const QString &amp;summary, const QString &amp;body=QString(), const QStringList &amp;actions=QStringList(), const QVariantMap hints=QVariantMap(), int expireTimeout=5000)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>closeNotification</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>a50e2fdaa367952c1618feb84381d123f</anchor>
      <arglist>(uint id)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>appList</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>ab875c43ab2f196c12c240e9ba0ff1b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DNotificationManager</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>a4d170d22a08aeffe2acce7f586484610</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QString &gt;</type>
      <name>recordIds</name>
      <anchorfile>classDNotificationManager.html</anchorfile>
      <anchor>ad066ecf64527a573bd88959b0799ebc2</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Notifications::DNotificationManager</name>
    <filename>classDtk_1_1Notifications_1_1DNotificationManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DNotificationManagerPrivate</name>
    <filename>classDNotificationManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DUtil::DNotifyData</name>
    <filename>structDtk_1_1Core_1_1DUtil_1_1DNotifyData.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUtil::DNotifySender</name>
    <filename>classDtk_1_1Core_1_1DUtil_1_1DNotifySender.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DObject</name>
    <filename>classDtk_1_1Core_1_1DObject.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>DObject</name>
      <anchorfile>classDtk_1_1Core_1_1DObject.html</anchorfile>
      <anchor>adbed6e66a1393a6045fb24e50300db7f</anchor>
      <arglist>(DObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DObject</name>
      <anchorfile>classDtk_1_1Core_1_1DObject.html</anchorfile>
      <anchor>a64d70b82c64f7d7e71d4775854b25206</anchor>
      <arglist>(DObjectPrivate &amp;dd, DObject *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DObjectPrivate</name>
    <filename>classDtk_1_1Core_1_1DObjectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DOcr</name>
    <filename>classDOcr.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>QStringList</type>
      <name>installedPluginNames</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a51dac436d8a982ecb6af5e28bae4de7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadDefaultPlugin</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a20a9bb1b2e3dbaacdadf7bb474e6a769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadPlugin</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a16d930ebdc62f447cd92b074a8e99cdf</anchor>
      <arglist>(const QString &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pluginReady</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a4f2c2391965da4a4b30432bcaf5eaf9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; HardwareID &gt;</type>
      <name>hardwareSupportList</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>aec7762b699a8841ff31efcacc1e3e356</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setUseHardware</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a0729f00a8864e3d0d7f220fe013a2aa4</anchor>
      <arglist>(const QList&lt; QPair&lt; HardwareID, int &gt;&gt; &amp;hardwareUsed)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setUseMaxThreadsCount</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>af73eeed9a716fdb3f6f4e4e829ada4a4</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>authKeys</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a83d20c72e3183751941b4f35406b39f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAuth</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a52848716b159fc009028c75625744c28</anchor>
      <arglist>(const QStringList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>imageFileSupportFormats</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a2b0d547d003cb62b7f3142927558b1ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setImageFile</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a39fe1ea6e67e026c2504df3c54f22a4a</anchor>
      <arglist>(const QString &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setImage</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a15aa4c2f5361297b6b75f3caabe057ed</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>QImage</type>
      <name>imageCached</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a6f7783d27951118b07d4fac531ceeb0c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>pluginExpandParam</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a59d53ebf4ae57dc93d70805090b4349a</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPluginExpandParam</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a5d4f86108fab9f32cc4e076f4a56b91f</anchor>
      <arglist>(const QString &amp;key, const QString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>analyze</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>ac5c047e68c60d3466c2781ed2cd869a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>breakAnalyze</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a0b201751ef609e01bc12e59cc4491993</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>ac168a428825e74923c3a78c50dde7dda</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>languageSupport</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a1b5cca09060acf24f60e89d67fb1e938</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setLanguage</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>aa234225d4d3e7971d9e41e1f244d93ca</anchor>
      <arglist>(const QString &amp;language)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; TextBox &gt;</type>
      <name>textBoxes</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>af2ef46d9fc32011379196cc684b7c073</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; TextBox &gt;</type>
      <name>charBoxes</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a19fa671ab1926b00b497c08035987bd9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>simpleResult</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a29ece72324ba48619b1d67ca94e0a014</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>resultFromBox</name>
      <anchorfile>classDOcr.html</anchorfile>
      <anchor>a4ed194985dc16d1ec1028ee409825cf7</anchor>
      <arglist>(int index) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Ocr::DOcr</name>
    <filename>classDtk_1_1Ocr_1_1DOcr.html</filename>
  </compound>
  <compound kind="class">
    <name>DOcrPluginInterface</name>
    <filename>classDOcrPluginInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DOcrPrivate</name>
    <filename>classDOcrPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DOpenGLBlurEffectNode</name>
    <filename>classDOpenGLBlurEffectNode.html</filename>
    <base>DSGBlurNode</base>
  </compound>
  <compound kind="class">
    <name>DOpticalDiscInfo</name>
    <filename>classDOpticalDiscInfo.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DOpticalDiscInfo</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>a4787ab53d332f9b3a288d5d3f41d2ce3</anchor>
      <arglist>(const DOpticalDiscInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>DOpticalDiscInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>accd37e5a95a3bde5125ecb60a229bc70</anchor>
      <arglist>(const DOpticalDiscInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>blank</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>a05053f73e9e7091df53b2853b3b39b48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>device</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>acb8ec7d9fddeb4a4cb68d084536bbe6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>volumeName</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>a03687d1e9b42511263f098f52f56b914</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>usedSize</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>a4b9bff9c63098509dc7244a30224abb8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>availableSize</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>ad36dc1c3f0ce2c0b4b1902382f65c8cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>totalSize</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>afcab7cb7342e3564d362bdb8b19929dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>dataBlocks</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>a69668ae9149cd511d0a4dfcdb67363ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MediaType</type>
      <name>mediaType</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>af2a92781ddf645c17f8b71bf7960e2f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>writeSpeed</name>
      <anchorfile>classDOpticalDiscInfo.html</anchorfile>
      <anchor>a35b90f981b0abbb9528a39112bf6a8b8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Burn::DOpticalDiscInfo</name>
    <filename>classDtk_1_1Burn_1_1DOpticalDiscInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DOpticalDiscInfoPrivate</name>
    <filename>classDOpticalDiscInfoPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DOpticalDiscOperator</name>
    <filename>classDOpticalDiscOperator.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>jobStatusChanged</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a55422ecf2a696403b5e8929380516a51</anchor>
      <arglist>(JobStatus status, int progress, QString speed, QStringList message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeed</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>aa53d591f3b84ffb2e27ab80d7b52014f</anchor>
      <arglist>(int speed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeName</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a23a3a363ee8dc2a5e82aaf49fdfd471d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCheckPrecision</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>ab14d9debdcb5d79888871dad9436216d</anchor>
      <arglist>(double checkPrecision)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>speed</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>aa1af467f5b265758f0e4323b115b88cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>volumeName</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a72100b9a20c2809913d60f67e5a7ac67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>checkPrecision</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a02a5ee81651407581298d819c2715143</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DTK_CORE_NAMESPACE::DExpected&lt; bool &gt;</type>
      <name>burn</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a0affa775348b315e7fcf3aa078ed6d65</anchor>
      <arglist>(const QString &amp;stagePath, const BurnOptions &amp;opts)</arglist>
    </member>
    <member kind="function">
      <type>DTK_CORE_NAMESPACE::DExpected&lt; bool &gt;</type>
      <name>erase</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a054735a337ea0a17cd6f64bd5c6ffa1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DTK_CORE_NAMESPACE::DExpected&lt; bool &gt;</type>
      <name>checkmedia</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>ae8e2e4f04c802d90c2d656898ca4d1f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DTK_CORE_NAMESPACE::DExpected&lt; bool &gt;</type>
      <name>writeISO</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>a591addad85af8a56f25ba57a1068f40b</anchor>
      <arglist>(const QString &amp;isoPath)</arglist>
    </member>
    <member kind="function">
      <type>DTK_CORE_NAMESPACE::DExpected&lt; bool &gt;</type>
      <name>dumpISO</name>
      <anchorfile>classDOpticalDiscOperator.html</anchorfile>
      <anchor>af21174bdd367688e3ad0c7660fa5de74</anchor>
      <arglist>(const QString &amp;isoPath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Burn::DOpticalDiscOperator</name>
    <filename>classDtk_1_1Burn_1_1DOpticalDiscOperator.html</filename>
  </compound>
  <compound kind="class">
    <name>DOpticalDiscOperatorPrivate</name>
    <filename>classDOpticalDiscOperatorPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>dospartition</name>
    <filename>structdospartition.html</filename>
  </compound>
  <compound kind="class">
    <name>DPageIndicator</name>
    <filename>classDPageIndicator.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DPageIndicator</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ab7789c5054c56825e3ca03c8bc733986</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextPage</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ac27ef14a647f3ab4fd1391935e1c8fcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>previousPage</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>a3c74435bd07d3f9c3e08bc539b68b91a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>pointColor</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>aced54d81378553e6fc6aafebf12c5fd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>secondaryPointColor</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ab9448c5dadf2b830045631a71841fb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>pointRadius</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>acb95b8213a45fa8b12bdc3e77b5d7985</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>secondaryPointRadius</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ae57a83a0537deaeed5627dbdc2658ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>pageCount</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>a670e0e75b766fe9ee46d2788da8f0ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>currentPage</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>ae490c57259aef4492790710ececef20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>pointDistance</name>
      <anchorfile>classDPageIndicator.html</anchorfile>
      <anchor>a71e362918ee4aa2bffcdd5cfe930fd0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPageIndicator</name>
    <filename>classDtk_1_1Widget_1_1DPageIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>DPageIndicatorPrivate</name>
    <filename>classDPageIndicatorPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPalette</name>
    <filename>classDPalette.html</filename>
    <base>QPalette</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPalette</name>
    <filename>classDtk_1_1Gui_1_1DPalette.html</filename>
  </compound>
  <compound kind="struct">
    <name>DPaletteData</name>
    <filename>structDPaletteData.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DPaletteHelper</name>
    <filename>classDPaletteHelper.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>DPalette</type>
      <name>palette</name>
      <anchorfile>classDPaletteHelper.html</anchorfile>
      <anchor>ae66bb4e8c61643a57596cd9fd81cd925</anchor>
      <arglist>(const QWidget *widget, const QPalette &amp;base=QPalette()) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPalette</name>
      <anchorfile>classDPaletteHelper.html</anchorfile>
      <anchor>a5a016ba82cc6031c62bb3ebda2eabcf7</anchor>
      <arglist>(QWidget *widget, const DPalette &amp;palette)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPalette</name>
      <anchorfile>classDPaletteHelper.html</anchorfile>
      <anchor>a3be37722bf585dd680492dd741ca64ed</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPaletteHelperPrivate</name>
    <filename>classDPaletteHelperPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPalettePrivate</name>
    <filename>classDPalettePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPasswordEdit</name>
    <filename>classDPasswordEdit.html</filename>
    <base>DLineEdit</base>
    <member kind="function">
      <type></type>
      <name>DPasswordEdit</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>a39f19102a490d338fa09a34c35d4a9d0</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoMode</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>a434d1cf3d55b7cec0cecd0adc8361429</anchor>
      <arglist>(QLineEdit::EchoMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEchoButtonIsVisible</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>adc2d87502e2e579c74a0444cbc2b6785</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>echoButtonIsVisible</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>ab6ab508599c16d97dffad5699869458e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>isEchoMode</name>
      <anchorfile>classDPasswordEdit.html</anchorfile>
      <anchor>a71cb87707ffbb69109000c0ada23bb82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPasswordEdit</name>
    <filename>classDtk_1_1Widget_1_1DPasswordEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DPasswordEditExample</name>
    <filename>classDPasswordEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DPasswordEditPrivate</name>
    <filename>classDPasswordEditPrivate.html</filename>
    <base protection="private">DLineEditPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DPathBuf</name>
    <filename>classDtk_1_1Core_1_1DPathBuf.html</filename>
    <member kind="function">
      <type></type>
      <name>DPathBuf</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a2831dcece57d0f40cce47357424cc28a</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf</type>
      <name>operator/</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a90c38df84bf0462a68fd457343715b06</anchor>
      <arglist>(const QString &amp;p) const</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf &amp;</type>
      <name>operator/=</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a7253a93ab4d85fdffb093ef21b4d4905</anchor>
      <arglist>(const QString &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf</type>
      <name>operator/</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a04d2fba12191b534d1ca64f127997ca8</anchor>
      <arglist>(const char *p) const</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf &amp;</type>
      <name>operator/=</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a0de456a569c07afe3279f1f94901e548</anchor>
      <arglist>(const char *p)</arglist>
    </member>
    <member kind="function">
      <type>DPathBuf &amp;</type>
      <name>join</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>afc3fa93c57c3facf6a95cdc9a105482b</anchor>
      <arglist>(const QString &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>toString</name>
      <anchorfile>classDtk_1_1Core_1_1DPathBuf.html</anchorfile>
      <anchor>a8d6940c803d60d057cb19c96b394d3c8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPictureSequenceView</name>
    <filename>classDPictureSequenceView.html</filename>
    <base>QGraphicsView</base>
    <member kind="function">
      <type>void</type>
      <name>setPictureSequence</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>ac09371d53773cc9549b19679c5c30a7c</anchor>
      <arglist>(const QString &amp;srcFormat, const QPair&lt; int, int &gt; &amp;range, const int fieldWidth=0, const bool autoScale=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPictureSequence</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a4b7eed20ff312055c10a34488ad559ac</anchor>
      <arglist>(const QStringList &amp;sequence, const bool autoScale=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPictureSequence</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a74710a3f0ce4340d25b3ce112d9c79d8</anchor>
      <arglist>(const QList&lt; QPixmap &gt; &amp;sequence, const bool autoScale=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a082b32064e2d9ab7338ab81719a2e5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a941ba22e8cfe8e244d968fb2072480c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a6c15729f5945847877a64d85106144a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>speed</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>afd120fee5eafa1956d792656c0c539d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>singleShot</name>
      <anchorfile>classDPictureSequenceView.html</anchorfile>
      <anchor>a12799ee97717f19179a82a8eb10d7aa7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPictureSequenceView</name>
    <filename>classDtk_1_1Widget_1_1DPictureSequenceView.html</filename>
  </compound>
  <compound kind="class">
    <name>DPictureSequenceViewPrivate</name>
    <filename>classDPictureSequenceViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformHandle</name>
    <filename>classDPlatformHandle.html</filename>
    <base>QObject</base>
    <class kind="struct">DPlatformHandle::WMBlurArea</class>
    <member kind="signal">
      <type>void</type>
      <name>frameMarginsChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a845dbc8d40ab70865b6a7731f1a6d6c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowRadiusChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>ab1e032a9f8338658f182430c202f92ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>borderWidthChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a825bb81c64c1460194826b2a183671bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>borderColorChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9dd80b510a674b98c53e4a149e0d7a58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>shadowRadiusChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>ab158aab5564de25bf3e87b2bcf941480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>shadowOffsetChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>af6518f63f4dbbb859f07f425e9c34c7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>shadowColorChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a180aba3d23acdd3ef8f41fad519c4a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>clipPathChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a5235efca4c5c9c3a6ead078788d30d9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>frameMaskChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a8dd52ef16e924b1399a2d26161d2eb2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>translucentBackgroundChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a88bdb8289e83ba74189a4b3376d5420a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enableSystemResizeChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a2865e19535533fc41a09290e1da0fb2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enableSystemMoveChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a867185aced745da4b6d2b2b7e0213060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>enableBlurWindowChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aeb76d667f43f22b999a385a069307f9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autoInputMaskByClipPathChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a52a54995c7d015714916fa95e8bce9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPlatformHandle</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a14b80834f809255088d7ec212352bf7f</anchor>
      <arglist>(QWindow *window, QObject *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a363a1c10ff4cf65a99ab2ad2190d7aa1</anchor>
      <arglist>(const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9cd159ce97aba6625f8c0bba202a5030</anchor>
      <arglist>(const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>pluginVersion</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a554ca579eadef8661ba9137841d43145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isDXcbPlatform</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a35f657dbe43e39173d3273c606a90e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>af3b721488a8806b2c9c1234f1502a938</anchor>
      <arglist>(QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9e9d88df1f55fbe4719437e442a2a70f</anchor>
      <arglist>(QWindow *window, bool redirectContent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEnabledDXcb</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>adf6e1f96fe6c171bff4df8b8122bacca</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setEnabledNoTitlebarForWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>adc29447f924d81d9a2920f67f6eb44b0</anchor>
      <arglist>(QWindow *window, bool enable)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEnabledNoTitlebar</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>ac9a2fc45da432972e4c484c285701f68</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a12799d43fdde33892ed039d56bb0cd9e</anchor>
      <arglist>(QWindow *window, const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a583f28cc2ab7f9054c158b66ea4dec0c</anchor>
      <arglist>(QWindow *window, const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowWallpaperParaByWM</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a75bdab76f6827c87997e1adce95eaafc</anchor>
      <arglist>(QWindow *window, const QRect &amp;area, WallpaperScaleMode sMode, WallpaperFillMode fMode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>connectWindowManagerChangedSignal</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aa1109073d6261e00664235db0beda245</anchor>
      <arglist>(QObject *object, std::function&lt; void()&gt; slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>connectHasBlurWindowChanged</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a25b9adb9a27f49e5cbb90041cb69e518</anchor>
      <arglist>(QObject *object, std::function&lt; void()&gt; slot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDisableWindowOverrideCursor</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6bc5638992be7c42f2a2b9d0a25c71b4</anchor>
      <arglist>(QWindow *window, bool disable)</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>windowRadius</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6d0904a0b267e9d34635ccc31eb196bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>borderWidth</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a9562072e251825f5307f256e707c6f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>borderColor</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a3ccd7beb3a23ebcd17bf51aa680fd7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>shadowRadius</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>afeea74766ff390d26d6a6f3ff44c9170</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPoint</type>
      <name>shadowOffset</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aab3f6cbcc69fe9a3046918384a33fa63</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>shadowColor</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a2798b07e7b02a25e311f0e679227ee29</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPainterPath</type>
      <name>clipPath</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a1e93560464a6e1683dced96ba886cbdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QRegion</type>
      <name>frameMask</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a35a29cfc9048abd255d78be4b576e585</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QMargins</type>
      <name>frameMargins</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>aa3be0a553c8620caed45a55014f6ffa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>translucentBackground</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a10d0602fb432db6ec94dd65ea19898d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a21e084c76bd05c1cad9eb0b0fce22a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemMove</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a3b3e9667c10a30bd5c6e39d57c01e7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableBlurWindow</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6c07df44e93a692fcd1bcbd827344ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoInputMaskByClipPath</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a6bb9133c8732f5f27c6167e8c2a5a170</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>WId</type>
      <name>realWindowId</name>
      <anchorfile>classDPlatformHandle.html</anchorfile>
      <anchor>a84106ee177acd75c90901d81747776e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPlatformHandle</name>
    <filename>classDtk_1_1Gui_1_1DPlatformHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformMediaPlayer</name>
    <filename>classDPlatformMediaPlayer.html</filename>
    <base>QObject</base>
    <member kind="function" virtualness="virtual">
      <type>virtual QMediaPlayer::State</type>
      <name>state</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a0fe9a9e60a9b17c90a2024c78bd4830e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QMediaPlayer::MediaStatus</type>
      <name>mediaStatus</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a5a35554c7e0de950d9e0cf3725dae7fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qint64</type>
      <name>duration</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>aa3eb4d52349043c7f9217225d61260db</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qint64</type>
      <name>position</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a289be0947f0a29e79175fbda32cb1fe2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPosition</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>aa0dd237ce47d11ab08df21affe4e0a45</anchor>
      <arglist>(qint64 position)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>bufferProgress</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ab032f37ff353578acac900a4f3ca33da</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAudioAvailable</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a1ee02216223b33741f5053a9c436c2d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVideoAvailable</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ac3085388d6290eb4d7d07b19740b6e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSeekable</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a64fe3ed628ebbcf21cf73d042ba69fb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QMediaTimeRange</type>
      <name>availablePlaybackRanges</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a71896c5e482b73577702fe9969f1ee0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual qreal</type>
      <name>playbackRate</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>afe4db3b8d76b684221b930f0aa66c32f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPlaybackRate</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a5d58eaf50acbdb12d48cc1f789e57733</anchor>
      <arglist>(qreal rate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QUrl</type>
      <name>media</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a63916c0f63c6808f07925bf2df1162ae</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const QIODevice *</type>
      <name>mediaStream</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a30afe4c815efb75665fc19a819b1b1d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMedia</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a34969a10b0eb3277e654c27e828de7c5</anchor>
      <arglist>(const QUrl &amp;media, QIODevice *stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVolume</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>aebded533cec91895e08fc71306ebe526</anchor>
      <arglist>(float volume)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMuted</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a1555116db0a12bddc3c20e6b49df0b8a</anchor>
      <arglist>(bool muted)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>play</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a13d7d3e35012256ceadbb6e001dd2f07</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pause</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a89a5b48cd7b57cfc4fb2138651395b54</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a34f56f85045b3684fdbb94f054beb5b6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>streamPlaybackSupported</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>af621e1a23cb2b22db91ac81f35c8987d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAudioOutput</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ab30d0ebf12a32869db1e686bd6084072</anchor>
      <arglist>(QPlatformAudioOutput *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DMediaMetaData</type>
      <name>metaData</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a77a789ea0e133cc5677b341137a973ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVideoSink</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a7ed8659bd1aa4a148eb3f1ba0a44e61f</anchor>
      <arglist>(DVideoSink *)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>trackCount</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>acaa213a15b83f84086168f34e28b0624</anchor>
      <arglist>(TrackType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DMediaMetaData</type>
      <name>trackMetaData</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>aff7577d430aef3099146fa45efe54e58</anchor>
      <arglist>(TrackType, int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>activeTrack</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a7b145988091e9a983e82235ff5d51e2e</anchor>
      <arglist>(TrackType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setActiveTrack</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ae6866f0fd7ebe4bef9c2d2ea56d44cf7</anchor>
      <arglist>(TrackType, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>durationChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a76cc56a7c600f1811cef153dd54b29e5</anchor>
      <arglist>(qint64 duration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>positionChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a766841abb97fdef091899f41367c4849</anchor>
      <arglist>(qint64 position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>audioAvailableChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>acf1601595d979798c7423b68cc79e66f</anchor>
      <arglist>(bool audioAvailable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>videoAvailableChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>aced8c8a0e9e76702b9d00f571eb4f539</anchor>
      <arglist>(bool videoAvailable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>seekableChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a11091c6e29bbdfee515e8b0f3e6c2fda</anchor>
      <arglist>(bool seekable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>volumeChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a915d0cf9a71a2d511871cd81869c1acc</anchor>
      <arglist>(int volume)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mutedChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a8d72585520f5d086131b3144b85b7c53</anchor>
      <arglist>(bool muted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playbackRateChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a59acaac44058e1dd53422c85c592cbbf</anchor>
      <arglist>(qreal rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bufferProgressChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>abc8fc4b23270644a7b26f998d4ef9010</anchor>
      <arglist>(float progress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>metaDataChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a98cc1fdbfceaf843b153aa6839efd445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tracksChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a571397f1478d45756b098b4a2b569afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>activeTracksChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a4f2335c2037f443fe693e1d19b6a4852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stateChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a64a9b3f7d01b434675027051ee594956</anchor>
      <arglist>(QMediaPlayer::State newState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mediaStatusChanged</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ac6c92b76b2581652fbf93e2dd3be5a5c</anchor>
      <arglist>(QMediaPlayer::MediaStatus status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ab956901cf8e58eb812eb8885c7368cb9</anchor>
      <arglist>(int error, const QString &amp;errorString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCurrentLoop</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ac5deb4136f5cc64deb3de5ee8a2f2cd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doLoop</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>a59e856d6ca835cddb480e2783541002f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>loops</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>afd1c5ea6c258a6351ddd4c788fff1d5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoops</name>
      <anchorfile>classDPlatformMediaPlayer.html</anchorfile>
      <anchor>ae138b4e5e41bf55a1d409e7528d99111</anchor>
      <arglist>(int loops)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DPlatformMediaPlayer</name>
    <filename>classDtk_1_1Multimedia_1_1DPlatformMediaPlayer.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformMediaPlayerPrivate</name>
    <filename>classDPlatformMediaPlayerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPlatformTheme</name>
    <filename>classDPlatformTheme.html</filename>
    <base>DNativeSettings</base>
    <member kind="property">
      <type>int</type>
      <name>sizeMode</name>
      <anchorfile>classDPlatformTheme.html</anchorfile>
      <anchor>a7345947704c2552a05e6fa5858eadd0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPlatformTheme</name>
    <filename>classDtk_1_1Gui_1_1DPlatformTheme.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformThemePrivate</name>
    <filename>classDPlatformThemePrivate.html</filename>
    <base>DNativeSettingsPrivate</base>
  </compound>
  <compound kind="class">
    <name>DPlatformThemeProxy</name>
    <filename>classDPlatformThemeProxy.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPlatformThemeProxyPrivate</name>
    <filename>classDPlatformThemeProxyPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlatformWindowHandle</name>
    <filename>classDPlatformWindowHandle.html</filename>
    <base>DPlatformHandle</base>
    <member kind="function">
      <type></type>
      <name>DPlatformWindowHandle</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a0b0851a3935f0ad09c03156f1ec85ff2</anchor>
      <arglist>(QWidget *widget, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a363a1c10ff4cf65a99ab2ad2190d7aa1</anchor>
      <arglist>(const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a9cd159ce97aba6625f8c0bba202a5030</anchor>
      <arglist>(const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>adf7c61cf1f4fbe2bcb029142ecf4c633</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableDXcbForWindow</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>af891bfd4fccf35434160d9360404b718</anchor>
      <arglist>(QWidget *widget, bool redirectContent)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isEnabledDXcb</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a39dc22cf756d9158512151c974891d7d</anchor>
      <arglist>(const QWidget *widget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a012ce27978d089f2ab821355dde12777</anchor>
      <arglist>(QWidget *widget, const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a1282227032ddaf195b27bf3e974de9e7</anchor>
      <arglist>(QWidget *widget, const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowWallpaperParaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>add1f8ab398fe66c7313551612ef0c78b</anchor>
      <arglist>(QWidget *widget, const QRect &amp;area, WallpaperScaleMode sMode, WallpaperFillMode fMode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a12799d43fdde33892ed039d56bb0cd9e</anchor>
      <arglist>(QWindow *window, const QVector&lt; WMBlurArea &gt; &amp;area)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowBlurAreaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a583f28cc2ab7f9054c158b66ea4dec0c</anchor>
      <arglist>(QWindow *window, const QList&lt; QPainterPath &gt; &amp;paths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>setWindowWallpaperParaByWM</name>
      <anchorfile>classDPlatformWindowHandle.html</anchorfile>
      <anchor>a75bdab76f6827c87997e1adce95eaafc</anchor>
      <arglist>(QWindow *window, const QRect &amp;area, WallpaperScaleMode sMode, WallpaperFillMode fMode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPlatformWindowHandle</name>
    <filename>classDtk_1_1Widget_1_1DPlatformWindowHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlayerBackend</name>
    <filename>classDPlayerBackend.html</filename>
    <base>QObject</base>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>play</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>abc509550f3c315400011b7810fc93c91</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>pauseResume</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a7ee1f9c83215a99fb0bb27c13ca2341f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a8f50a1413bff0d6e0dd0d0d28880c283</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>seekForward</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ae824def13b76a29b77758eed11abbe94</anchor>
      <arglist>(int secs)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>seekBackward</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a625a18cdf92231cfa20c6f543caac596</anchor>
      <arglist>(int secs)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>seekAbsolute</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a24e7ed9afe22314e0bbb558550a631d8</anchor>
      <arglist>(int)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>volumeUp</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a04249b3e0a5bf3769b777414b0de48d8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>volumeDown</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a37d07e57ba78fb391ea5135270120c38</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>changeVolume</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a6c0bf91d39f619d1466635024722d17d</anchor>
      <arglist>(int val)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>toggleMute</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a0cf93d63bea795ebfbc731a6b7353a14</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual void</type>
      <name>setMute</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a442cffd2beac38bd2f69a55637e47392</anchor>
      <arglist>(bool bMute)=0</arglist>
    </member>
    <member kind="slot" virtualness="virtual">
      <type>virtual void</type>
      <name>setWinID</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ac34ce111b11bcb706b71d3f62988d524</anchor>
      <arglist>(const qint64 &amp;winID)</arglist>
    </member>
    <member kind="slot">
      <type>qint64</type>
      <name>winID</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ab8e3f52c306b4cdfe17881a4bedc1426</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPlayFile</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a98bf676cf3157e04fd9aff71a4116249</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDVDDevice</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>aff66341ff0dfbe38a542437fd47403cb</anchor>
      <arglist>(const QString &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPlayable</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>af1924c30bac6fbc72a17846e4fd10c46</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual qint64</type>
      <name>duration</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a7efa117f8a28c06e25332b251aed046c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual qint64</type>
      <name>elapsed</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>aceeafab6b3d081fd975a7ea9c50bc626</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QSize</type>
      <name>videoSize</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>afab907d35b654aeabbd6f399d09f027f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PlayState</type>
      <name>state</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a71b00b7aa8fc7fc838b45293f9f3141c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setState</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>af4f55a6f472418a208264a1d889411be</anchor>
      <arglist>(PlayState state)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const PlayingMovieInfo &amp;</type>
      <name>playingMovieInfo</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a0571cf2a71241c9e52197c88b57849b0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPlaySpeed</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a6be31bd4c1d5087f9f5f4c21524df4b6</anchor>
      <arglist>(double times)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>savePlaybackPosition</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a6360960803f45100b50e3255774a4882</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateSubStyle</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ada3e54b737fb32bc525a9f3ec5da4454</anchor>
      <arglist>(const QString &amp;font, int sz)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSubCodepage</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ae4fc84587fc6d82336e3cd45fdb1421d</anchor>
      <arglist>(const QString &amp;cp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QString</type>
      <name>subCodepage</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>add060c0561a026e07facd35f7e4f0afd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addSubSearchPath</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a949037d1ac6c37228f09ff6e29bbcb7a</anchor>
      <arglist>(const QString &amp;path)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>firstInit</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ad7e7fc3c6402a9354c2615b7bb78c1a1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>loadSubtitle</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ad6457cdefced4336b72dc15a87183af1</anchor>
      <arglist>(const QFileInfo &amp;fi)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>toggleSubtitle</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a19b843a85afb9ed466382cfa2d901748</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSubVisible</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a5d386b7bea50b9aa9bbb5028818a5200</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selectSubtitle</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ab987efb1d837a1f8c8cf3620c70fc029</anchor>
      <arglist>(int id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selectTrack</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a082e4efeb5c9b7d214d3af48bf3f21c1</anchor>
      <arglist>(int id)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSubDelay</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a32fe95390fefa4cccd7938775fe8bf35</anchor>
      <arglist>(double secs)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>subDelay</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a063eefa6c86ec09d11c7787a336be8f3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>aid</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ae888cead68e7a3058eefb6c6e5b1e473</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>sid</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ab7decbef9d8ffb67e548ea223e25704f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>changeSoundMode</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a539f4f3d0c9db8aa344436d5f993d2bb</anchor>
      <arglist>(SoundMode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>volume</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a21a0186dc2780fef31172ececfef3f06</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>muted</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>aea7e508794baa37398c8d4355ff5e415</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVideoAspect</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a835de32e043fd9dd5684ae16f002d298</anchor>
      <arglist>(double r)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>videoAspect</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a35d64af0fe15bf83515cbfcbe7aa6c7d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>videoRotation</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ae7a02dd3a17816fbb4cda9219ff214d3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVideoRotation</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a1e6bccb75cfc891a9d7900b12f4fdb2a</anchor>
      <arglist>(int degree)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QImage</type>
      <name>takeScreenshot</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ad02937621dd1af15ab9d027eed3434d3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>burstScreenshot</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a3afb303ede1015d87d3acadec24090b2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stopBurstScreenshot</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a9b302c140838cac4318aa88c7d5d6b86</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>getProperty</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ae63b3e7a90b23a8e1f13543c808654d8</anchor>
      <arglist>(const QString &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setProperty</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a46bab222886ce659d6581d384a7f47d4</anchor>
      <arglist>(const QString &amp;, const QVariant &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>nextFrame</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a2c743155e02a9e274a417f0a55f64a14</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>previousFrame</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>acbe41d8755d0033dd43e2aa49102f926</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>makeCurrent</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a8108a034328a6f16f3d86138c7edcbb7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>changehwaccelMode</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ad46fe0184a008caf92d98a3cfa363ec1</anchor>
      <arglist>(hwaccelMode hwaccelMode)=0</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>urlFile</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>aebd9937e07d32b3fed6ac452616a38af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDebugLevel</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a08004bae3851a58d8ad1bbdb68690f82</anchor>
      <arglist>(DebugLevel lvl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DebugLevel</type>
      <name>debugLevel</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>ade139ef7ac3f2ffa7cc5ac240d77a26d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>paused</name>
      <anchorfile>classDPlayerBackend.html</anchorfile>
      <anchor>a1f1947e8f1deb89ce982fb35d8f70e43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DPlayerBackend</name>
    <filename>classDtk_1_1Multimedia_1_1DPlayerBackend.html</filename>
  </compound>
  <compound kind="class">
    <name>DPlayerBackendPrivate</name>
    <filename>classDPlayerBackendPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPlaylistModel</name>
    <filename>classDPlaylistModel.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPopupWindowHandle</name>
    <filename>classDPopupWindowHandle.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPopupWindowHandleImpl</name>
    <filename>classDPopupWindowHandleImpl.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPowerDevice</name>
    <filename>classDPowerDevice.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; PowerHistoryList &gt;</type>
      <name>history</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>ab68142afaf047f2d03c7a01038e62644</anchor>
      <arglist>(const QString &amp;type, const uint timespan, const uint resolution) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; PowerStatisticList &gt;</type>
      <name>statistics</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>afc8eeeb9caf286567b535a7e12888096</anchor>
      <arglist>(const QString &amp;type) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>refresh</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a1f38892c6394c32cba8123a092a9948f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>updateTimeChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a7dd71057eaaf2964315d3f26cb1be798</anchor>
      <arglist>(const QDateTime &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>percentageChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>ae6e5f2967867343865cc1271fe9f99a9</anchor>
      <arglist>(const double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>timeToEmptyChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a8cb7c7a996b02b8a0da5880f89c4e5dd</anchor>
      <arglist>(const qint64 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>timeToFullChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aeefffe05d1a9d3d6946a255f055af8ae</anchor>
      <arglist>(const qint64 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>energyRateChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a18217f8c3b67daa5dfe4dbb70c2f4aee</anchor>
      <arglist>(const double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>energyChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a7d190c9436e7d31adad66554408d8e0c</anchor>
      <arglist>(const double value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconNameChanged</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a4e2065ec1de384c0483172fffec3a2c5</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasHistory</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>ab4793d0185f5aa1acba620c63b595be3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasStatistics</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>afa654bdaae9ddd67bd95099a214c814f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPresent</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a075e925c074a00b4f72c79af9d216e76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRechargeable</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a19b4f1117f742ee90a0f62d67b97f06f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>online</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a913992531485a2015b875d2df34b41ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>powerSupply</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a22cf05b441c959e895e9ee294b488c64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>capacity</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aa0b27591461adc6295a39c7311c199a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energy</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aa0ae49afcbc37a16ae13e0b930edf286</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyEmpty</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a4d007f493d9c4e8eecac75d6f5f57ca6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyFull</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a86edcb6f586957b6a197428126e12978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyFullDesign</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aeaa661db7e8b34ba378d88d4f8b8ad3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>energyRate</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>acdf63c05239a0877bfad84ef415a40cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>luminosity</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>ac16cee3ca4826aea0b3c3479e19b7a31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>percentage</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a379f6c807e89582b48081e608c76badd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>temperature</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a15e4d1d1404e4a7cf560178e76ae58e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>voltage</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aa6810bec2f12fac1e2914330198f0862</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>chargeCycles</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a48e77d43d9b57c28e5d883bc2b673fd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>timeToEmpty</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aa63dd1ce97dbb2c9a4ec251d54cfed5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>timeToFull</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a1ed50da50b3eedbd1bdbd189f760e44d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>iconName</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a9b36d61c69ee831359ade145a305e5fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>model</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a7a89db6807e9b98e2771ad3a33d97ebd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>nativePath</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a9f9e37be6f8b64fe877617e05dd0f108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serial</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a9a59f94225ee2fde11aa4ec69787df7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>ab83683e6189afca8ac3457ee23ef2379</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>batteryLevel</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a3e19f38bfa3d23f195b2feec3255a9d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>state</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a0f081eb47e4c4762c8e0265a071f9623</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>technology</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a0f2ea240a9c276b929186e9b25b533c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>type</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>a4cc2942a7bf3efc33f38c02588bc50cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>warningLevel</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aeddcb48721a9c6e0cd1844776e4ec9e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>updateTime</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>af00e74f0cd1370be08121fd3ff30d51f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>deviceName</name>
      <anchorfile>classDPowerDevice.html</anchorfile>
      <anchor>aed8cb3fd501007ceb12e50ca2d8929ea</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Power::DPowerDevice</name>
    <filename>classDtk_1_1Power_1_1DPowerDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DPowerDevicePrivate</name>
    <filename>classDPowerDevicePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPowerManager</name>
    <filename>classDPowerManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>devices</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>af6ffb05bce6122ab2ce81400c0c51309</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QString &gt;</type>
      <name>criticalAction</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a2e7a402089ad2e99f631df148b146ca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>refresh</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a804b587ecbc864e7c3287820fdfe6f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a8269d6b2104ee7e86aac881123cdf70b</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a693dc2f59735b134e0cff0e52c1aa97d</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lidIsClosedChanged</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>ad522fbcd0951e2ca96ec01d98cba0037</anchor>
      <arglist>(const bool &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lidIsPresentChanged</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>af0107650b8d8cec8eb34892597ff0eda</anchor>
      <arglist>(const bool &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lidIsClosed</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a2d99eea3f3649efe2a38266d6ffb8001</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lidIsPresent</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a9f1ddbb1203088a04a48da975633e7ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBattery</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a69a0916bf3e4056a8777e7ea323b4a88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>onBattery</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a41ae88a04e8d2ae3b258408557ccc1b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportKbdBacklight</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>af33cb9354376c80d117d2c5449d673dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>daemonVersion</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a67c3f0cba18ec3512598e6cf6e4ecc69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSharedPointer&lt; DPowerDevice &gt;</type>
      <name>displayDevice</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>a19668ace2d5b6c97c3827f8c085fe190</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSharedPointer&lt; DPowerDevice &gt;</type>
      <name>findDeviceByName</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>aee2b10027b2ff61ffe621eac94e2cb24</anchor>
      <arglist>(const QString &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>QSharedPointer&lt; DKbdBacklight &gt;</type>
      <name>kbdBacklight</name>
      <anchorfile>classDPowerManager.html</anchorfile>
      <anchor>abce2d2e4b3c9598a6f544ca7a6c0ebb4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Power::DPowerManager</name>
    <filename>classDtk_1_1Power_1_1DPowerManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DPowerManagerPrivate</name>
    <filename>classDPowerManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPowerSettings</name>
    <filename>classDPowerSettings.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>reset</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aa08b4c29e12b1d90c0e341b9d6984819</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>cpuGovernorChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a8ad734b4cebbf1f88eb791f2466e349b</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>powerModeChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aa768d24681ecd6ff84115eab02998f6e</anchor>
      <arglist>(const PowerMode &amp;mode)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autoPowerSavingOnBatteryChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a17e1faa1023984995dd6723a806ee099</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>autoPowerSavingWhenBatteryLowChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>afde0872393c11be122c3381dcc662e57</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>powerSavingBrightnessDropPercentChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ae8d052d5c1f0959f7e901d7d72bf9783</anchor>
      <arglist>(const quint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>batteryLidClosedActionChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a72402464176ec8e1fd4090b4d99ff7bc</anchor>
      <arglist>(const LidClosedAction &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>batteryLockDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a5fce9ef90d2a6e098bc0e7853b0a789c</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>batteryPressPowerBtnActionChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a2eb8dde81eeeb1adf530dd3027c5e6de</anchor>
      <arglist>(const PowerBtnAction &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>batteryScreenBlackDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a6526cceca7b6815897d16a614e565e5e</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>batteryScreensaverDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>afad3a646e92ca5db7f26175f21e362dc</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>batterySleepDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a79c7ac712f02fb1af9205b67e14af70c</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>linePowerLidClosedActionChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a16094285b9c3943ab90747e45ea0cb7e</anchor>
      <arglist>(const LidClosedAction &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>linePowerLockDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ab53bdb2422dbf01f0fe5b25e0b3fcb97</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>linePowerPressPowerBtnActionChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>abc48e822d7dd5ba7b346be40605dc35d</anchor>
      <arglist>(const PowerBtnAction &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>linePowerScreenBlackDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aa8861ce51f4e29d7b9e897c091292ae5</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>linePowerScreensaverDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ae3fbe225e3c4a52b0dbf982a0f15a747</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>linePowerSleepDelayChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a6b726d99f126804bb8d53cd3a229fe1b</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lowPowerAutoSleepThresholdChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a9b26404966cf641c4a7aec7e5d5ad98e</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lowPowerNotifyEnableChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ac45275e5788579c80a50e42a6cd407aa</anchor>
      <arglist>(const bool value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>lowPowerNotifyThresholdChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a87ef2613c30058b6b02b1ae55d60da8e</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>screenBlackLockChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a736f81a1e6162b681b2d477c7d317668</anchor>
      <arglist>(const bool value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sleepLockChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a560f100ab3041f8fde41c8fe2fd774a6</anchor>
      <arglist>(const bool value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>powerSavingModeEnabledChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a4d1f459d03ce7e859ead28f743e95692</anchor>
      <arglist>(const bool value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>powerSavingModeBrightnessDataChanged</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a6e57a034e04b3e93ea3044ee1ce531d3</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPowerSettings</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a7fb2b72975a1d33bf5d0784a1e47a589</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>cpuGovernor</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a38061fc2e3540f93b2fdd5a504eec2b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PowerMode</type>
      <name>powerMode</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>abb46a988bc718efb2179a8e2a94a9b97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPowerMode</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a206e61afeec28380fe086cb06845543b</anchor>
      <arglist>(const PowerMode &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoPowerSavingOnBattery</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a35398aac43c8bb6b90dc0d2a8ff2e16b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPowerSavingOnBattery</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aaf3130951be0bda7a0d2e598c6d13045</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoPowerSavingWhenBatteryLow</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a04c6cb5ea52f3ddb2556d45e9054c6cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPowerSavingWhenBatteryLow</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a10264e1523e514bb2865ae9a3d8d0367</anchor>
      <arglist>(const bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>LidClosedAction</type>
      <name>batteryLidClosedAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a0b74ad8a09e525d69a978c1e419b1c26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryLidClosedAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a6a14f5e97666c3b05f3e892defabd28f</anchor>
      <arglist>(const LidClosedAction &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>batteryLockDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a254592631c5591f07b660a272e7c508c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryLockDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a3550be9f4a4748ecc8a0946433fe2525</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>PowerBtnAction</type>
      <name>batteryPressPowerBtnAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a51a8e734f5c03f5252f1fce56e285f03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryPressPowerBtnAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a520e954ad8eb4a8bc4fde7ee97322f85</anchor>
      <arglist>(const PowerBtnAction &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>batteryScreenBlackDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>acf3da3ad89dea39f90bed4cd8a571d91</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryScreenBlackDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ae970756b9f9f3afda067c60d9302d752</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>batteryScreensaverDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aa00507d1631f3bf343a30ebf50d12e16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatteryScreensaverDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a61cefcc9dd02149c2d4bd4c92216b6ce</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>batterySleepDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>acbaba31c0cc1936c210c157ecce8de45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatterySleepDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>adab5685cb3530d5284525ec6a2b16716</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>LidClosedAction</type>
      <name>linePowerLidClosedAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aae0ea335bbe9c17cedc404c7ec0a986e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePowerLidClosedAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a16b53c7757cb0d1e5abae30d2f42a272</anchor>
      <arglist>(const LidClosedAction &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>linePowerLockDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ab7015d91a08bb0c63c9ca7850af781d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePowerLockDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a45acc499c7991a3056c5daf81f8ecdb9</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>PowerBtnAction</type>
      <name>linePowerPressPowerBtnAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a9644529800a4812e774e149ab3f199f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePowerPressPowerBtnAction</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a87ef20ea1c0bbcd3e6b3dbe444455977</anchor>
      <arglist>(const PowerBtnAction &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>linePowerScreenBlackDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>aa6edd0fe24efb4edb5c12d5d997335da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePowerScreenBlackDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a9aeed956ae5eab0352fe6a6dbbe2120c</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>linePowerScreensaverDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ab8fbf05f2e5aa2455f041aa98fb0d0a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePowerScreensaverDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a97653b4a2292905ce79600e7393bb15c</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>linePowerSleepDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a1d6f9316f4c36914bfe36f8c0bc8087d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinePowerSleepDelay</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ad73f885fe20167e21327ea3425285aac</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>lowPowerAutoSleepThreshold</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a5372f705351082035d36e842d67996d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowPowerAutoSleepThreshold</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a2dcfdc9ecdb611e2cf7105ea954d8140</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lowPowerNotifyEnable</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a3267d54ba19b22aa461ef3fc8501b3bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowPowerNotifyEnable</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ab49fc3905c06f02a436b636ed5152234</anchor>
      <arglist>(const bool value)</arglist>
    </member>
    <member kind="function">
      <type>qint32</type>
      <name>lowPowerNotifyThreshold</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ac460907e4af138d6ac136ec9b10537e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowPowerNotifyThreshold</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ad6e38e73606f096a859216e5c73434b3</anchor>
      <arglist>(const qint32 value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>screenBlackLock</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ae16d0e87b7da9407ec6ded875bd48be1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScreenBlackLock</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a4e50ccdb8993de5092228ebc08a354a1</anchor>
      <arglist>(const bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sleepLock</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>ab0255d9bd6c07772523be54743b820af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSleepLock</name>
      <anchorfile>classDPowerSettings.html</anchorfile>
      <anchor>a65acb71bcd7a88f84aeb459c930b0efb</anchor>
      <arglist>(const bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Power::DPowerSettings</name>
    <filename>classDtk_1_1Power_1_1DPowerSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>DPowerSettingsPrivate</name>
    <filename>classDPowerSettingsPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPrinter</name>
    <filename>classDPrinter.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPickColorWidget</name>
    <filename>classDPrintPickColorWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>slotColorPick</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>abe1b67ceb7f4bc594b2bc47f9fcd679f</anchor>
      <arglist>(QString uuid, QString colorName)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>slotEditColor</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>a4009fd852aa097c8e6f193351818b9aa</anchor>
      <arglist>(QString str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRgbEdit</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>a4b06f128f82fa3b03ee56b0e3e2830d1</anchor>
      <arglist>(QColor color, bool btnColor=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertColor</name>
      <anchorfile>classDPrintPickColorWidget.html</anchorfile>
      <anchor>a5e3f35c853dd24d1412c990d365f1b4f</anchor>
      <arglist>(QColor color, bool btnColor=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewColorModeInfo</name>
    <filename>classDPrintPreviewColorModeInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewCopiesInfo</name>
    <filename>classDPrintPreviewCopiesInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewDialog</name>
    <filename>classDPrintPreviewDialog.html</filename>
    <base>DDialog</base>
    <member kind="function">
      <type>void</type>
      <name>setDocName</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>a56b79cb43f7c88d3bfe8b98568916881</anchor>
      <arglist>(const QString &amp;)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>docName</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>ad6d240ee580cfdb4d55b60c2799a568f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPrintFromPath</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>a5ebe66a2f5ae6848b203a0abfaf29649</anchor>
      <arglist>(const QString &amp;path=QString())</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>printFromPath</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>a70c4399f381a24133c590a40d156529e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeEvent</name>
      <anchorfile>classDPrintPreviewDialog.html</anchorfile>
      <anchor>ab52fb6ffad897736ae465fb0638cf547</anchor>
      <arglist>(QResizeEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPrintPreviewDialog</name>
    <filename>classDtk_1_1Widget_1_1DPrintPreviewDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewDialogPrivate</name>
    <filename>classDPrintPreviewDialogPrivate.html</filename>
    <base>DDialogPrivate</base>
    <member kind="function">
      <type>void</type>
      <name>initWaterSettings</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a7b3dd8b06f40cc3aed37893dbd4a1270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupPrinter</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a148f5d296f1d6bf68942aad1100bc6ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMininumMargins</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a46e8004f25ff988ee3b02c8aa2470588</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>marginsUpdate</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a55a5dd740280c2d0a75673f5ed4c8324</anchor>
      <arglist>(bool isPrinterChanged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustMargins</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a1d8f120e99a96965197ba7c340896f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageIsLegal</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a78e16dbcb6fb59c9303da31f57a799ab</anchor>
      <arglist>(bool islegal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnable</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5a37e479cfe244dc5bca7c4429b14fab</anchor>
      <arglist>(const int &amp;value, DComboBox *combox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTurnPageBtnStatus</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a572569a00c3d207df6cfbffd46012799</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>watermarkTypeChoosed</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5b0933eaa93c0060a1ec68b384814128</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>customPictureWatermarkChoosed</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a4ce835450d27a5c42f16999efad8c712</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waterMarkBtnClicked</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a712a3d074130cc588d0d518583a29b65</anchor>
      <arglist>(bool checked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disablePrintSettings</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>aba6a81fa3aa6cabd4ea41792e6dc4432</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageLayoutEnable</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a271afddc6d7c0717c31ecbf58c0182d8</anchor>
      <arglist>(const bool &amp;checked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_printerChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a9141fcdfa86a054c19f5f1947fc6b840</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_pageRangeChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a90ba33367891b724b395d2588095af3f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_pageMarginChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a044f201cf07920ad72ad1a17f731549a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_ColorModeChange</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a557713714d53fd8ffb25001c8765b9ec</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_startPrint</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a641430fc2e3c3e99b8d2d65a9eb2a7f3</anchor>
      <arglist>(bool clicked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_orientationChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a8a3cafc9232eda7e57e93e9f11451c7c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_customPagesFinished</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a6e6f567e7d78f79edec751d215ab6b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_marginspinChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>afa97d50e20677625088fc0a9964b0147</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_marginEditFinished</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5c4c0344dc6d3afc5705633cca11f12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_currentPageSpinChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a34c686d1faa7367db0e98abe130b8289</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_checkStateChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a7a361695d993f0938fd6f14f7ae77739</anchor>
      <arglist>(int state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_textWaterMarkModeChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>ad1a70f3cbce4a29d57e1c927cdee807a</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_customTextWatermarkFinished</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a6fe4a66f1b028023eac19e4c25a50641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_colorButtonCliked</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>aab2c6194327eca58c16996b05414026a</anchor>
      <arglist>(bool cliked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_selectColorButton</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>adb3af75093628f4ef6316ec335b0f426</anchor>
      <arglist>(QColor color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_pagePersheetComboIndexChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a78dcda494e789afe311a7e4932374379</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_q_printOrderComboIndexChanged</name>
      <anchorfile>classDPrintPreviewDialogPrivate.html</anchorfile>
      <anchor>a5830fa02126991e445bdd8384b39d004</anchor>
      <arglist>(int index)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewNUpPrintInfo</name>
    <filename>classDPrintPreviewNUpPrintInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewOrientationInfo</name>
    <filename>classDPrintPreviewOrientationInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPageOrderInfo</name>
    <filename>classDPrintPreviewPageOrderInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPageRangeInfo</name>
    <filename>classDPrintPreviewPageRangeInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPaperMarginsInfo</name>
    <filename>classDPrintPreviewPaperMarginsInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPaperSizeInfo</name>
    <filename>classDPrintPreviewPaperSizeInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPrintDuplexInfo</name>
    <filename>classDPrintPreviewPrintDuplexInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewPrinterInfo</name>
    <filename>classDPrintPreviewPrinterInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewScalingInfo</name>
    <filename>classDPrintPreviewScalingInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewSettingInfo</name>
    <filename>classDPrintPreviewSettingInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewSettingInterface</name>
    <filename>classDPrintPreviewSettingInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWatermarkInfo</name>
    <filename>classDPrintPreviewWatermarkInfo.html</filename>
    <base>DPrintPreviewSettingInfo</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWidget</name>
    <filename>classDPrintPreviewWidget.html</filename>
    <base>DFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>updatePreview</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a5e26e80ae7c54589a06fbb55bbc132f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnFront</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a858a1d70ef3974c2a4cb0ebb36f75992</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnBack</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a421b7e008d9b328298747ce9ff46e5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnBegin</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a7d61a6fdec4d29a5105c0d2bb5e53d07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>turnEnd</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a82337fe3c174ef97b059972ebf261bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentPage</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae2202b074481ebb1c2eaaab42c5fd827</anchor>
      <arglist>(int page)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DPrintPreviewWidget</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a1aeff62f6660758f781bb05a829a9f12</anchor>
      <arglist>(DPrinter *printer, QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVisible</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ada0f65fd4d07738d0a7f6f37df73f001</anchor>
      <arglist>(bool visible) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRange</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a70ffe4ae7f77b6bc1cce1e0098d48776</anchor>
      <arglist>(const QVector&lt; int &gt; &amp;rangePages)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRange</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>adcc85972a71a1d15f4d90d208f8e78f0</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRangeALL</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ad23f9700f7049e90ea3942ef483b6207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED void</type>
      <name>setReGenerate</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af00e2aa0c2da81660aa610cbd6f2c2f8</anchor>
      <arglist>(bool generate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageRangeMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a711b9921c9fa3d5367da02c3a2d373d9</anchor>
      <arglist>(PageRange mode)</arglist>
    </member>
    <member kind="function">
      <type>PageRange</type>
      <name>pageRangeMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a437049d8af98767c31a91015576a8161</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reviewChange</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af8f22dc98c1de5d92045862437d9bfd7</anchor>
      <arglist>(bool generate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pagesCount</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>aca8dfb2b9c4f7728e7ea4b0754bfca41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentPage</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>aa267dddaf5b75d52b29299a82e3a1e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>turnPageAble</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae4cf4f66641ab39bd50da2c2a387ceee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColorMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a3e3c6efe061e82c9aa3f120f813566e4</anchor>
      <arglist>(const DPrinter::ColorMode &amp;colorMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientation</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae99f61c5fef5230aee8e11076874f4ac</anchor>
      <arglist>(const DPrinter::Orientation &amp;pageOrientation)</arglist>
    </member>
    <member kind="function">
      <type>DPrinter::ColorMode</type>
      <name>getColorMode</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a635b3c1cf5df7ac60cc55683e9c0f573</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScale</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a5d65c3c75a67d2fa30d31b62710bd1c0</anchor>
      <arglist>(qreal scale)</arglist>
    </member>
    <member kind="function">
      <type>qreal</type>
      <name>getScale</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a410b8d852d0ddb7b18174e652e40a0cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateView</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a500ddb803d83a98247abdf7036c1efa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ab5fb27954ee0aedb42db47c2c636043b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshBegin</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a06e065126db8aae0e23cb4259902f51f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshEnd</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>aa8e2fc3273eaf228e0df4d67d1a0a854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkType</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a9c3f51275eadf67e739e1c8931c7dfc7</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMargImage</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a290520210ea29ac56babe235ffb392cb</anchor>
      <arglist>(const QImage &amp;image)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkRotate</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a8e3977e4c9a6f876bc1e392fcbd98e3d</anchor>
      <arglist>(qreal rotate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkScale</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>afa0fc9b8f8d7deb30e98a9f08e1fd46b</anchor>
      <arglist>(qreal scale)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkOpacity</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a44b8641937f6e34db5e7d159e5750e63</anchor>
      <arglist>(qreal opacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfidentialWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>ae78e798085db4ff1f7241387395ddfaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDraftWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>adaded194b56ec7f14890b394457fcbd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a5f90236a3c62a5b6b6b0da98bfd8dcbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>abf90138f101289b558a89606eb4e1e44</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextWaterMark</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a023417244ae609b825d12ca8b756d83b</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkFont</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>adc9ac7e7f128001be2b07d8de6555c96</anchor>
      <arglist>(const QFont &amp;font)</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>waterMarkColor</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a3bc603d14afe12685fcbc21a6e73065d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkColor</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af49e10a29ccaad26a923ebdc00745185</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaterMarkLayout</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>af15081ad88275ab16352ea72e671eb38</anchor>
      <arglist>(int layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImposition</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a46d8e09c7e088913e68eb9cefae75762</anchor>
      <arglist>(Imposition im)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrder</name>
      <anchorfile>classDPrintPreviewWidget.html</anchorfile>
      <anchor>a45f92d42bf68a57fd67213cfe535d3e3</anchor>
      <arglist>(Order order)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DPrintPreviewWidget</name>
    <filename>classDtk_1_1Widget_1_1DPrintPreviewWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWidgetPrivate</name>
    <filename>classDPrintPreviewWidgetPrivate.html</filename>
    <base>DFramePrivate</base>
    <class kind="struct">DPrintPreviewWidgetPrivate::NumberUpData</class>
  </compound>
  <compound kind="struct">
    <name>DProcessDevice::DProcessBaseInfo</name>
    <filename>structDProcessDevice_1_1DProcessBaseInfo.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>a3eac84a7321c97f9d0f9d4e7cf91f093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>aafd0ee0ac4e164d4c0e185f33837089b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>cmdline</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>ab3a06ceccf56acc51e67cfb52983e6d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>usrerName</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>a94827da85f21df65d24e6efa4f285e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>mask</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>a93a57a4e5447daa8a73965bf1e926e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pid_t</type>
      <name>pid</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>a5693abf751bc045d9f6a3433f3a2e2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>icon</name>
      <anchorfile>structDProcessDevice_1_1DProcessBaseInfo.html</anchorfile>
      <anchor>a7b75220c7d61e81904db077ade297540</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DProcessDevice::DProcessBaseInfo</name>
    <filename>structDtk_1_1Device_1_1DProcessDevice_1_1DProcessBaseInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>DProcessDevice</name>
    <filename>classDProcessDevice.html</filename>
    <base>QObject</base>
    <class kind="struct">DProcessDevice::DProcessBaseInfo</class>
    <class kind="struct">DProcessDevice::DProcessIOInfo</class>
    <class kind="struct">DProcessDevice::DProcessMemoryInfo</class>
    <class kind="struct">DProcessDevice::DProcessNetworkInfo</class>
    <class kind="struct">DProcessDevice::DProcessStatus</class>
    <member kind="function">
      <type>QList&lt; pid_t &gt;</type>
      <name>allPids</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>add6e8e2620fb7692c469fc54d2ec0861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QHash&lt; QString, QString &gt;</type>
      <name>environment</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>afa535516510707b4142dfb833ce0d6b0</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>groupName</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>a3fe6327a21d260bd22eb247f53e0ec15</anchor>
      <arglist>(const gid_t &amp;gid)</arglist>
    </member>
    <member kind="function">
      <type>DProcessBaseInfo</type>
      <name>baseInfo</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>ac07b1379a3c9e65fc8a2aedcd0f9aad3</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>DProcessMemoryInfo</type>
      <name>memoryInfo</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>a97a15c18ce66c147f7e85abcd2709a49</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>DProcessIOInfo</type>
      <name>ioInfo</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>af3ea26ebf630f6f678253590544f3b3f</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>DProcessNetworkInfo</type>
      <name>networkInfo</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>a98c253ee98643494c29bad89c57f0601</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
    <member kind="function">
      <type>DProcessStatus</type>
      <name>status</name>
      <anchorfile>classDProcessDevice.html</anchorfile>
      <anchor>acc825356dd295cf5e645235cb7ba1026</anchor>
      <arglist>(pid_t pid)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::DProcessDevice</name>
    <filename>classDtk_1_1Device_1_1DProcessDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DProcessDevicePrivate</name>
    <filename>classDProcessDevicePrivate.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>getSockIOStatByInode</name>
      <anchorfile>classDProcessDevicePrivate.html</anchorfile>
      <anchor>a8cfc6467ac7ec05f9c3e00a4e5052cf4</anchor>
      <arglist>(ino_t ino, SockIOStat &amp;stat)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DProcessDevice::DProcessIOInfo</name>
    <filename>structDProcessDevice_1_1DProcessIOInfo.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>readBytes</name>
      <anchorfile>structDProcessDevice_1_1DProcessIOInfo.html</anchorfile>
      <anchor>ac3b80e6113636dcd703165914cf31cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>writeBytes</name>
      <anchorfile>structDProcessDevice_1_1DProcessIOInfo.html</anchorfile>
      <anchor>a3b46d561598fac6ad2ab30cdf894052f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>cancelledWriteBytes</name>
      <anchorfile>structDProcessDevice_1_1DProcessIOInfo.html</anchorfile>
      <anchor>a0bf38867130f82c7a6ba10b1a70aa36b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DProcessDevice::DProcessIOInfo</name>
    <filename>structDtk_1_1Device_1_1DProcessDevice_1_1DProcessIOInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>DProcessDevice::DProcessMemoryInfo</name>
    <filename>structDProcessDevice_1_1DProcessMemoryInfo.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>vmsize</name>
      <anchorfile>structDProcessDevice_1_1DProcessMemoryInfo.html</anchorfile>
      <anchor>a0cef30ec6cee35d627728b15d0e9c218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>rss</name>
      <anchorfile>structDProcessDevice_1_1DProcessMemoryInfo.html</anchorfile>
      <anchor>a896b50b34fac94ef38fb8a362b94fc4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>shm</name>
      <anchorfile>structDProcessDevice_1_1DProcessMemoryInfo.html</anchorfile>
      <anchor>a544421a6a38e42efbf3b903a25c6f7e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DProcessDevice::DProcessMemoryInfo</name>
    <filename>structDtk_1_1Device_1_1DProcessDevice_1_1DProcessMemoryInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>DProcessDevice::DProcessNetworkInfo</name>
    <filename>structDProcessDevice_1_1DProcessNetworkInfo.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>recvBytes</name>
      <anchorfile>structDProcessDevice_1_1DProcessNetworkInfo.html</anchorfile>
      <anchor>a8606db5bcff07b1495a0159baf2f4541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>sentBytes</name>
      <anchorfile>structDProcessDevice_1_1DProcessNetworkInfo.html</anchorfile>
      <anchor>a5b421ab7ff55cf9c2ec78f4f60ed5b80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DProcessDevice::DProcessNetworkInfo</name>
    <filename>structDtk_1_1Device_1_1DProcessDevice_1_1DProcessNetworkInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>DProcessDevice::DProcessStatus</name>
    <filename>structDProcessDevice_1_1DProcessStatus.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>state</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>aaf1cb499571332d01a08d35fc022b9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pid_t</type>
      <name>ppid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a36af966a173e3c3165d9cc8f954f6113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>pgid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a20f5dd1c3d76211dc0f75b2f03e0a9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uid_t</type>
      <name>uid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>af885e30e21f08f95678b32d01a35bd35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>gid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a49d666294e831d74e798c6dfbb645e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uid_t</type>
      <name>euid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a92f6e3756860c8a6ec86d3ba36bed613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>egid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>acf6a212fa5872ddfc5c9e8c1be3f4cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uid_t</type>
      <name>suid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>aa4369a6f9fff87aad5d39af8d0ddb5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>sgid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a63f0c89a44e78daa7852432dbb16409e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uid_t</type>
      <name>fuid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a8ed04ec343eea7ccd4b7e016b5d80e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gid_t</type>
      <name>fgid</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>aff1c8f06190232d8eb7ea5b0cbb5d91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>processor</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a4734ecafe5b643c73219cf2236ec1515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>rtPrio</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a844e5f0a1f8321b4a51a6ce03e5d4027</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>policy</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>aebdeafa5b307c98eca1ebf7f2c3b0b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>nthreads</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a1e4505ae4a8c1d9c8dc36ac44d61d4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nice</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>abb78a4b204ba987ac266d0d8e56a3e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>utime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a5978fe3af49f570301b2b045c24310d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>stime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a7f632e1464e6954d28500f75a9ca2b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint64</type>
      <name>cutime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>aa2af363dc0d10018feaa94cc1aaefb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint64</type>
      <name>cstime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>afae1adb58dbb80b8a914f183e7c7881d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>startTime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a358d8c5862f1797e2a79235a678f1844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>guestTime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>ad7ad9c7b024ae72b68b5c8b16679cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint64</type>
      <name>cguestTime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>a19ecd5cbc85326a9423bc5d3d7c1548a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>wtime</name>
      <anchorfile>structDProcessDevice_1_1DProcessStatus.html</anchorfile>
      <anchor>ad1eb338f745e9e57c426151a2c3363cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Dtk::Device::DProcessDevice::DProcessStatus</name>
    <filename>structDtk_1_1Device_1_1DProcessDevice_1_1DProcessStatus.html</filename>
  </compound>
  <compound kind="class">
    <name>DProgressBar</name>
    <filename>classDProgressBar.html</filename>
    <base>QProgressBar</base>
  </compound>
  <compound kind="class">
    <name>DProgressBarExample</name>
    <filename>classDProgressBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DProtocolDevice</name>
    <filename>classDProtocolDevice.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>~DProtocolDevice</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>aff6f1ab7ead039e15898e840f6bf6dc0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>path</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>ae6e2ac6ff6e6b839f7aee5d69dea55d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>mountPoint</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a1241c5812f2f4330bf4cca1c56d8c8c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>displayName</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a8bd73f81dbea6be12cb11b083575170c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileSystem</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a9cf680db39e80fcb01331b914ff72f1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>sizeTotal</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a3c2a19a2f09b6df40256bacb84c21dcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>sizeFree</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a3e15d7f5f551ad478e28785e6069f7be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>sizeUsage</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>ad9d718f0966dd44ec767e971a36bb9dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>iconNames</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a2272c938a88122281bcf88555fcb9ae0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>mount</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a75b92e3888615c2b31c4a846cc0910c1</anchor>
      <arglist>(const QVariantMap &amp;opts={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mountAsync</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a16900c48236210cfcfb15bf671b5e5ae</anchor>
      <arglist>(const QVariantMap &amp;opts={}, OperateCallbackWithInfo callback=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unmount</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a527a2b04df270bd12c15d6ed16d71f9a</anchor>
      <arglist>(const QVariantMap &amp;opts={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unmountAsync</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>af38e3d1ba1537f370a1482b86c2f0304</anchor>
      <arglist>(const QVariantMap &amp;opts={}, OperateCallback callback=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOperateTimeout</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a9bc8712b55e7096463c87f1ba1bda421</anchor>
      <arglist>(int secs=3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAskForPasswd</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>a73d2e02fe8cbeec388b43410efe322e9</anchor>
      <arglist>(AskForPasswd callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAskForChoice</name>
      <anchorfile>classDProtocolDevice.html</anchorfile>
      <anchor>aa4a92de3b9b43a2e776a86d7d4927092</anchor>
      <arglist>(AskForChoice callback)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DProtocolDevice</name>
    <filename>classDtk_1_1Mount_1_1DProtocolDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DProtocolDeviceMonitor</name>
    <filename>classDProtocolDeviceMonitor.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>deviceAdded</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>a870bde49fe3da2d844d691ebe640a067</anchor>
      <arglist>(const QString &amp;devUrl)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>deviceRemoved</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>aaa27235cbf9164f578551a34e9db4682</anchor>
      <arglist>(const QString &amp;devUrl)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mountAdded</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>adc0500c0920ea440329cba9e6a4c2835</anchor>
      <arglist>(const QString &amp;devUrl, const QString &amp;mountPoint)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>mountRemoved</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>a4f6c4f063fea053a46a3f2bb04c9667c</anchor>
      <arglist>(const QString &amp;devUrl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DProtocolDeviceMonitor</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>af75f75a9fb97a723e0d52963d258a53c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWatchChanges</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>a4b14cf742b4579ead501c715ff944580</anchor>
      <arglist>(bool watchChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>watchChanges</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>a0b95f2cba688c23b975148f4071deef9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>devices</name>
      <anchorfile>classDProtocolDeviceMonitor.html</anchorfile>
      <anchor>a91512511b0a87415e8b86caa9b37a7ca</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Mount::DProtocolDeviceMonitor</name>
    <filename>classDtk_1_1Mount_1_1DProtocolDeviceMonitor.html</filename>
  </compound>
  <compound kind="class">
    <name>DProtocolDeviceMonitorPrivate</name>
    <filename>classDProtocolDeviceMonitorPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DProtocolDevicePrivate</name>
    <filename>classDProtocolDevicePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DPushButtonExample</name>
    <filename>classDPushButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DQmlAppMainWindowInterface</name>
    <filename>classDQmlAppMainWindowInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DQmlAppPreloadInterface</name>
    <filename>classDQmlAppPreloadInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>DQmlComponentIncubator</name>
    <filename>classDQmlComponentIncubator.html</filename>
  </compound>
  <compound kind="class">
    <name>DQMLGlobalObject</name>
    <filename>classDQMLGlobalObject.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQMLGlobalObjectPrivate</name>
    <filename>classDQMLGlobalObjectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickAppLoaderItem</name>
    <filename>classDQuickAppLoaderItem.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickAppLoaderItemPrivate</name>
    <filename>classDQuickAppLoaderItemPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickArrowBoxPath</name>
    <filename>classDQuickArrowBoxPath.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickBehindWindowBlur</name>
    <filename>classDQuickBehindWindowBlur.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickBehindWindowBlurPrivate</name>
    <filename>classDQuickBehindWindowBlurPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickBlitFramebuffer</name>
    <filename>classDQuickBlitFramebuffer.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickBlitFramebufferPrivate</name>
    <filename>classDQuickBlitFramebufferPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickBusyIndicator</name>
    <filename>classDQuickBusyIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickBusyIndicatorNode</name>
    <filename>classDQuickBusyIndicatorNode.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQuickColorOverlay</name>
    <filename>classDQuickColorOverlay.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickColorOverlayPrivate</name>
    <filename>classDQuickColorOverlayPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickControlColor</name>
    <filename>classDQuickControlColor.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickControlColorSelector</name>
    <filename>classDQuickControlColorSelector.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQuickControlPalette</name>
    <filename>classDQuickControlPalette.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQuickDciIcon</name>
    <filename>classDQuickDciIcon.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classDQuickDciIcon.html</anchorfile>
      <anchor>a36cc1708398103de651af581a50c8b9e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Quick::DQuickDciIcon</name>
    <filename>classDtk_1_1Quick_1_1DQuickDciIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickDciIconImage</name>
    <filename>classDQuickDciIconImage.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickDciIconImageItemPrivate</name>
    <filename>classDQuickDciIconImageItemPrivate.html</filename>
    <base>DQuickIconImagePrivate</base>
  </compound>
  <compound kind="class">
    <name>DQuickDciIconImagePrivate</name>
    <filename>classDQuickDciIconImagePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickDciIconPrivate</name>
    <filename>classDQuickDciIconPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>DQuickDciIconProvider</name>
    <filename>classDQuickDciIconProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickGlow</name>
    <filename>classDQuickGlow.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickGlowPrivate</name>
    <filename>classDQuickGlowPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickIconAttached</name>
    <filename>classDQuickIconAttached.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQuickIconAttachedPrivate</name>
    <filename>classDQuickIconAttachedPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickIconImage</name>
    <filename>classDQuickIconImage.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>a196895dab94df11036f04fd8708c4851</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>a3630393b4222e04ba884e6ac80878cb4</anchor>
      <arglist>(State state)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>a3c4542c4e9fd481e0831908c5bf6d487</anchor>
      <arglist>(Mode mode)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setColor</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>adcfb44aa5dfc79e332fa79d476d84698</anchor>
      <arglist>(const QColor &amp;color)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>a40744218f5be8d8b69ed6cf7d85d439c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>acbd8a48d513e8e84816d40270975425a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>mode</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>a23f7bed87864ad06dcd825c3caa47f81</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>color</name>
      <anchorfile>classDQuickIconImage.html</anchorfile>
      <anchor>acc67f3699607963a41f723a6e32cd164</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DQuickIconImagePrivate</name>
    <filename>classDQuickIconImagePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickIconLabel</name>
    <filename>classDQuickIconLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickIconLabelPrivate</name>
    <filename>classDQuickIconLabelPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickIconProvider</name>
    <filename>classDQuickIconProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickInWindowBlur</name>
    <filename>classDQuickInWindowBlur.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickItemViewport</name>
    <filename>classDQuickItemViewport.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickItemViewportPrivate</name>
    <filename>classDQuickItemViewportPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickKeyListener</name>
    <filename>classDQuickKeyListener.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQuickKeyListenerPrivate</name>
    <filename>classDQuickKeyListenerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickOpacityMask</name>
    <filename>classDQuickOpacityMask.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickOpacityMaskPrivate</name>
    <filename>classDQuickOpacityMaskPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickRectangle</name>
    <filename>classDQuickRectangle.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickRectangleCleanup</name>
    <filename>classDQuickRectangleCleanup.html</filename>
    <base>QRunnable</base>
  </compound>
  <compound kind="class">
    <name>DQuickRectanglePrivate</name>
    <filename>classDQuickRectanglePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickShadowProvider</name>
    <filename>classDQuickShadowProvider.html</filename>
    <class kind="struct">DQuickShadowProvider::ShadowConfig</class>
  </compound>
  <compound kind="class">
    <name>DQuickSystemPalette</name>
    <filename>classDQuickSystemPalette.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>QColor</type>
      <name>window</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a2485d6a7a0e58bb27ceeda9fce237c3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>windowText</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>aebc572cf7309ed14062b25c960dfd8d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>base</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>ac16763670f9489db40ddb5506b3e66fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>text</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a2e53f506e3d91ecaf061f240d43c5513</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>alternateBase</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a2b79682f97ebfe349fd12276cc94ff2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>button</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a3e29daae18729c3505b7781b9e4676a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>buttonText</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>abe0682efa8a6e6a484c7cf2d8184a7ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>light</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>aa7e77cbc0138139b05b914221cec6b0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>midlight</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a48040a6e0970fa458965005e1f3653ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>dark</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a8213dd37ff319e9ce0a465adba46e8ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>mid</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a4bb554bc8dfc8da4f15a57ffa940a59b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>shadow</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a66de535237e5eff3f287669bd9db7a85</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>highlight</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>adff5d40a729867f9188e057aea84be97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>highlightedText</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a9d9400354dc4f73251bd9299c6c90d96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>itemBackground</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>ace9fc483695a2b5d889d5f8694f60149</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>textTitle</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a266744db3119ece5317b8f6097462360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>textTips</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>ae152ba031cd50b1d3f531c7a5b5d2982</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>textWarning</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a16f7e9197073dc72c5aa6108869f8f43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>textLively</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a0e6e5834228c337c2f8d03b2f56ddd42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>lightLively</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>ab3d0a334bf597b6cda2afbbfe3ecde1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>darkLively</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>aff577cd21360508551b46d3e77b1f12b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>frameBorder</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>ac406aa7d2b489c38c1b7061c4d8bd31e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>placeholderText</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>aea43f33a7701e7bc27b88275f554fe26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>frameShadowBorder</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>a3b83cda3bd0175bf9ac448a6d049cc99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QColor</type>
      <name>obviousBackground</name>
      <anchorfile>classDQuickSystemPalette.html</anchorfile>
      <anchor>ac19be78f6a0ee21dcbbad45565439faf</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DQuickSystemPalettePrivate</name>
    <filename>classDQuickSystemPalettePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickViewportCleanup</name>
    <filename>classDQuickViewportCleanup.html</filename>
    <base>QRunnable</base>
  </compound>
  <compound kind="class">
    <name>DQuickViewportTextureProvider</name>
    <filename>classDQuickViewportTextureProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickWaterProgressAttribute</name>
    <filename>classDQuickWaterProgressAttribute.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DQuickWaterProgressAttributePrivate</name>
    <filename>classDQuickWaterProgressAttributePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickWindow</name>
    <filename>classDQuickWindow.html</filename>
    <member kind="function">
      <type>DQuickWindowAttached *</type>
      <name>attached</name>
      <anchorfile>classDQuickWindow.html</anchorfile>
      <anchor>a25e0572391a9d548fb5f156dc413625e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DQuickWindowAttached *</type>
      <name>qmlAttachedProperties</name>
      <anchorfile>classDQuickWindow.html</anchorfile>
      <anchor>a55ee903c67b71ab73d7752ec55909537</anchor>
      <arglist>(QObject *object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DQuickWindowAttached</name>
    <filename>classDQuickWindowAttached.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a95e8e8f25b34ade04cfe632fdc7aec2f</anchor>
      <arglist>(bool e)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWindowRadius</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>ac60e7e2197f79b3d13899fa4014d7f8f</anchor>
      <arglist>(int windowRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBorderWidth</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>afbcec7059e999b1d900ac4b6669042f2</anchor>
      <arglist>(int borderWidth)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBorderColor</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a2bff8dbc35dd7188f79e792d93976601</anchor>
      <arglist>(const QColor &amp;borderColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowRadius</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a3ee5d14291646e99b35805a3b3345ab2</anchor>
      <arglist>(int shadowRadius)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowOffset</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a7895f7b5a5cef4d259d92e606c2c0343</anchor>
      <arglist>(const QPoint &amp;shadowOffset)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setShadowColor</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a2f5eaad5fe91e9166b04072e5520f571</anchor>
      <arglist>(const QColor &amp;shadowColor)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTranslucentBackground</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a635e516a25bca08b079dd234e09a43f5</anchor>
      <arglist>(bool translucentBackground)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableSystemResize</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a4d2994562c2f2161493e891f3517d27c</anchor>
      <arglist>(bool enableSystemResize)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableSystemMove</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a553082859c1c61c0a169d1130c012153</anchor>
      <arglist>(bool enableSystemMove)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setEnableBlurWindow</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>ad1099dcfacde261e7330862f6d36f34b</anchor>
      <arglist>(bool enableBlurWindow)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setWmWindowTypes</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>aab40361aa59ab93b16dc94fe53462fb0</anchor>
      <arglist>(DTK_GUI_NAMESPACE::DWindowManagerHelper::WmWindowTypes wmWindowTypes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a8f3784f40ed01008c00a4537da3de550</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QRegion</type>
      <name>frameMask</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>ad406bef928c2adf52f6a7aa0ce53c75b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableSystemResize</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a78201051bd3cc39884c2e1a68180255b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DTK_GUI_NAMESPACE::DWindowManagerHelper::WmWindowTypes</type>
      <name>wmWindowTypes</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a1f9ad30c79eca9bd1de7d43ea3cd3f83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>windowRadius</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a323f421af33b3fff60e783328c50d5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>borderWidth</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a717af63c0a6e984edef88e875b0fbd87</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>borderColor</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a5e6394731502f12a0a62b80a0bd92b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>shadowRadius</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>aa4575e5366333178c6af381052e0da08</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QPoint</type>
      <name>shadowOffset</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>ac633d545cd07160090eff2600ec82dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QColor</type>
      <name>shadowColor</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a3070c07d1e3595618a24837f5b7148ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>translucentBackground</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a7717d15c0d5621c61337b8832e230929</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableSystemMove</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a03d6864f27a97759d84246f1f1fd4ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>enableBlurWindow</name>
      <anchorfile>classDQuickWindowAttached.html</anchorfile>
      <anchor>a0f91540e886952cfe1d24ac3e9b81003</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DQuickWindowAttachedPrivate</name>
    <filename>classDQuickWindowAttachedPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DQuickWindowPrivate</name>
    <filename>classDQuickWindowPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DRadioButtonExample</name>
    <filename>classDRadioButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DraggableLabel</name>
    <filename>classDraggableLabel.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DRecentData</name>
    <filename>structDtk_1_1Core_1_1DRecentData.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DRecentManager</name>
    <filename>classDtk_1_1Core_1_1DRecentManager.html</filename>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>addItem</name>
      <anchorfile>classDtk_1_1Core_1_1DRecentManager.html</anchorfile>
      <anchor>aa4e6bd89ef90e295d639fc84da7f90ce</anchor>
      <arglist>(const QString &amp;uri, DRecentData &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeItem</name>
      <anchorfile>classDtk_1_1Core_1_1DRecentManager.html</anchorfile>
      <anchor>a7c098847b5e6c1c641883db9941c89e5</anchor>
      <arglist>(const QString &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeItems</name>
      <anchorfile>classDtk_1_1Core_1_1DRecentManager.html</anchorfile>
      <anchor>a9c799534ed4b30676ee9784d7f937353</anchor>
      <arglist>(const QStringList &amp;list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DRectangleNode</name>
    <filename>classDRectangleNode.html</filename>
  </compound>
  <compound kind="class">
    <name>DRedPointLabel</name>
    <filename>classDRedPointLabel.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>DRegionMonitor</name>
    <filename>classDRegionMonitor.html</filename>
    <base>QObject</base>
    <member kind="enumeration">
      <type></type>
      <name>RegisterdFlag</name>
      <anchorfile>classDRegionMonitor.html</anchorfile>
      <anchor>a2e35e5e9f947f316134b18935db633d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>RegisterdFlags</type>
      <name>registerdFlags</name>
      <anchorfile>classDRegionMonitor.html</anchorfile>
      <anchor>aa3084dcc78422a63ab35b89394a02e57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DRegionMonitor</name>
    <filename>classDtk_1_1Gui_1_1DRegionMonitor.html</filename>
  </compound>
  <compound kind="class">
    <name>DRegionMonitorPrivate</name>
    <filename>classDRegionMonitorPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DRfmanager</name>
    <filename>classDRfmanager.html</filename>
    <base>QObject</base>
    <class kind="struct">DRfmanager::RfDevice</class>
    <member kind="enumeration">
      <type></type>
      <name>RfOperation</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>ad0faf1f6fb94ee40c3e9a3b47ed66575</anchor>
      <arglist></arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>blockBluetooth</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a0eebaaec5fe01ce4f2b415f0fe76f557</anchor>
      <arglist>(bool bluetoothBlocked=true)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>blockWifi</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a744d0c33bc169ac6dfdf92a78c47fc08</anchor>
      <arglist>(bool wifiBlocked=true)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; bool &gt;</type>
      <name>blockAll</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>abc6165c0244db9761d8e51022f50303a</anchor>
      <arglist>(bool blockAll=true)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bluetoothBlockedChanged</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a4a210c40cee6601942bdf540a26052cb</anchor>
      <arglist>(bool bluetoothBlocked)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wifiBlockedChanged</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>acd9ea80e9f70ffa20653561ba2b477d1</anchor>
      <arglist>(bool wifiBlocked)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>countChanged</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a8ae762c18b66b314cfcba05991cadc6b</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>allBlockedChanged</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a9c6447b7534c3fb8aea57ee12d671224</anchor>
      <arglist>(bool blockAll)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>blockedChanged</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a6be547ae4fd98c275724404e75752ac6</anchor>
      <arglist>(quint32 idx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DRfmanager</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>add1f201a4ff993af9ec143d742e748ce</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DRfmanager</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>ad45aa2b6d9853275fcec26ac0116451d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>block</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>af93117d3f785d87566c77a9822957c55</anchor>
      <arglist>(RfType type, bool blocked=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>block</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a16d543e8052359a7e819b2ff1a6be0a5</anchor>
      <arglist>(quint32 id, bool blocked=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBluetoothBlocked</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a28374ea305f59acf1d2e167b6aed2b1a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWifiBlocked</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a0034a8b467ea1599cdff2cbaf79a7b1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllBlocked</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a21a132e2e6f06aa7911474b6a13b7939</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>ad6aca9277a6bf7c8575ecfee443cb506</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; RfDevice &gt;</type>
      <name>deviceList</name>
      <anchorfile>classDRfmanager.html</anchorfile>
      <anchor>a8b4cae208c7028372465a99510227faa</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::RfMgr::DRfmanager</name>
    <filename>classDtk_1_1RfMgr_1_1DRfmanager.html</filename>
  </compound>
  <compound kind="class">
    <name>DRfmanagerPrivate</name>
    <filename>classDRfmanagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DropArea</name>
    <filename>classDropArea.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>DRubberBandExample</name>
    <filename>classDRubberBandExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DtkCorePrivate::DSafeQueue</name>
    <filename>classDtk_1_1Core_1_1DtkCorePrivate_1_1DSafeQueue.html</filename>
    <templarg></templarg>
    <base>QQueue&lt; T &gt;</base>
  </compound>
  <compound kind="class">
    <name>DScreenRecorder</name>
    <filename>classDScreenRecorder.html</filename>
    <member kind="function">
      <type>VCodecID</type>
      <name>codec</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>aaf62e8a968e3d4ca470d1cdf4e8cd868</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCodec</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a65412a50101e25ceaa91fb735a521d29</anchor>
      <arglist>(const VCodecID &amp;codec)</arglist>
    </member>
    <member kind="function">
      <type>PixFormatID</type>
      <name>pixfmt</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a364216c05c840ed55db5d7ff733f8d21</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPixfmt</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a599dc9c543b8c389c4e6c02494416576</anchor>
      <arglist>(const PixFormatID pixfmt)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>bitRate</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>aa9893aed14c0eca2f3d0d1bd01924e30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBitRate</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a41ca7f8530ba3a8d90af63b14e799fed</anchor>
      <arglist>(int bitrate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>frameRate</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a7cfeda3c9ce7cfb45be67869b6702153</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrameRate</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>aadc9b9fc7ce088793bb544edc1e68055</anchor>
      <arglist>(int rate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResolution</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a8876f73d4282c0eb0e72b4b5034bb79d</anchor>
      <arglist>(const int width, const int height)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>resolution</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a6cfc1a117e924504bd18d585bab1fbb6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QUrl</type>
      <name>outputLocation</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>adbaa4675bde844a27b9392f762a55637</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setOutputLocation</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a0b776e133017a205eeed37c27aa66142</anchor>
      <arglist>(const QUrl &amp;location)</arglist>
    </member>
    <member kind="function">
      <type>QPoint</type>
      <name>topLeft</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a007d6af8d6388c47c7bac70ce3117711</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTopLeft</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>ac0313ab216053341c776d2f69603ecaf</anchor>
      <arglist>(const int x, const int y)</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>state</name>
      <anchorfile>classDScreenRecorder.html</anchorfile>
      <anchor>a78fb22bfc09be5e360b6ee04cf7cca67</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DScreenRecorder</name>
    <filename>classDtk_1_1Multimedia_1_1DScreenRecorder.html</filename>
  </compound>
  <compound kind="class">
    <name>DScreenRecorderPrivate</name>
    <filename>classDScreenRecorderPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DScreenShot</name>
    <filename>classDScreenShot.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>QPixmap</type>
      <name>fullScreenShot</name>
      <anchorfile>classDScreenShot.html</anchorfile>
      <anchor>a630f5cdd7d94d7a4048d992c6c5f5ea2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QPixmap</type>
      <name>screenShot</name>
      <anchorfile>classDScreenShot.html</anchorfile>
      <anchor>afe49191759b53887b3aa009baf620cff</anchor>
      <arglist>(const QPoint point, const QSize size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DScreenShot</name>
    <filename>classDtk_1_1Multimedia_1_1DScreenShot.html</filename>
  </compound>
  <compound kind="class">
    <name>DScreenShotPrivate</name>
    <filename>classDScreenShotPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DScrollBarExample</name>
    <filename>classDScrollBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSearch</name>
    <filename>classDSearch.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSearchComboBox</name>
    <filename>classDSearchComboBox.html</filename>
    <base>DComboBox</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showPopup</name>
      <anchorfile>classDSearchComboBox.html</anchorfile>
      <anchor>ab43d5012a6dfc4fe09b25d404ff3c2fb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSearchComboBox</name>
    <filename>classDtk_1_1Widget_1_1DSearchComboBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DSearchComboBoxExample</name>
    <filename>classDSearchComboBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSearchComboBoxPrivate</name>
    <filename>classDSearchComboBoxPrivate.html</filename>
    <base>DComboBoxPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSearchEdit</name>
    <filename>classDSearchEdit.html</filename>
    <base>DLineEdit</base>
    <member kind="function">
      <type></type>
      <name>DSearchEdit</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a7061bf4acc92e85427080ce64bc3a8b0</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaceHolder</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a6582ab9dbcb452a21a0776d865b104c0</anchor>
      <arglist>(QString placeHolder)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>placeHolder</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a890d86b60db8349cc9c46116c51b2e77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEdit</name>
      <anchorfile>classDSearchEdit.html</anchorfile>
      <anchor>a1e570c9b1cfd4d26aad8069dd4c60dcb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSearchEdit</name>
    <filename>classDtk_1_1Widget_1_1DSearchEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DSearchEditExample</name>
    <filename>classDSearchEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSearchEditPrivate</name>
    <filename>classDSearchEditPrivate.html</filename>
    <base protection="private">DLineEditPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSearchPrivate</name>
    <filename>classDSearchPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSecretAgent</name>
    <filename>classDSecretAgent.html</filename>
    <base>QObject</base>
    <member kind="slot" virtualness="pure">
      <type>virtual DExpected&lt; SettingDesc &gt;</type>
      <name>secrets</name>
      <anchorfile>classDSecretAgent.html</anchorfile>
      <anchor>aa459f89117610da89dde647a4ff6a3a1</anchor>
      <arglist>(const SettingDesc &amp;conn, const quint64 connId, const QString &amp;settingName, const QList&lt; QString &gt; &amp;hints, const GetSecretFlags &amp;flags)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual DExpected&lt; void &gt;</type>
      <name>cancelSecrets</name>
      <anchorfile>classDSecretAgent.html</anchorfile>
      <anchor>a4bfd7a460fb2545f0bede5fa6f704d89</anchor>
      <arglist>(const quint64 connId, const QString &amp;settingName)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual DExpected&lt; void &gt;</type>
      <name>saveSecret</name>
      <anchorfile>classDSecretAgent.html</anchorfile>
      <anchor>ad705bcf6c3975554f3f85011f6f19d56</anchor>
      <arglist>(const SettingDesc &amp;connSettigns, const quint64 connId)=0</arglist>
    </member>
    <member kind="slot" virtualness="pure">
      <type>virtual DExpected&lt; void &gt;</type>
      <name>deleteSecret</name>
      <anchorfile>classDSecretAgent.html</anchorfile>
      <anchor>afb8aff8f86c56b85cb4eeedfe4b5d87e</anchor>
      <arglist>(const SettingDesc &amp;connSettigns, const quint64 connId)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DSecretAgent</name>
    <filename>classDtk_1_1NetworkManager_1_1DSecretAgent.html</filename>
  </compound>
  <compound kind="class">
    <name>DSecretAgentAdaptor</name>
    <filename>classDSecretAgentAdaptor.html</filename>
  </compound>
  <compound kind="class">
    <name>DSecretAgentInterface</name>
    <filename>classDSecretAgentInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSecretAgentPrivate</name>
    <filename>classDSecretAgentPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSecureString</name>
    <filename>classDtk_1_1Core_1_1DSecureString.html</filename>
    <base>QString</base>
  </compound>
  <compound kind="class">
    <name>DSecurity8021xSetting</name>
    <filename>classDSecurity8021xSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DSecurity8021xSettingPrivate</name>
    <filename>classDSecurity8021xSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSegmentedControl</name>
    <filename>classDtk_1_1Widget_1_1DSegmentedControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DSegmentedControlPrivate</name>
    <filename>classDSegmentedControlPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSegmentedHighlight</name>
    <filename>classDSegmentedHighlight.html</filename>
    <base>QToolButton</base>
    <member kind="function">
      <type></type>
      <name>DSegmentedHighlight</name>
      <anchorfile>classDSegmentedHighlight.html</anchorfile>
      <anchor>a1f4b56a09cb1c8523532057178968a59</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSegmentedHighlight</name>
    <filename>classDtk_1_1Widget_1_1DSegmentedHighlight.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettings</name>
    <filename>classDtk_1_1Core_1_1DSettings.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>afd6649a8b6094486622f6b77d495be55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>af8461847b2a4dc91043d54525061880d</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ac1dce271072dbd8a24dcfb0be0ce126b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSettings</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a9161232d6f59d01b7dee4c306a41b9a4</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackend</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a7e14ca3604c4c42fe8588b59deea4dc7</anchor>
      <arglist>(DSettingsBackend *backend=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QJsonObject</type>
      <name>meta</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ad12b7a3743559af82c6c4cfd7108f14f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a04366c416aca042e559a342bfaf46ca3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsOption &gt; &gt;</type>
      <name>options</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ad0011bfed67207736a870a4fcc678f4b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsOption &gt;</type>
      <name>option</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a7edc0e0c28f32c0dd37929ae7cc08df6</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a4597686d44caa7a9a293ded07d144611</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>groupKeys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a87bbb2cfe49f395639052099153a2ccb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsGroup &gt; &gt;</type>
      <name>groups</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ac16782cccd6da5bde7f1e133fa10c924</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>group</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ad36d7d56bb9664cd6ac567358b8795ea</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>aabfda1a655ab4b0eea9b09101ab67390</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettings &gt;</type>
      <name>fromJson</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>ae161fca500926526311861d3811fa8b7</anchor>
      <arglist>(const QByteArray &amp;json)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettings &gt;</type>
      <name>fromJsonFile</name>
      <anchorfile>classDtk_1_1Core_1_1DSettings.html</anchorfile>
      <anchor>a93154ad7a62d6fac43acffedb482503c</anchor>
      <arglist>(const QString &amp;filepath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsBackend</name>
    <filename>classDtk_1_1Core_1_1DSettingsBackend.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>optionChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>aa62dbd95a4eac26bb1cf5ccea5265cfe</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>aaf541e239844f9c1a82508a7fb1a9ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>af0131f2b427c1c5db3c2a9ae1dad900f</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSettingsBackend</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>a1c4a7e8e454b94c0c2b9f06e178eb73f</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>af9c0c3b610a93dd25889a371208c3773</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>acd2fd78f0d33b67bc484afab5d77b3f8</anchor>
      <arglist>(const QString &amp;key) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>a80da57c201534e8d9662956877f4a48a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsBackend.html</anchorfile>
      <anchor>a1695d64f56a4aed4678d2c2c7d74980a</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsDConfigBackend</name>
    <filename>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</filename>
    <base>Dtk::Core::DSettingsBackend</base>
    <member kind="function">
      <type></type>
      <name>DSettingsDConfigBackend</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a391639afa5b7e80fefbdad3d312d4644</anchor>
      <arglist>(const QString &amp;name, const QString &amp;subpath=QString(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>acc2ec5d01d86b169ca59e914e78e5a78</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a426e5898bdc06bcc688ca7cc1e918b36</anchor>
      <arglist>(const QString &amp;key) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a67fbdb78ddb13546246ca95cc80fa210</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsDConfigBackend.html</anchorfile>
      <anchor>a641d029b8d2c9f152902e18c01606894</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsDConfigBackendPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsDConfigBackendPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsDialog</name>
    <filename>classDSettingsDialog.html</filename>
    <base>DAbstractDialog</base>
  </compound>
  <compound kind="class">
    <name>DSettingsDialogPrivate</name>
    <filename>classDSettingsDialogPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsGroup</name>
    <filename>classDtk_1_1Core_1_1DSettingsGroup.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>DSettingsGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a09d183d6e7fcaf58e665a683f658413f</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>parentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a570c427567efc9d819ac9633081e0a45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a913ac2834ab1291367f30c115c7a7a12</anchor>
      <arglist>(QPointer&lt; DSettingsGroup &gt; parentGroup)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>key</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a250c594e6a301cbc749038d879103802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>ae989c0d23ee05873baba3b36acf511f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a113fe4d2556d340e5fa3bc867a182225</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>childGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a708dc3bf8f7c7ef5495c11c1f02d13ca</anchor>
      <arglist>(const QString &amp;groupKey) const</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsOption &gt;</type>
      <name>option</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a32fd804ed63ef5c0727a9fc039e9fc91</anchor>
      <arglist>(const QString &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsGroup &gt; &gt;</type>
      <name>childGroups</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>ac38e0c6fbbd51922413f84e1cb1108d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsOption &gt; &gt;</type>
      <name>childOptions</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a85008ef304230b132bba47135c627fac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; QPointer&lt; DSettingsOption &gt; &gt;</type>
      <name>options</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>abbdbdbd29ebbecbbf7ee5e828c74fe62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettingsGroup &gt;</type>
      <name>fromJson</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsGroup.html</anchorfile>
      <anchor>a5401175cedd9ed5c22d0bacc17efe4ca</anchor>
      <arglist>(const QString &amp;prefixKey, const QJsonObject &amp;group)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsGroupPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsGroupPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsManager</name>
    <filename>classDSettingsManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; quint64 &gt;</type>
      <name>getConnectionByUUID</name>
      <anchorfile>classDSettingsManager.html</anchorfile>
      <anchor>ab6bacf64b684e1946837abf522effd36</anchor>
      <arglist>(const QUuid &amp;UUID) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; quint64 &gt;</type>
      <name>addConnection</name>
      <anchorfile>classDSettingsManager.html</anchorfile>
      <anchor>a245ac6c598ce14e670206396e9576de5</anchor>
      <arglist>(const SettingDesc &amp;conn) const</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>ConnectionRemoved</name>
      <anchorfile>classDSettingsManager.html</anchorfile>
      <anchor>a9d57db3b2cfa93493e551f338630615c</anchor>
      <arglist>(const quint64 connId)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>NewConnection</name>
      <anchorfile>classDSettingsManager.html</anchorfile>
      <anchor>ab6ce251ffe12444a181f54e443077032</anchor>
      <arglist>(const quint64 connId)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DSettingsManager</name>
    <filename>classDtk_1_1NetworkManager_1_1DSettingsManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsManagerInterface</name>
    <filename>classDSettingsManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSettingsManagerPrivate</name>
    <filename>classDSettingsManagerPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsOption</name>
    <filename>classDtk_1_1Core_1_1DSettingsOption.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a557385cf362ad50e8576ca44f1345146</anchor>
      <arglist>(QVariant value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a2dcb27716ea88b96f25efa9009a31e52</anchor>
      <arglist>(const QString &amp;dataType, QVariant value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>aa33a8ae87df405b8fd06c873bd026712</anchor>
      <arglist>(QVariant value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dataChanged</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>abbbdf2b47eec35df9e37909e184612fb</anchor>
      <arglist>(const QString &amp;dataType, QVariant value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSettingsOption</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>aaec0ceefdfe2f431327b31316d2750d1</anchor>
      <arglist>(QObject *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>QPointer&lt; DSettingsGroup &gt;</type>
      <name>parentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a64dcb2445a78532c4e3ed5183e8337e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentGroup</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>af97d96abf8a428f99361166d9ed8679a</anchor>
      <arglist>(QPointer&lt; DSettingsGroup &gt; parentGroup)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>key</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a6652cb5ad18c5c45485a206f174a368f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a93721333111f2bfceef63c8ba76885f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canReset</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a430a4d2e652375bcd96c6ac7ea947e0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>defaultValue</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>aafc5ef7c58c42762ea67882552602e2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>value</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a92417b5c5cc11d3bbf86ff26d457641a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>data</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a1138075be3899ae6b2e7d0c3d7f71c50</anchor>
      <arglist>(const QString &amp;dataType) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>viewType</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a8c78f69648c9f610914a73e28e76bffb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a2732dbf68d81b850dd4b76fe1f7a74ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPointer&lt; DSettingsOption &gt;</type>
      <name>fromJson</name>
      <anchorfile>classDtk_1_1Core_1_1DSettingsOption.html</anchorfile>
      <anchor>a49099a1678fab0c1edc50b67e621a777</anchor>
      <arglist>(const QString &amp;prefixKey, const QJsonObject &amp;json)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsOptionPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsOptionPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSettingsPrivate</name>
    <filename>classDtk_1_1Core_1_1DSettingsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsWidgetFactory</name>
    <filename>classDSettingsWidgetFactory.html</filename>
    <base>QObject</base>
    <member kind="typedef">
      <type>QWidget *()</type>
      <name>WidgetCreateHandler</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a668674938916ca9c3fec5827405366a9</anchor>
      <arglist>(QObject *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a47bd780b13cffde1060f4d285c4cbdd3</anchor>
      <arglist>(const QString &amp;viewType, std::function&lt; WidgetCreateHandler &gt; handler)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>createWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>aa19df5a40136e23d2e042a6775e1b544</anchor>
      <arglist>(QPointer&lt; DTK_CORE_NAMESPACE::DSettingsOption &gt; option)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>createWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a107e5e424b2c79abe6dee09d45c05470</anchor>
      <arglist>(const QByteArray &amp;translateContext, QPointer&lt; DTK_CORE_NAMESPACE::DSettingsOption &gt; option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED QWidget *</type>
      <name>createTwoColumWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>a71bd4949a01b53d09f8459c07ac7596e</anchor>
      <arglist>(DTK_CORE_NAMESPACE::DSettingsOption *option, QWidget *rightWidget)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static D_DECL_DEPRECATED QWidget *</type>
      <name>createTwoColumWidget</name>
      <anchorfile>classDSettingsWidgetFactory.html</anchorfile>
      <anchor>af537111ac38912930bc9ee1a9715a9e0</anchor>
      <arglist>(const QByteArray &amp;translateContext, DTK_CORE_NAMESPACE::DSettingsOption *option, QWidget *rightWidget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSettingsWidgetFactory</name>
    <filename>classDtk_1_1Widget_1_1DSettingsWidgetFactory.html</filename>
  </compound>
  <compound kind="class">
    <name>DSettingsWidgetFactoryPrivate</name>
    <filename>classDSettingsWidgetFactoryPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSGApplication</name>
    <filename>classDtk_1_1Core_1_1DSGApplication.html</filename>
  </compound>
  <compound kind="class">
    <name>DSGBlendNode</name>
    <filename>classDSGBlendNode.html</filename>
  </compound>
  <compound kind="class">
    <name>DSGBlurNode</name>
    <filename>classDSGBlurNode.html</filename>
  </compound>
  <compound kind="class">
    <name>DShadowLine</name>
    <filename>classDShadowLine.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>DShadowLine</name>
      <anchorfile>classDShadowLine.html</anchorfile>
      <anchor>acf0337b85b04ef1cb102d120a69b270b</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DShadowLinePrivate</name>
    <filename>classDShadowLinePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DShortcutEditLabel</name>
    <filename>classDShortcutEditLabel.html</filename>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>DSidebarHelper</name>
    <filename>classDSidebarHelper.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSimpleListItem</name>
    <filename>classDSimpleListItem.html</filename>
    <base>QObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>sameAs</name>
      <anchorfile>classDSimpleListItem.html</anchorfile>
      <anchor>ac39af04ed2ae370f25b0e876af8ab28d</anchor>
      <arglist>(DSimpleListItem *item)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawBackground</name>
      <anchorfile>classDSimpleListItem.html</anchorfile>
      <anchor>aeb57f8291ed21f59e93389d3c6303e35</anchor>
      <arglist>(QRect rect, QPainter *painter, int index, bool isSelect, bool isHover)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>drawForeground</name>
      <anchorfile>classDSimpleListItem.html</anchorfile>
      <anchor>abb17ddcebef5fd622099753afe606adf</anchor>
      <arglist>(QRect rect, QPainter *painter, int column, int index, bool isSelect, bool isHover)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSimpleListItem</name>
    <filename>classDtk_1_1Widget_1_1DSimpleListItem.html</filename>
  </compound>
  <compound kind="class">
    <name>DSimpleListView</name>
    <filename>classDSimpleListView.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setRowHeight</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a7bda81ced35dad95a06d36ed1f5bcd71</anchor>
      <arglist>(int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnTitleInfo</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab332523b3dc557cbe6a8181036e09c6c</anchor>
      <arglist>(QList&lt; QString &gt; titles, QList&lt; int &gt; widths, int height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnHideFlags</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ad1e82c693629f63022c830392ef6708f</anchor>
      <arglist>(QList&lt; bool &gt; toggleHideFlags, int alwaysVisibleColumn=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSortingAlgorithms</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>aad58cc953fd47a3f20f4b045df5612b9</anchor>
      <arglist>(QList&lt; SortAlgorithm &gt; *algorithms, int sortColumn=-1, bool descendingSort=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSearchAlgorithm</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab7350792bc21e88dcbed4cf925f5650e</anchor>
      <arglist>(SearchAlgorithm algorithm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClipRadius</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a89c482f04201aa4cd1678ff206ae47ca</anchor>
      <arglist>(int radius)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrame</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>acc198ca190e6bcb63f476ca372010c11</anchor>
      <arglist>(bool enableFrame, QColor color=QColor(&quot;#000000&quot;), double opacity=0.1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a68050b0015fa84bd7576ebf530d45950</anchor>
      <arglist>(QList&lt; DSimpleListItem * &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a6eea0c196d8b5decb346fc3bde155805</anchor>
      <arglist>(DSimpleListItem *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a32d83aeec9ee1fca9e940993293d959a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelections</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a5387d47283cdab9575914cc3cb9cb112</anchor>
      <arglist>(QList&lt; DSimpleListItem * &gt; items, bool recordLastSelection=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearSelections</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a41437f1c968676cbd62e43df4322bba3</anchor>
      <arglist>(bool clearLastSelection=true)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DSimpleListItem * &gt;</type>
      <name>getSelections</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>af4e1c867ebcf3088bd9d078b9b979354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a2f0e8fd77346c0d977614de614995bc0</anchor>
      <arglist>(QList&lt; DSimpleListItem * &gt; items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>search</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a527335b858d598b60ff06536f3e209f8</anchor>
      <arglist>(QString searchContent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSingleSelect</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ae470772153e14775200d3f73c4ebd1af</anchor>
      <arglist>(bool singleSelect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keepSelectWhenClickBlank</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab4e80fdc77954ea7a861561346677547</anchor>
      <arglist>(bool keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectAllItems</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ade4c80d0ac7d4469919db72556d66235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectFirstItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab6f121283a098a7b0a6dc58f818ae444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectLastItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ab74dfca4437c778f0b389c70896aafdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectNextItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a91348efe3fffec9bd9701616d6a692b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPrevItem</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>aba5bb6080d10120be94019243fe4d8f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectPageDown</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a90363134827174b264bd1a6518e8bbe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectPageUp</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>af3c9d3f0896a99ecc3f9080245eef317</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToEnd</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>ac1ed0e289b46bb2708fcbe2525bff290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToHome</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a51de339bbe10949fc4b5248595c3b2a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToNext</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a15b29adecd217bd0b679334807b3a646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftSelectToPrev</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>abad834de4970133dfeb2bda1c08c8b9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollPageDown</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>a6f1d935a37378080c2bc0b597a9e635c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollPageUp</name>
      <anchorfile>classDSimpleListView.html</anchorfile>
      <anchor>af3dc25ed88ab487b941d78afa57d3cf9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSimpleListView</name>
    <filename>classDtk_1_1Widget_1_1DSimpleListView.html</filename>
  </compound>
  <compound kind="class">
    <name>DSimpleListViewPrivate</name>
    <filename>classDSimpleListViewPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSingleton</name>
    <filename>classDtk_1_1Core_1_1DSingleton.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>DSingleton&lt; Singleton &gt;</name>
    <filename>classDtk_1_1Core_1_1DSingleton.html</filename>
  </compound>
  <compound kind="class">
    <name>DSizegripExample</name>
    <filename>classDSizegripExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSizeModeHelper</name>
    <filename>classDSizeModeHelper.html</filename>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>element</name>
      <anchorfile>classDSizeModeHelper.html</anchorfile>
      <anchor>af99b76588539f2aca10612ffad548c59</anchor>
      <arglist>(const T &amp;t1, const T &amp;t2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSizeModeHelper</name>
    <filename>classDtk_1_1Widget_1_1DSizeModeHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DSlider</name>
    <filename>classDSlider.html</filename>
    <base>QWidget</base>
    <member kind="signal">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a59dfaf1bf476a1288ac324c4a2c3a315</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sliderMoved</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a2ebc63d3e128907af409b9b4f2721a70</anchor>
      <arglist>(int position)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>sliderReleased</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>acbd859f4128be4990b05a5c7788bbeee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>rangeChanged</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>afeb1ce8cf77b5f7669e4ef09a79565aa</anchor>
      <arglist>(int min, int max)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>actionTriggered</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>aa8eb1bd0babafbcee8d4c6e262a9188e</anchor>
      <arglist>(int action)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>iconClicked</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a5c31c68ec5cf3224802091d2cfe0f7d1</anchor>
      <arglist>(SliderIcons icon, bool checked)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Orientation</type>
      <name>orientation</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>aebb5363ab2b1240ba08e63855135a24f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSlider *</type>
      <name>slider</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a0ec22309009e3cf61bc820e56f9fff45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftIcon</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a6b643c186ffd8d01bc021de01007678f</anchor>
      <arglist>(const QIcon &amp;left)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightIcon</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>af29fc03cebda04d6a645f16292d3bcbf</anchor>
      <arglist>(const QIcon &amp;right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconSize</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a03e0f7256b165d203689bec3b0dcfb29</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a29c8805c3065b94ef9f27b7911d36980</anchor>
      <arglist>(int min)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>minimum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>ab007f56c39efa3b3327e533a73eecb7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a324d798989ae80d6b4860a28e5327ea1</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>adcd55c60d7155ac1d955fffcb4789aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageStep</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a9149d20239cbd0d300aabe180e5049ac</anchor>
      <arglist>(int pageStep)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pageStep</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a3795e272ec5995d4a7a70e01fdfcb24a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a9447a699a58735a138069be3b297a59b</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maximum</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a01c94ca7f06a6725ad17a3039f1157b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftTicks</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a57207d01a1effc99f774f0abd0c47031</anchor>
      <arglist>(const QStringList &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightTicks</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a769432a34948a84c1ed99916109438fb</anchor>
      <arglist>(const QStringList &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBelowTicks</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a7ad5a3142552ba8617f86b07e3e1b1d3</anchor>
      <arglist>(const QStringList &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkPositions</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a411252c2a7d9bb8275cf4ad4129506b5</anchor>
      <arglist>(QList&lt; int &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMouseWheelEnabled</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a06c733a81c32815dc85d9d1bf7127464</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTipValue</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>ae35d73a59dd82004d7e65dd4b16b3405</anchor>
      <arglist>(const QString &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>QSlider::TickPosition</type>
      <name>tickPosition</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a86a23f1cff92d76ddfb36a313aef9ef7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a83784dd0605fccac46482926632ffd37</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandleVisible</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a7031e237b5f314225bcce9455d78c243</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleVisible</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>adf4ae9c0593fc2d873338e94f067a63a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabledAcrossStyle</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a4193c3612a252539e29730b5ffa80c8f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>eventFilter</name>
      <anchorfile>classDSlider.html</anchorfile>
      <anchor>a522b48a49a1847797d36cbc54029b7c7</anchor>
      <arglist>(QObject *watched, QEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSlider</name>
    <filename>classDtk_1_1Widget_1_1DSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>DSliderExample</name>
    <filename>classDSliderExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSliderPrivate</name>
    <filename>classDSliderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSlideStackWidgetTransition</name>
    <filename>classDSlideStackWidgetTransition.html</filename>
    <base>DAbstractStackWidgetTransition</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSnapStandardPathsPrivate</name>
    <filename>classDtk_1_1Core_1_1DSnapStandardPathsPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSoftRectangleNode</name>
    <filename>classDSoftRectangleNode.html</filename>
  </compound>
  <compound kind="class">
    <name>DSoftwareBlurImageNode</name>
    <filename>classDSoftwareBlurImageNode.html</filename>
    <base>DSGBlurNode</base>
  </compound>
  <compound kind="class">
    <name>DSoftwareColorOverlayNode</name>
    <filename>classDSoftwareColorOverlayNode.html</filename>
    <base>DSoftwareEffectRenderNode</base>
  </compound>
  <compound kind="class">
    <name>DSoftwareEffectRenderNode</name>
    <filename>classDSoftwareEffectRenderNode.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSoftwareOpacityMaskNode</name>
    <filename>classDSoftwareOpacityMaskNode.html</filename>
    <base>DSoftwareEffectRenderNode</base>
  </compound>
  <compound kind="class">
    <name>DSoftwareRoundedImageNode</name>
    <filename>classDSoftwareRoundedImageNode.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinBox</name>
    <filename>classDSpinBox.html</filename>
    <base>QSpinBox</base>
    <member kind="signal">
      <type>void</type>
      <name>alertChanged</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>adc73dad572b700a621f3f2255c89a67d</anchor>
      <arglist>(bool alert)</arglist>
    </member>
    <member kind="signal">
      <type>D_DECL_DEPRECATED void</type>
      <name>defaultValueChanged</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>ac84ad79c09aa966ab4b963111766fc04</anchor>
      <arglist>(int defaultValue)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSpinBox</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>a81298d435e84b79e266d0ad416260a9d</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>QLineEdit *</type>
      <name>lineEdit</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>aab84f33ab717b843cebc973c7ff9e800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAlert</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>a922d0ab1a23a0d1b23253319cfd1c591</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>aa0cf810a3a802c4ccdea82f0cf888f79</anchor>
      <arglist>(const QString &amp;text, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showAlertMessage</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>abd3f4730a4e39d58e5a456c5b33fc12e</anchor>
      <arglist>(const QString &amp;text, QWidget *follower, int duration=3000)</arglist>
    </member>
    <member kind="function">
      <type>D_DECL_DEPRECATED int</type>
      <name>defaultValue</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>a7a8ab449a658658692c48977e0c55337</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>alert</name>
      <anchorfile>classDSpinBox.html</anchorfile>
      <anchor>aa0cd7e19b95a714aa275d0d881fdee66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSpinBox</name>
    <filename>classDtk_1_1Widget_1_1DSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinBoxExample</name>
    <filename>classDSpinBoxExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSpinBoxPrivate</name>
    <filename>classDSpinBoxPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinner</name>
    <filename>classDSpinner.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>ab0c871a4346e59884488953d4a3165f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>ad0496e81c3e84e5f422b7c9bcfec0073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setBackgroundColor</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>a2ede6f296d68792aed146447609f5a00</anchor>
      <arglist>(QColor color)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSpinner</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>aa381c0709e274ac703ad2396241be5dc</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classDSpinner.html</anchorfile>
      <anchor>a13337e836802c26c840173add40839d8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSpinner</name>
    <filename>classDtk_1_1Widget_1_1DSpinner.html</filename>
  </compound>
  <compound kind="class">
    <name>DSpinnerExample</name>
    <filename>classDSpinnerExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSpinnerPrivate</name>
    <filename>classDSpinnerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSplitScreenCell</name>
    <filename>classDSplitScreenCell.html</filename>
    <base>DFrame</base>
  </compound>
  <compound kind="class">
    <name>DSplitScreenPlaceholder</name>
    <filename>classDSplitScreenPlaceholder.html</filename>
    <base>QPushButton</base>
  </compound>
  <compound kind="class">
    <name>DSplitScreenWidget</name>
    <filename>classDSplitScreenWidget.html</filename>
    <base>DBlurEffectWidget</base>
  </compound>
  <compound kind="class">
    <name>DSplitterExample</name>
    <filename>classDSplitterExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DStackWidget</name>
    <filename>classDStackWidget.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>int</type>
      <name>pushWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a3517a34832f08b78a1d1648dfa171873</anchor>
      <arglist>(QWidget *widget, bool enableTransition=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>insertWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>aa937c1b7849aaf0cd00e176ab8b1ae67</anchor>
      <arglist>(int index, QWidget *widget, bool enableTransition=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>popWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a3d50362e7da3ebc35a145bbcd06a0816</anchor>
      <arglist>(QWidget *widget=nullptr, bool isDelete=true, int count=1, bool enableTransition=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ac0e698b6e63d57dc002e6fb25ab4177c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ad2e6adcd1d8bb1cef87ac41ba2e4bc96</anchor>
      <arglist>(QWidget *widget) const</arglist>
    </member>
    <member kind="slot">
      <type>QWidget *</type>
      <name>getWidgetByIndex</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a1760d857d5a410c227cddd68609b5138</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTransition</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a604e8e98420eebef7ff367166fcfecaa</anchor>
      <arglist>(DAbstractStackWidgetTransition *transition)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAnimationDuration</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ae2b0c19a3052c7cf4fbbbecac4e8bb25</anchor>
      <arglist>(int animationDuration)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAnimationType</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>af5f329a87ad3949c2d44e7e89826883f</anchor>
      <arglist>(QEasingCurve::Type animationType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>busyChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a7c0736ab3dc8b14a34fc8adbc6499b11</anchor>
      <arglist>(bool busy)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>depthChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a10e44ee75108917d42cf49fa9e28d2b8</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentIndexChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>abcaade2cbd958cf14fddc8647d1fccd8</anchor>
      <arglist>(int currentIndex)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentWidgetChanged</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ae5ae21af0b824919a4a34b4b500dd5d1</anchor>
      <arglist>(QWidget *currentWidget)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>switchWidgetFinished</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a11d7c0f9e84a02f94bf70ca6e61ca075</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DStackWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a55ac207966a3b7816b860ba6c1a6f54e</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>busy</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a6fcc088fcb47630b71f4ea713b8b04d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a9e3ae594aabd4562d0434e9a7f4d35a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ae1284c77f6c92b6677bd94807e75bc71</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QWidget *</type>
      <name>currentWidget</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a24a9011e75fd17a65aeafb63376fa394</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>DAbstractStackWidgetTransition *</type>
      <name>transition</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a27c00f830cb825fcc43a99694fbbf515</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>int</type>
      <name>animationDuration</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>ac8ff0b9ccd9f9381fb8491c9a86a3f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QEasingCurve::Type</type>
      <name>animationType</name>
      <anchorfile>classDStackWidget.html</anchorfile>
      <anchor>a80f8830a63390778163a5c773285e772</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStackWidget</name>
    <filename>classDtk_1_1Widget_1_1DStackWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DStackWidgetPrivate</name>
    <filename>classDStackWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DStandardItem</name>
    <filename>classDStandardItem.html</filename>
    <base>QStandardItem</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DStandardItem</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>ad5c7f7992db7d6df8105d88d199f26fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>ad5ae056693628b762f745882d44215f3</anchor>
      <arglist>(Qt::Edge edge, const DViewItemActionList &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>DViewItemActionList</type>
      <name>actionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>ab704b928f0925200e2493493b0585963</anchor>
      <arglist>(Qt::Edge edge) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextActionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>a06f31e8d6d7f17b2cb7adfbb7f71bf7f</anchor>
      <arglist>(const DViewItemActionList &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>DViewItemActionList</type>
      <name>textActionList</name>
      <anchorfile>classDStandardItem.html</anchorfile>
      <anchor>a0e3fd18224fd75401889f66a52fc2e02</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStandardItem</name>
    <filename>classDtk_1_1Widget_1_1DStandardItem.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DStandardPaths</name>
    <filename>classDtk_1_1Core_1_1DStandardPaths.html</filename>
  </compound>
  <compound kind="class">
    <name>DStatusBarExample</name>
    <filename>classDStatusBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DStyle</name>
    <filename>classDStyle.html</filename>
    <base>QCommonStyle</base>
    <member kind="function">
      <type></type>
      <name>DStyle</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a9dacd7d2c67a28213e6c15af46bbd3b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawPrimitive</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>aa8e5cf6767aa7ceb9b7c5183bf84fdde</anchor>
      <arglist>(QStyle::PrimitiveElement pe, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawControl</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a495fb28d4d38d1cc4b49ba30cb0d70db</anchor>
      <arglist>(QStyle::ControlElement ce, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pixelMetric</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a88d3e8859d7f5b326ece3ad4a02a0515</anchor>
      <arglist>(QStyle::PixelMetric m, const QStyleOption *opt=nullptr, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>styleHint</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a0d274aca8713402935ba393c24f14a39</anchor>
      <arglist>(StyleHint sh, const QStyleOption *opt, const QWidget *w, QStyleHintReturn *shret) const override</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>subElementRect</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a0299226c4f4c0fb577f7e5a0acb43e80</anchor>
      <arglist>(QStyle::SubElement r, const QStyleOption *opt, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeFromContents</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a5f9233dd63ca9dd0df1f0a7d0a3f7285</anchor>
      <arglist>(QStyle::ContentsType ct, const QStyleOption *opt, const QSize &amp;contentsSize, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>standardIcon</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>aef9f5e751ad7130e9b4956343c100a51</anchor>
      <arglist>(QStyle::StandardPixmap st, const QStyleOption *opt=nullptr, const QWidget *widget=nullptr) const override</arglist>
    </member>
    <member kind="function">
      <type>QPalette</type>
      <name>standardPalette</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>afb0631ec71cc182d88ba42cd7db7e31d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a2f5c6a976f32634f5bd31d8e66c69cec</anchor>
      <arglist>(const QStyleOption *option, const QBrush &amp;base, QPalette::ColorGroup cg=QPalette::Normal, QPalette::ColorRole role=QPalette::NoRole) const</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af668ae5890493be6fad3a48e6717f426</anchor>
      <arglist>(StyleState state, const QStyleOption *option, const QBrush &amp;base, QPalette::ColorGroup cg=QPalette::Normal, QPalette::ColorRole role=QPalette::NoRole) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af338d2e199a6c011c3e0be77b0021fb1</anchor>
      <arglist>(StateFlags flags, const QBrush &amp;base, QPalette::ColorGroup cg=QPalette::Normal, QPalette::ColorRole role=QPalette::NoRole, const QStyleOption *option=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a28285c8bffdf1fe6fdba721f62a64091</anchor>
      <arglist>(const QStyleOption *option, const QBrush &amp;base, DPalette::ColorGroup cg=DPalette::Normal, DPalette::ColorType type=DPalette::ItemBackground) const</arglist>
    </member>
    <member kind="function">
      <type>QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>aa95bd14f945422e081db0024d8690092</anchor>
      <arglist>(StyleState state, const QStyleOption *option, const QBrush &amp;base, DPalette::ColorGroup cg=DPalette::Normal, DPalette::ColorType type=DPalette::ItemBackground) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QBrush</type>
      <name>generatedBrush</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a3cf731d8f94211c6cad460062f009e35</anchor>
      <arglist>(StateFlags flags, const QBrush &amp;base, DPalette::ColorGroup cg=DPalette::Normal, DPalette::ColorType type=DPalette::ItemBackground, const QStyleOption *option=nullptr) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>adjustColor</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af34b5f976da8863f7726de6c1f3e34e7</anchor>
      <arglist>(const QColor &amp;base, qint8 hueFloat=0, qint8 saturationFloat=0, qint8 lightnessFloat=0, qint8 redFloat=0, qint8 greenFloat=0, qint8 blueFloat=0, qint8 alphaFloat=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QColor</type>
      <name>blendColor</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a8adaaeda71a3e23c0630cc0353353d2d</anchor>
      <arglist>(const QColor &amp;substrate, const QColor &amp;superstratum)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QPair&lt; QIcon::Mode, QIcon::State &gt;</type>
      <name>toIconModeState</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a027e03d29fe92f7acf6468b43f1c53fa</anchor>
      <arglist>(const QStyleOption *option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawPrimitive</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>af4317fbe7ac4dec3d611b2f7416ad30f</anchor>
      <arglist>(const QStyle *style, DStyle::PrimitiveElement pe, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawControl</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>adf42b504462345989669610d5602ecd2</anchor>
      <arglist>(const QStyle *style, DStyle::ControlElement ce, const QStyleOption *opt, QPainter *p, const QWidget *w=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>pixelMetric</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>afe31693ba8092cf475ec23c8785d91df</anchor>
      <arglist>(const QStyle *style, DStyle::PixelMetric m, const QStyleOption *opt=nullptr, const QWidget *widget=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QRect</type>
      <name>subElementRect</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a9757e986c1f8994d0c177bdf86818c01</anchor>
      <arglist>(const QStyle *style, DStyle::SubElement r, const QStyleOption *opt, const QWidget *widget=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QSize</type>
      <name>sizeFromContents</name>
      <anchorfile>classDStyle.html</anchorfile>
      <anchor>a4d7eee3989a491453969bccb2c7df1ad</anchor>
      <arglist>(const QStyle *style, DStyle::ContentsType ct, const QStyleOption *opt, const QSize &amp;contentsSize, const QWidget *widget=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyle</name>
    <filename>classDtk_1_1Widget_1_1DStyle.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyledIconEngine</name>
    <filename>classDStyledIconEngine.html</filename>
    <base>QIconEngine</base>
    <member kind="function">
      <type></type>
      <name>DStyledIconEngine</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>ae16e51825700dd586bf4c40c1c015c2c</anchor>
      <arglist>(DrawFun drawFun, const QString &amp;iconName=QString())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bindDrawFun</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a13987fdfd95ec89a27276432a31b8650</anchor>
      <arglist>(DrawFun drawFun)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconName</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>aacb0fa3184b53db72ac9453a3e0673df</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>QPixmap</type>
      <name>pixmap</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a04be99e1f71c28aeed5dcd01523c93cc</anchor>
      <arglist>(const QSize &amp;size, QIcon::Mode mode, QIcon::State state) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>aa444e38048795a8483eac482f6b96ec3</anchor>
      <arglist>(QPainter *painter, const QPalette &amp;palette, const QRectF &amp;rect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a0f616fe3ee488b71e33ccbe7eb8b56d9</anchor>
      <arglist>(QPainter *painter, const QRect &amp;rect, QIcon::Mode mode, QIcon::State state) override</arglist>
    </member>
    <member kind="function">
      <type>QIconEngine *</type>
      <name>clone</name>
      <anchorfile>classDStyledIconEngine.html</anchorfile>
      <anchor>a694e493ef7ad843477d86851e741c772</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyledIconEngine</name>
    <filename>classDtk_1_1Widget_1_1DStyledIconEngine.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyledItemDelegate</name>
    <filename>classDStyledItemDelegate.html</filename>
    <base>QStyledItemDelegate</base>
  </compound>
  <compound kind="class">
    <name>DStyledItemDelegatePrivate</name>
    <filename>classDStyledItemDelegatePrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleHelper</name>
    <filename>classDStyleHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOption</name>
    <filename>classDStyleOption.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classDStyleOption.html</anchorfile>
      <anchor>af663e511395279eda9bc9a2e7360498f</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyleOption</name>
    <filename>classDtk_1_1Widget_1_1DStyleOption.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOptionBackgroundGroup</name>
    <filename>classDStyleOptionBackgroundGroup.html</filename>
    <base>QStyleOption</base>
    <base>DStyleOption</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionButton</name>
    <filename>classDStyleOptionButton.html</filename>
    <base>QStyleOptionButton</base>
    <base>DStyleOption</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classDStyleOptionButton.html</anchorfile>
      <anchor>af561d3cec57b2e58e8a43489e77a7075</anchor>
      <arglist>(const QWidget *widget) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyleOptionButton</name>
    <filename>classDtk_1_1Widget_1_1DStyleOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOptionButtonBoxButton</name>
    <filename>classDStyleOptionButtonBoxButton.html</filename>
    <base>DStyleOptionButton</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionFloatingWidget</name>
    <filename>classDStyleOptionFloatingWidget.html</filename>
    <base>QStyleOption</base>
    <base>DStyleOption</base>
    <member kind="function">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classDStyleOptionFloatingWidget.html</anchorfile>
      <anchor>af663e511395279eda9bc9a2e7360498f</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DStyleOptionIcon</name>
    <filename>classDStyleOptionIcon.html</filename>
    <base>QStyleOption</base>
    <base>DStyleOption</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionIconV2</name>
    <filename>classDStyleOptionIconV2.html</filename>
    <base>DStyleOptionIcon</base>
  </compound>
  <compound kind="class">
    <name>DStyleOptionLineEdit</name>
    <filename>classDStyleOptionLineEdit.html</filename>
    <base>DStyleOption</base>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classDStyleOptionLineEdit.html</anchorfile>
      <anchor>a5a26da9c610eeb8b8f77738813ad326a</anchor>
      <arglist>(const QWidget *widget) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DStyleOptionLineEdit</name>
    <filename>classDtk_1_1Widget_1_1DStyleOptionLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>DStyleOptionViewItem</name>
    <filename>classDStyleOptionViewItem.html</filename>
    <base>QStyleOptionViewItem</base>
    <base>DStyleOption</base>
  </compound>
  <compound kind="class">
    <name>DStylePainter</name>
    <filename>classDStylePainter.html</filename>
    <base>QPainter</base>
  </compound>
  <compound kind="class">
    <name>DSuggestButton</name>
    <filename>classDSuggestButton.html</filename>
    <base>QPushButton</base>
    <member kind="function">
      <type></type>
      <name>DSuggestButton</name>
      <anchorfile>classDSuggestButton.html</anchorfile>
      <anchor>abd320b5ab581a5d6ef3a6e06a86648b5</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSuggestButton</name>
      <anchorfile>classDSuggestButton.html</anchorfile>
      <anchor>a2e687ea1fc24f2b255447c5d7097a0eb</anchor>
      <arglist>(const QString &amp;text, QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSuggestButton</name>
    <filename>classDtk_1_1Widget_1_1DSuggestButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DSuggestButtonExample</name>
    <filename>classDSuggestButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSvgRenderer</name>
    <filename>classDSvgRenderer.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DSvgRenderer</name>
    <filename>classDtk_1_1Gui_1_1DSvgRenderer.html</filename>
  </compound>
  <compound kind="class">
    <name>DSvgRendererPrivate</name>
    <filename>classDSvgRendererPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DSwitchButton</name>
    <filename>classDSwitchButton.html</filename>
    <base>QAbstractButton</base>
    <member kind="function">
      <type></type>
      <name>DSwitchButton</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>a38b3f16e5789fd43a85d224625cccb31</anchor>
      <arglist>(QWidget *parent=Q_NULLPTR)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>a527f858b29edb731340ea26401547e52</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>a2a3ef9aeb1692dc685f4d5272aaba4d9</anchor>
      <arglist>(QPaintEvent *e) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initStyleOption</name>
      <anchorfile>classDSwitchButton.html</anchorfile>
      <anchor>ae23952997e5ed6c52b09471db57914c4</anchor>
      <arglist>(DStyleOptionButton *option) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DSwitchButtonExample</name>
    <filename>classDSwitchButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DSwitchButtonPrivate</name>
    <filename>classDSwitchButtonPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DSwitchHeaderLine</name>
    <filename>classDSwitchHeaderLine.html</filename>
    <base>DHeaderLine</base>
    <member kind="signal">
      <type>void</type>
      <name>checkedChanged</name>
      <anchorfile>classDSwitchHeaderLine.html</anchorfile>
      <anchor>a1ff874781484affd1bd198a15b402856</anchor>
      <arglist>(bool arg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DSwitchHeaderLine</name>
      <anchorfile>classDSwitchHeaderLine.html</anchorfile>
      <anchor>a792706274125c858bea45563df4fc446</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpand</name>
      <anchorfile>classDSwitchHeaderLine.html</anchorfile>
      <anchor>a32de45ce6e5316eac79e45bdec46a4d1</anchor>
      <arglist>(bool value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSwitchHeaderLine</name>
    <filename>classDtk_1_1Widget_1_1DSwitchHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>DSwitchLineExpand</name>
    <filename>classDSwitchLineExpand.html</filename>
    <base>Dtk::Widget::DBaseExpand</base>
    <member kind="function">
      <type></type>
      <name>DSwitchLineExpand</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>ac1db12cfcbfb71d33ba8ab3475242003</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTitle</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>a4be2ca3a9882beb199342cd78e2eff23</anchor>
      <arglist>(const QString &amp;title)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExpand</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>ada68b90ab991ea54e4d9ba4a1425ae6c</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>DBaseLine *</type>
      <name>header</name>
      <anchorfile>classDSwitchLineExpand.html</anchorfile>
      <anchor>aea5e61ca22dd2bd8f8baee5dd37bd793</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DSwitchLineExpand</name>
    <filename>classDtk_1_1Widget_1_1DSwitchLineExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSysInfo</name>
    <filename>classDtk_1_1Core_1_1DSysInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DSysInfoPrivate</name>
    <filename>classDtk_1_1Core_1_1DSysInfoPrivate.html</filename>
    <class kind="struct">Dtk::Core::DSysInfoPrivate::MinVersion</class>
    <class kind="struct">Dtk::Core::DSysInfoPrivate::OSBuild</class>
  </compound>
  <compound kind="class">
    <name>DSystemAccountsInterface</name>
    <filename>classDSystemAccountsInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSystemProxy</name>
    <filename>classDSystemProxy.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; QString &gt;</type>
      <name>autoProxy</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a6ccdaf98ef4b1f1f60bb953f7848f493</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; SystemProxyAddr &gt;</type>
      <name>proxy</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a982137e65917f4ceea7dc28162e35142</anchor>
      <arglist>(const ProxyType method) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; QString &gt;</type>
      <name>proxyIgnoreHosts</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a62548ac88281b65c901add437f13271e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; SystemProxyMethod &gt;</type>
      <name>proxyMethod</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>adb474360bd001714b90b8d22dff552b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setAutoProxy</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a4d247d043053c7de4af2dfd351eba54c</anchor>
      <arglist>(const QUrl &amp;pac) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setProxy</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a607719046fee4b86266b9d98947300b0</anchor>
      <arglist>(const ProxyType type, const SystemProxyAddr &amp;addr) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setProxyIgnoreHosts</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a8f1f430ffe2c7cd4658c3bdda7bc9cdf</anchor>
      <arglist>(const QString &amp;hosts) const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setProxyMethod</name>
      <anchorfile>classDSystemProxy.html</anchorfile>
      <anchor>a9d2ad42e4a91c1950dd8e2eff95c9e7d</anchor>
      <arglist>(const SystemProxyMethod method) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DSystemProxy</name>
    <filename>classDtk_1_1NetworkManager_1_1DSystemProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>DSystemProxyInterface</name>
    <filename>classDSystemProxyInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSystemProxyPrivate</name>
    <filename>classDSystemProxyPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSystemTime</name>
    <filename>classDSystemTime.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>DExpected&lt; QStringList &gt;</type>
      <name>listTimezones</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a429904946f157fd53266a95bd262e887</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setLocalRTC</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a82a142a37ccabb31668225ad54dcb1a0</anchor>
      <arglist>(bool localRTC, bool fixSystem, bool interactive)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>enableNTP</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>ad260f75a4106d414623e9d14590117d3</anchor>
      <arglist>(bool useNTP, bool interactive)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setRelativeTime</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a3b0b561b0deb05d9608eef71e4cfed06</anchor>
      <arglist>(qint64 usecUTC, bool interactive)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setAbsoluteTime</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a96cc4250f97cb691da1b74395fd9ef1d</anchor>
      <arglist>(const QDateTime &amp;time, bool interactive)</arglist>
    </member>
    <member kind="slot">
      <type>DExpected&lt; void &gt;</type>
      <name>setTimezone</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a0a266dbb2e87370d19fc6b4aa7dd2c5c</anchor>
      <arglist>(const QString &amp;timezone, bool interactive)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canNTP</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a783e05f9e639cde4ec2eadd42408fa16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NTP</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>aba1a04b57d78ff2bf8a3eb59c1f9118a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>NTPSynchronized</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a10cdae7250ade8cb6f2d997b0a2cbe38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>RTCTimeUSec</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a4f13ac992e47b07b6359df03486123d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QDateTime</type>
      <name>timeDate</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a90d5197711f59df33d9b822a39eaa358</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>fallbackNTPServers</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a02ae51aa6ed28abd680a6e030cf39adb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>systemNTPServers</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a8e2d8e65e38b72bf07eb534c647c6170</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>frequency</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>ad9423951dff9ad257d3832b65421a95c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>serverName</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a4078578bcb3c8becc2ad21651e322ee8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Address</type>
      <name>serverAddress</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>ae31159e4ec4691048f9b1bce1db18481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Message</type>
      <name>NTPMessage</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a3334da43a9950ac41ec94f63ea39fbb5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>pollIntervalMaxUSec</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a4266634dd9ea1e20910d92c15769e05c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>pollIntervalMinUSec</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a4cbfa07b35df87547c174c4f3b9a487f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>pollIntervalUSec</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a967ed45cce8a918d75409cfcff4ae333</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>rootDistanceMaxUSec</name>
      <anchorfile>classDSystemTime.html</anchorfile>
      <anchor>a8a2b89bea8ce05e124de16be04138596</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::SystemTime::DSystemTime</name>
    <filename>classDtk_1_1SystemTime_1_1DSystemTime.html</filename>
  </compound>
  <compound kind="class">
    <name>DSystemTimePrivate</name>
    <filename>classDSystemTimePrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DSystemUserInterface</name>
    <filename>classDSystemUserInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DTabBar</name>
    <filename>classDTabBar.html</filename>
    <base>QWidget</base>
    <base>Dtk::Core::DObject</base>
    <member kind="slot">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a4bef51815a38b75b9c4419fc14c6d5cf</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setVisibleAddButton</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ae65f579393d1a2112179620bc3cd4a70</anchor>
      <arglist>(bool visibleAddButton)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setStartDragDistance</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>afa534b951f8bab9641d88bd0e2bc494f</anchor>
      <arglist>(int startDragDistance)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setMaskColor</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ab2812da3b9924e1339bf8f549e836ceb</anchor>
      <arglist>(QColor maskColor)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>currentChanged</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a314b26fbc471512c0b3eaa61758cb9cd</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabCloseRequested</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a402be1cba59eae93fcc8fb7db15ce49b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabMoved</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a8e5f587d6eeb166fbfaca0b6a769f757</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabIsInserted</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a125ae6d14c271d2e64b757d464958c85</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabIsRemoved</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a3657a3184fe6022fe1469076385f9a17</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabBarClicked</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aa2c9f81a7eac819e9c2821cb8acfe5d5</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabBarDoubleClicked</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ac78db95e52a5d1c0a976f60508c7c523</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabAddRequested</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a1da67d5b2242738edb8fa00b2695c479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabReleaseRequested</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a7e776e7cfe17ba87dd296e110978fdef</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>tabDroped</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a633d5f98ac360a0b29ac07a29e8aa5f1</anchor>
      <arglist>(int index, Qt::DropAction action, QObject *target)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragActionChanged</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a41bd7eaea127b9eb2349752127192270</anchor>
      <arglist>(Qt::DropAction action)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragStarted</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a8f201dc142f91da8ab6515a54835a801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>dragEnd</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aebd48e15e7db708ee0e0d22d8cd529d2</anchor>
      <arglist>(Qt::DropAction action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabMinimumSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a7fca71906348b00d9244b4186ae30795</anchor>
      <arglist>(int index, const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabMaximumSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a560c90472f82aa7f958f0b57ae6c0cd4</anchor>
      <arglist>(int index, const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>visibleAddButton</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a462b155e022fa8f9f6d94024b27e898d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QTabBar::Shape</type>
      <name>shape</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ac621d4cbdad3830d2ec9ecc94504bd71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShape</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>afd172ccd6cc21adafa0db7b9a968f26b</anchor>
      <arglist>(QTabBar::Shape shape)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a0fb6badbc0c592254524d3e78e20967f</anchor>
      <arglist>(const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>afe18d64cfe3e2aecdc14abe58be78bbd</anchor>
      <arglist>(const QIcon &amp;icon, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>af9023d2dde0b662e4b1bca198cc37cc1</anchor>
      <arglist>(int index, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a7c7459237922ebbfedf02e41290d244d</anchor>
      <arglist>(int index, const QIcon &amp;icon, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a3773339d5abb64f6efaa07712dac1562</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTab</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a56d3c5f52e0ff95ae4ee9de453edf163</anchor>
      <arglist>(int from, int to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTabEnabled</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a78eb45ac610258bd7db7bfcacec1917a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabEnabled</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a757229790fbfd401f631a4090618b9d0</anchor>
      <arglist>(int index, bool)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>tabText</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ab7f333c44c407f8001e759da4c003c87</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabText</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a04dce705a35a6eaf7e0fdeb5e9f6765d</anchor>
      <arglist>(int index, const QString &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>QIcon</type>
      <name>tabIcon</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>af8159b4b786c3ad14cd17504dde81ec9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabIcon</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a5946c18cc2da45037997ed04afd70a2a</anchor>
      <arglist>(int index, const QIcon &amp;icon)</arglist>
    </member>
    <member kind="function">
      <type>Qt::TextElideMode</type>
      <name>elideMode</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aa08827a177aa22f4470dc4f2df0c4630</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setElideMode</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a663cf6e2089c494901d6a96be318e165</anchor>
      <arglist>(Qt::TextElideMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabToolTip</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a4bf0382a5116e5491299f085b96f0911</anchor>
      <arglist>(int index, const QString &amp;tip)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>tabToolTip</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a22c0b08a112cad309f02ace94bfd1496</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabData</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a106ce3aec8a6837692dfd47a06a68778</anchor>
      <arglist>(int index, const QVariant &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>QVariant</type>
      <name>tabData</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>aa44f0fe546cc5ac12131a9ec438388c8</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>QRect</type>
      <name>tabRect</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a6f9765258a09409f34f0762c0a65ffd3</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tabAt</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>af848181cdbcfed3b1b27c8db014b3560</anchor>
      <arglist>(const QPoint &amp;pos) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>currentIndex</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>adafbedcddd5f512d62499c2628dbed86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a10ed5f9dedc4c04cd6d22bcd9cce725e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>acc784f59ca02accd5523233f0ee2776f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIconSize</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>ad45e1b62e095a75a58ec7ebe9f1e8ce5</anchor>
      <arglist>(const QSize &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tabsClosable</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a0b2ca94bbb5b9d917b020da6184a4840</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabsClosable</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a9d855b03765044e865a4d01904c6a9f2</anchor>
      <arglist>(bool closable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabledEmbedStyle</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a61caa5f95a108c31642583ba16bfa543</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabLabelAlignment</name>
      <anchorfile>classDTabBar.html</anchorfile>
      <anchor>a3796303a3ef45813443710225a2644cd</anchor>
      <arglist>(Qt::Alignment alignment)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTabBar</name>
    <filename>classDtk_1_1Widget_1_1DTabBar.html</filename>
  </compound>
  <compound kind="class">
    <name>DTabBarExample</name>
    <filename>classDTabBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTabBarPrivate</name>
    <filename>classDTabBarPrivate.html</filename>
    <base>QTabBar</base>
    <base>Dtk::Core::DObjectPrivate</base>
    <class kind="class">DTabBarPrivate::FullWidget</class>
    <class kind="struct">DTabBarPrivate::TabBarAnimation</class>
  </compound>
  <compound kind="class">
    <name>DTabletWindowOptionButton</name>
    <filename>classDTabletWindowOptionButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DTabletWindowOptionButton</name>
      <anchorfile>classDTabletWindowOptionButton.html</anchorfile>
      <anchor>a62ae0f52f3c60a6a5a3500d2a46a629c</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTabletWindowOptionButton</name>
    <filename>classDtk_1_1Widget_1_1DTabletWindowOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DTableWidgetExample</name>
    <filename>classDTableWidgetExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTaskbarControl</name>
    <filename>classDTaskbarControl.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type>void</type>
      <name>setProgress</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>adcd1e2fa14a512628b11916983e70692</anchor>
      <arglist>(bool progressVisible, double progress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCounter</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a4f76a2e56a53f728ade3da76780b7d96</anchor>
      <arglist>(bool counterVisible, int counter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>counter</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a8db77215dda2cf0e0f106e3628467792</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCounterVisible</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a885f9956aa37e8bbe8d372e58d43e2ac</anchor>
      <arglist>(bool counterVisible)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>counterVisible</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a6ad5df4445d9419cd746bfaf172efe01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUrgency</name>
      <anchorfile>classDTaskbarControl.html</anchorfile>
      <anchor>a25ba04ade8f92ef2cf1567f7c65c41fe</anchor>
      <arglist>(bool val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DTaskbarControl</name>
    <filename>classDtk_1_1Gui_1_1DTaskbarControl.html</filename>
  </compound>
  <compound kind="class">
    <name>DTaskbarControlPrivate</name>
    <filename>classDTaskbarControlPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
  </compound>
  <compound kind="class">
    <name>DTest</name>
    <filename>classDTest.html</filename>
  </compound>
  <compound kind="class">
    <name>DTestWithParam</name>
    <filename>classDTestWithParam.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>DTestWithParam&lt; int &gt;</name>
    <filename>classDTestWithParam.html</filename>
  </compound>
  <compound kind="class">
    <name>DTextEdit</name>
    <filename>classDTextEdit.html</filename>
    <base>QTextEdit</base>
    <member kind="function">
      <type></type>
      <name>DTextEdit</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>ace46cfb2f7276ed31b0efd570c3fc09b</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>speechToTextIsEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>ab70ab1701aa03aaa79986d24b5d888f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeechToTextEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a2a2a498ff959cd98c9d9c99a323ffa7a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToSpeechIsEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a6fee3fdcdc1c13868b0689951b70cc59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToSpeechEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a5a73975487b6315d411d90d5facb7c61</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>textToTranslateIsEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a39d6d17dacbed637a9d78e9c465578ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextToTranslateEnabled</name>
      <anchorfile>classDTextEdit.html</anchorfile>
      <anchor>a2430c646234338ed37a5539cc3222d3a</anchor>
      <arglist>(bool enable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTextEditExample</name>
    <filename>classDTextEditExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTextEditPrivate</name>
    <filename>classDTextEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTextEncoding</name>
    <filename>classDtk_1_1Core_1_1DTextEncoding.html</filename>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>detectTextEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>ae48dc30613676f53fc7d543916679446</anchor>
      <arglist>(const QByteArray &amp;content)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QByteArray</type>
      <name>detectFileEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>af0b7eb7a80abfe8c02824b6d903cae2d</anchor>
      <arglist>(const QString &amp;fileName, bool *isOk=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertTextEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>a7ab11dbdce97d9c63fe3a583697633a5</anchor>
      <arglist>(QByteArray &amp;content, QByteArray &amp;outContent, const QByteArray &amp;toEncoding, const QByteArray &amp;fromEncoding=QByteArray(), QString *errString=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertFileEncoding</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>a4276cda37a02fc7d0f9a84617bc35dc9</anchor>
      <arglist>(const QString &amp;fileName, const QByteArray &amp;toEncoding, const QByteArray &amp;fromEncoding=QByteArray(), QString *errString=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertFileEncodingTo</name>
      <anchorfile>classDtk_1_1Core_1_1DTextEncoding.html</anchorfile>
      <anchor>a5dbba51d416ef0baae596843e84f94e3</anchor>
      <arglist>(const QString &amp;fromFile, const QString &amp;toFile, const QByteArray &amp;toEncoding, const QByteArray &amp;fromEncoding=QByteArray(), QString *errString=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DThemeHelper</name>
    <filename>classDThemeHelper.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>DThemeManager</name>
    <filename>classDThemeManager.html</filename>
    <base>QObject</base>
    <member kind="slot">
      <type>void</type>
      <name>updateQss</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>ae78d35e3396040ba0506f72913f8fd41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>updateThemeOnParentChanged</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a50461d25217c0069c551acb33741b538</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>themeChanged</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a6b56394eb917d65eb34411ad5b18b6ba</anchor>
      <arglist>(QString theme)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>widgetThemeChanged</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a935500d53724a48ecf339facc2588b35</anchor>
      <arglist>(QWidget *widget, QString theme)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>theme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a1269cd50955112bacbc948de208363a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>theme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a0ce31d252aaf5f0d0638d8fe60a1e28d</anchor>
      <arglist>(const QWidget *widget, QWidget **baseWidget=nullptr) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTheme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a154a40bbfa3b0f451e4dcad7c575cb8d</anchor>
      <arglist>(const QString theme)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTheme</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a4471415713f48eedfd02e302cd64c246</anchor>
      <arglist>(QWidget *widget, const QString theme)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getQssForWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a904bddbfb290bd10129e351703e35ddd</anchor>
      <arglist>(const QString className, const QString &amp;theme=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getQssForWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a20c8d31f86378099233c494d42ce8e2a</anchor>
      <arglist>(const QWidget *widget) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DThemeManager *</type>
      <name>instance</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a6740a7b80d374761330d8ce9731c8bbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>a281a42fe36381f6ce3a39dfc303ffddf</anchor>
      <arglist>(QWidget *widget, QStringList properties=QStringList())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerWidget</name>
      <anchorfile>classDThemeManager.html</anchorfile>
      <anchor>aa9861fc8c5a234002c2a7f0afc174fba</anchor>
      <arglist>(QWidget *widget, const QString &amp;filename, const QStringList &amp;properties=QStringList())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DThemeManager</name>
    <filename>classDtk_1_1Widget_1_1DThemeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DThemeManagerPrivate</name>
    <filename>classDThemeManagerPrivate.html</filename>
    <member kind="function">
      <type>QString</type>
      <name>getQssContent</name>
      <anchorfile>classDThemeManagerPrivate.html</anchorfile>
      <anchor>a23c193f8b6c74104c271049e1c9bd322</anchor>
      <arglist>(const QString &amp;themeURL) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DThemeManagerStaticPrivate</name>
    <filename>classDThemeManagerStaticPrivate.html</filename>
    <base>DThemeManager</base>
  </compound>
  <compound kind="class">
    <name>DThumbnailProvider</name>
    <filename>classDThumbnailProvider.html</filename>
    <base>QThread</base>
    <member kind="function">
      <type>bool</type>
      <name>hasThumbnail</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>aa838450f7957307d263dde9944198cc1</anchor>
      <arglist>(const QFileInfo &amp;info) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>thumbnailFilePath</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>ac676eda030e0df7a743221d659d67729</anchor>
      <arglist>(const QFileInfo &amp;info, Size size) const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>createThumbnail</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>a3ed30f951ff09a168a4142fcaf51260f</anchor>
      <arglist>(const QFileInfo &amp;info, Size size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInProduceQueue</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>ab56048abaea9c0e1d2d4296596680779</anchor>
      <arglist>(const QFileInfo &amp;info, Size size)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>aee7b946ff28292d3d1b0fc895d4bf024</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>defaultSizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>abb323b96d17b3c63201b30be3ff40652</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultSizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>a79ed0ac0a44cf2a4c3a781cec0678d87</anchor>
      <arglist>(qint64 size)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>sizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>a3849d0fd5753622b0a990ee029e2e7df</anchor>
      <arglist>(const QMimeType &amp;mimeType) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeLimit</name>
      <anchorfile>classDThumbnailProvider.html</anchorfile>
      <anchor>ad414f5d051dab487223b62201bc1ee77</anchor>
      <arglist>(const QMimeType &amp;mimeType, qint64 size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DThumbnailProvider</name>
    <filename>classDtk_1_1Gui_1_1DThumbnailProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>DThumbnailProviderPrivate</name>
    <filename>classDThumbnailProviderPrivate.html</filename>
    <class kind="struct">DThumbnailProviderPrivate::ProduceInfo</class>
  </compound>
  <compound kind="class">
    <name>DTickEffect</name>
    <filename>classDTickEffect.html</filename>
    <base>QGraphicsEffect</base>
    <member kind="signal">
      <type>void</type>
      <name>finished</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>aee6bd933e885b4aafff8722419ce1c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>stateChanged</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>aac9cbf82b5a6c7248c92832f40a2787e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DTickEffect</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a8d5399bff8812f4d44631432c6551b91</anchor>
      <arglist>(QWidget *widget, QWidget *parent=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a11e1fa598c1800d90cba57fd24f89705</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a143a1534ee3e8cdbbe427759bb5c0d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>aaefb304efff02faaa484819dbe7424ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a965b31c5e9d8a98fed3186cb53a14076</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirection</name>
      <anchorfile>classDTickEffect.html</anchorfile>
      <anchor>a172e761d375dccea61db598c4738b1ba</anchor>
      <arglist>(Direction direction)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTickEffect</name>
    <filename>classDtk_1_1Widget_1_1DTickEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>DTickEffectPrivate</name>
    <filename>classDTickEffectPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimedLoop</name>
    <filename>classDtk_1_1Core_1_1DTimedLoop.html</filename>
    <base>QEventLoop</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimedLoopPrivate</name>
    <filename>classDtk_1_1Core_1_1DTimedLoopPrivate.html</filename>
    <base>Dtk::Core::DObjectPrivate</base>
    <class kind="class">Dtk::Core::DTimedLoopPrivate::LoopGuard</class>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimeUnitFormatter</name>
    <filename>classDtk_1_1Core_1_1DTimeUnitFormatter.html</filename>
    <base>Dtk::Core::DAbstractUnitFormatter</base>
    <member kind="enumeration">
      <type></type>
      <name>TimeUnits</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>a9e6584592385affd85e9c31ce6b752eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>unitStr</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>add8728441c4c1edd123a8d7152db6d39</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMax</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>ab0512bd396c99df42c45768b22d00aa6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>unitMin</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>ad604070ed1c8fdb148f62216e4312fbc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint</type>
      <name>unitConvertRate</name>
      <anchorfile>classDtk_1_1Core_1_1DTimeUnitFormatter.html</anchorfile>
      <anchor>ab42cba7fdd1d477851a25f61e2457e73</anchor>
      <arglist>(int unitId) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTipLabel</name>
    <filename>classDTipLabel.html</filename>
    <base>DLabel</base>
    <member kind="function">
      <type></type>
      <name>DTipLabel</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>adb2ea15eaba635434e4f900cb75d7bac</anchor>
      <arglist>(const QString &amp;text=QString(), QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>aa936fb0170fa5107a0be02a24c61e996</anchor>
      <arglist>(const QPoint &amp;pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForegroundRole</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>abd3ebd13541137d0ec9a2e83c16be0ba</anchor>
      <arglist>(DPalette::ColorType color)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initPainter</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>a311decf0fdcc88761f67578e8eb0f051</anchor>
      <arglist>(QPainter *painter) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classDTipLabel.html</anchorfile>
      <anchor>a45dab468861cd9c5692ecf23ffaca7a6</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DTipLabel</name>
    <filename>classDtk_1_1Widget_1_1DTipLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>DTipLabelPrivate</name>
    <filename>classDTipLabelPrivate.html</filename>
    <base>DLabelPrivate</base>
  </compound>
  <compound kind="class">
    <name>DTitlebar</name>
    <filename>classDTitlebar.html</filename>
    <base>QFrame</base>
    <member kind="slot">
      <type>void</type>
      <name>toggleWindowState</name>
      <anchorfile>classDTitlebar.html</anchorfile>
      <anchor>a40fc6cdfbd886f4db37be5ed61f30fbf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTitleBarExample</name>
    <filename>classDTitleBarExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DTitlebarPrivate</name>
    <filename>classDTitlebarPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DtkBuildVersion</name>
    <filename>classDtkBuildVersion.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DToast</name>
    <filename>classDtk_1_1Widget_1_1DToast.html</filename>
  </compound>
  <compound kind="class">
    <name>DToastPrivate</name>
    <filename>classDToastPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DToolButton</name>
    <filename>classDToolButton.html</filename>
    <base>QToolButton</base>
    <member kind="function">
      <type>void</type>
      <name>setAlignment</name>
      <anchorfile>classDToolButton.html</anchorfile>
      <anchor>aabd2d99c53676970892cf380401ea8c0</anchor>
      <arglist>(Qt::Alignment flag)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDToolButton.html</anchorfile>
      <anchor>ac736fa5425a5060ebbffc99c94ffcb15</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DToolButtonExample</name>
    <filename>classDToolButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DToolTip</name>
    <filename>classDtk_1_1Widget_1_1DToolTip.html</filename>
  </compound>
  <compound kind="class">
    <name>DToolTip</name>
    <filename>classDToolTip.html</filename>
    <base>DTipLabel</base>
    <member kind="function">
      <type></type>
      <name>DToolTip</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>abbafc3ad0b2a8fe2eaa7168f51725a40</anchor>
      <arglist>(const QString &amp;text, bool completionClose=true)</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>sizeHint</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>a00178f3f5be4bde5bf33dd765f5634cc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>show</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>aa9aa5f8f9f66ddbd50f4440032764a5b</anchor>
      <arglist>(const QPoint &amp;pos, int duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setToolTipTextFormat</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>a8de1009f21b63f00a6bf8b39feec223b</anchor>
      <arglist>(Qt::TextFormat format)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Qt::TextFormat</type>
      <name>toolTipTextFormat</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>a47212151b6086bc9494331295a02e304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setToolTipShowMode</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>acf5dd8bc51ee1bb47d5971442249ecb5</anchor>
      <arglist>(QWidget *widget, ToolTipShowMode mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ToolTipShowMode</type>
      <name>toolTipShowMode</name>
      <anchorfile>classDToolTip.html</anchorfile>
      <anchor>a3f4c718b392d28c73fc1bbf89f1d96cb</anchor>
      <arglist>(const QWidget *widget)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DToolTipExample</name>
    <filename>classDToolTipExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTrashManager</name>
    <filename>classDtk_1_1Core_1_1DTrashManager.html</filename>
    <base>QObject</base>
    <base>Dtk::Core::DObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTrashManager_</name>
    <filename>classDtk_1_1Core_1_1DTrashManager__.html</filename>
    <base>Dtk::Core::DTrashManager</base>
    <base>Dtk::Core::DTrashManager</base>
  </compound>
  <compound kind="class">
    <name>DTrashManager_</name>
    <filename>classDTrashManager__.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTrashManagerPrivate</name>
    <filename>classDtk_1_1Core_1_1DTrashManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DTrashManagerPrivate</name>
    <filename>classDTrashManagerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DTreeViewExample</name>
    <filename>classDTreeViewExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DTunDevice</name>
    <filename>classDtk_1_1NetworkManager_1_1DTunDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DTunDevice</name>
    <filename>classDTunDevice.html</filename>
    <base>DDevice</base>
    <member kind="signal">
      <type>void</type>
      <name>HwAddressChanged</name>
      <anchorfile>classDTunDevice.html</anchorfile>
      <anchor>a6f0f7f207089fd93702554abae6e659d</anchor>
      <arglist>(const QByteArray &amp;addr)</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>HwAddress</name>
      <anchorfile>classDTunDevice.html</anchorfile>
      <anchor>a4434c07039cc56ee452958e1206d67e8</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DTunDeviceInterface</name>
    <filename>classDTunDeviceInterface.html</filename>
    <base>DDeviceInterface</base>
  </compound>
  <compound kind="class">
    <name>DTunDevicePrivate</name>
    <filename>classDTunDevicePrivate.html</filename>
    <base>DDevicePrivate</base>
  </compound>
  <compound kind="class">
    <name>DTunSetting</name>
    <filename>classDTunSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DTunSettingPrivate</name>
    <filename>classDTunSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DUDFBurnEngine</name>
    <filename>classDUDFBurnEngine.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DUnexpected</name>
    <filename>classDtk_1_1Core_1_1DUnexpected.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a950b013ce5a33d5b57b664c017211313</anchor>
      <arglist>(const DUnexpected &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a0ce85c95e77da80d0f98fec9770325b1</anchor>
      <arglist>(DUnexpected &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a493c1c51a7567cd5c68ab39209204f7e</anchor>
      <arglist>(Er &amp;&amp;_e) noexcept(std::is_nothrow_constructible&lt; E, Er &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a0421e74191594a9c449625d62ea3adaf</anchor>
      <arglist>(emplace_tag, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>DUnexpected</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a706044dd2a0a5ef63ec92afa34b7d96a</anchor>
      <arglist>(emplace_tag, std::initializer_list&lt; U &gt; _li, Args &amp;&amp;...args) noexcept(std::is_nothrow_constructible&lt; E, std::initializer_list&lt; U &gt; &amp;, Args... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>DUnexpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a1a039d4b24f19bdd70613df9372d0b64</anchor>
      <arglist>(const DUnexpected &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>DUnexpected &amp;</type>
      <name>operator=</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>ac7a903199abc13334c69a11b922f7b0c</anchor>
      <arglist>(DUnexpected &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>constexpr const E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a4b74f0e9ece5294b5a57924449519095</anchor>
      <arglist>() const &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>ad843d3b2aae4e9bf78a7553be5b5b72f</anchor>
      <arglist>() &amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr const E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>ae5c8c53ae541ef9c1227907514e0e25f</anchor>
      <arglist>() const &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>E &amp;&amp;</type>
      <name>error</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a7bdf7f49faa2854fe656447a7282c0b9</anchor>
      <arglist>() &amp;&amp;noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>abb5b1d0e8bcce68a05eea118c06fdc3d</anchor>
      <arglist>(DUnexpected &amp;_other)</arglist>
    </member>
    <member kind="friend">
      <type>constexpr friend bool</type>
      <name>operator==</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>a37b128bcb110d543e3e430c3bef14645</anchor>
      <arglist>(const DUnexpected &amp;_x, const DUnexpected&lt; Er &gt; _y)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classDtk_1_1Core_1_1DUnexpected.html</anchorfile>
      <anchor>af8abb690c18e0202b0245252a4976b2b</anchor>
      <arglist>(DUnexpected &amp;_x, DUnexpected &amp;_y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DUserInterface</name>
    <filename>classDUserInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>Dutils</name>
    <filename>structDutils.html</filename>
  </compound>
  <compound kind="class">
    <name>DVariantListModel</name>
    <filename>classDVariantListModel.html</filename>
    <base>QAbstractListModel</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DVBoxWidget</name>
    <filename>classDtk_1_1Widget_1_1DVBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DVBoxWidget</name>
    <filename>classDVBoxWidget.html</filename>
    <base>DBoxWidget</base>
    <member kind="function">
      <type></type>
      <name>DVBoxWidget</name>
      <anchorfile>classDVBoxWidget.html</anchorfile>
      <anchor>a415e93c982ea2f7535261db5f8e1e522</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DVerticalLine</name>
    <filename>classDVerticalLine.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>DVerticalLineExample</name>
    <filename>classDVerticalLineExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DVideoSink</name>
    <filename>classDVideoSink.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Multimedia::DVideoWidget</name>
    <filename>classDtk_1_1Multimedia_1_1DVideoWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>DVideoWidget</name>
    <filename>classDVideoWidget.html</filename>
    <member kind="slot">
      <type>void</type>
      <name>slotFullScreenChanged</name>
      <anchorfile>classDVideoWidget.html</anchorfile>
      <anchor>a46e729b08ef65547133d5199abf87f45</anchor>
      <arglist>(bool fullScreen)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>getPlayer</name>
      <anchorfile>classDVideoWidget.html</anchorfile>
      <anchor>a460908716acac1aa139374807c0d1553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlatformMediaPlayer</name>
      <anchorfile>classDVideoWidget.html</anchorfile>
      <anchor>a925944c448ade1a53bb78feff515113f</anchor>
      <arglist>(DPlatformMediaPlayer *mediaPlayer=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>showEvent</name>
      <anchorfile>classDVideoWidget.html</anchorfile>
      <anchor>a4a0b9ae363ca512cb7f3c941fdab2cb5</anchor>
      <arglist>(QShowEvent *pEvent) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DVideoWidgetPrivate</name>
    <filename>classDVideoWidgetPrivate.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DViewItemAction</name>
    <filename>classDtk_1_1Widget_1_1DViewItemAction.html</filename>
  </compound>
  <compound kind="class">
    <name>DViewItemAction</name>
    <filename>classDViewItemAction.html</filename>
    <base>QAction</base>
    <member kind="function">
      <type></type>
      <name>DViewItemAction</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a1658acf30956d5dacecfe93ad7d762a1</anchor>
      <arglist>(Qt::Alignment alignment=Qt::Alignment(), const QSize &amp;iconSize=QSize(), const QSize &amp;maxSize=QSize(), bool clickable=false)</arglist>
    </member>
    <member kind="function">
      <type>Qt::Alignment</type>
      <name>alignment</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ad81adef83a0528210d46e42af0238a0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>iconSize</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a071bfd942854c2815bbdf6052dc81415</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSize</type>
      <name>maximumSize</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>af1eaa8a68691b5460ac71f2ade3e37ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QMargins</type>
      <name>clickAreaMargins</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab3493db9c0f3c20c21bbde34a37b6182</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickAreaMargins</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a3550339319cf763903319f6631c3d85c</anchor>
      <arglist>(const QMargins &amp;margins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextColorRole</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab11cf88053bb97ca5f4f7be4d53e4f72</anchor>
      <arglist>(DPalette::ColorType role)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTextColorRole</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>abab85bdd9ee411b51957fdfefa366a68</anchor>
      <arglist>(DPalette::ColorRole role)</arglist>
    </member>
    <member kind="function">
      <type>DPalette::ColorType</type>
      <name>textColorType</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab3427b9739577ba1e3a3bdfd358e3450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DPalette::ColorRole</type>
      <name>textColorRole</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>abf7e3b245f5dea6ac53a7984d9afe193</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFontSize</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a668392d3165801db3a6dd95ccf7dfd66</anchor>
      <arglist>(DFontSizeManager::SizeType size)</arglist>
    </member>
    <member kind="function">
      <type>QFont</type>
      <name>font</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a8b097a51d20a5e93ba9c23e7045809a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClickable</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>aaccc8e3eb655336b24e5f7cbcfa0668b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidget</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>ab3c6fed7b0d074f75994f9cb3492c28e</anchor>
      <arglist>(QWidget *widget)</arglist>
    </member>
    <member kind="function">
      <type>QWidget *</type>
      <name>widget</name>
      <anchorfile>classDViewItemAction.html</anchorfile>
      <anchor>a1eba389c2d767a83f5de059481c23270</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DViewItemActionPrivate</name>
    <filename>classDViewItemActionPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DVpnSetting</name>
    <filename>classDVpnSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DVpnSettingPrivate</name>
    <filename>classDVpnSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DVtableHook</name>
    <filename>classDtk_1_1Core_1_1DVtableHook.html</filename>
    <class kind="struct">Dtk::Core::DVtableHook::CheckCompatibleArguments</class>
    <class kind="struct">Dtk::Core::DVtableHook::CheckCompatibleArguments&lt; List, List &gt;</class>
    <class kind="struct">Dtk::Core::DVtableHook::FunctionPointer</class>
    <class kind="struct">Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...) const &gt;</class>
    <class kind="struct">Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...)&gt;</class>
    <class kind="class">Dtk::Core::DVtableHook::OverrideDestruct</class>
    <class kind="struct">Dtk::Core::DVtableHook::StdFunWrap</class>
    <class kind="struct">Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...) const &gt;</class>
    <class kind="struct">Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...)&gt;</class>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getDestructFunIndex</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>af3335b0851cbf352b49288d781a114eb</anchor>
      <arglist>(quintptr **obj, std::function&lt; void(void)&gt; destoryObjFun)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasVtable</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>ad9bf13138d3bb82733f8ac2e15ade8dc</anchor>
      <arglist>(const void *obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static quintptr</type>
      <name>resetVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>aabc6c7b0bd66d421200d26fc3cb81580</anchor>
      <arglist>(const void *obj, quintptr functionOffset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static quintptr</type>
      <name>originalFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a132614b24c6a61667c2be9d87f9366c0</anchor>
      <arglist>(const void *obj, quintptr functionOffset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QFunctionPointer</type>
      <name>resolve</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a5acbbee11fa3e3a29116dc92b5825733</anchor>
      <arglist>(const char *symbol)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>overrideVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a5aa6702895e7b1ff42973e66936749b0</anchor>
      <arglist>(quintptr *vfptr_t1, Fun1 fun1, quintptr *vfptr_t2, Fun2 fun2, bool forceWrite)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool ::type</type>
      <name>overrideVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a026daf635fcf4ed8f947326a53f5476f</anchor>
      <arglist>(quintptr *vfptr_t1, Fun1 fun1, Fun2 fun2, bool forceWrite)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>overrideVfptrFun</name>
      <anchorfile>classDtk_1_1Core_1_1DVtableHook.html</anchorfile>
      <anchor>a1c6ee5e0b50f1dc4d0bebd7c483960d8</anchor>
      <arglist>(const typename QtPrivate::FunctionPointer&lt; Fun1 &gt;::Object *t1, Fun1 fun1, Fun2 fun2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWarningButton</name>
    <filename>classDtk_1_1Widget_1_1DWarningButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWarningButton</name>
    <filename>classDWarningButton.html</filename>
    <base>QPushButton</base>
    <member kind="function">
      <type></type>
      <name>DWarningButton</name>
      <anchorfile>classDWarningButton.html</anchorfile>
      <anchor>a22b75b16a6305631be852d84daab6055</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initStyleOption</name>
      <anchorfile>classDWarningButton.html</anchorfile>
      <anchor>a5843d414bfc9720109d17ee02296f9b8</anchor>
      <arglist>(QStyleOptionButton *option) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWarningButtonExample</name>
    <filename>classDWarningButtonExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWaterProgress</name>
    <filename>classDtk_1_1Widget_1_1DWaterProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>DWaterProgress</name>
    <filename>classDWaterProgress.html</filename>
    <base>QWidget</base>
    <member kind="slot">
      <type>void</type>
      <name>start</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a7604f118c16739597e4da5bd8bdf3925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a5c3e6c619b127ae94ec834ad4b2ecb87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>aafe5e569192626a4789e9d3c780693cd</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setTextVisible</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a3e27ff273e0ba66ae432a3caea45155a</anchor>
      <arglist>(bool visible)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>value</name>
      <anchorfile>classDWaterProgress.html</anchorfile>
      <anchor>a695c1bec94c1a9f5cb5a8a34cdbda3e7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWaterProgressExample</name>
    <filename>classDWaterProgressExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>DWaterProgressPrivate</name>
    <filename>classDWaterProgressPrivate.html</filename>
    <member kind="function">
      <type>void</type>
      <name>initUI</name>
      <anchorfile>classDWaterProgressPrivate.html</anchorfile>
      <anchor>a9479aa32dece5137a6f6751faed7b89f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowCloseButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowCloseButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowCloseButton</name>
    <filename>classDWindowCloseButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DWindowCloseButton</name>
      <anchorfile>classDWindowCloseButton.html</anchorfile>
      <anchor>aceea0844f7cba373e4ae74e014286993</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DWindowGroupLeader</name>
    <filename>classDtk_1_1Gui_1_1DWindowGroupLeader.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowGroupLeader</name>
    <filename>classDWindowGroupLeader.html</filename>
    <member kind="function">
      <type></type>
      <name>DWindowGroupLeader</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>ac1f3251da73804d558fbb877d79e0d64</anchor>
      <arglist>(quint32 groupId=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DWindowGroupLeader</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a099b53d70601304f4dd73201eeb1ee73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>groupLeaderId</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a988d6256932d50a7a9908decb8d10343</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>clientLeaderId</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a225094f84899f7339322173524dc9363</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWindow</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>abdd1d9f3bfecb9137a691b275bcdbc89</anchor>
      <arglist>(QWindow *window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWindow</name>
      <anchorfile>classDWindowGroupLeader.html</anchorfile>
      <anchor>a9c692047778e89080db131c310c21916</anchor>
      <arglist>(QWindow *window)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowGroupLeaderPrivate</name>
    <filename>classDWindowGroupLeaderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DWindowManagerHelper</name>
    <filename>classDtk_1_1Gui_1_1DWindowManagerHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowManagerHelper</name>
    <filename>classDWindowManagerHelper.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>windowManagerChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a8e4e04a0c8f1b8dab31dffd02c53a4b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasBlurWindowChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a17eee66c740dbb3745b45bb4c79f996d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasCompositeChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a2be7d6c0894a9c49274e9c8b7f69de34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasNoTitlebarChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>af82ca6cd17b87ea8d04fdd9c310efd22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>hasWallpaperEffectChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a81153d38faf3743248433325392dd7fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowListChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a6ae4c869f60c6f9e20983c0ab0f880e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>windowMotifWMHintsChanged</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aee57e14861a350e1a91204037bc5e6e3</anchor>
      <arglist>(quint32 winId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBlurWindow</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a9d8049eb443e6e74f7956ee53d05493c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasComposite</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a15c73557e57ec826c796588235da9067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNoTitlebar</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a871757a459c300857630f62bd2d02e98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasWallpaperEffect</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aa11f2201b491cbc894852a2e7548e72e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>windowManagerNameString</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aede0872cc89b70173fa383d7822a04b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WMName</type>
      <name>windowManagerName</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aa236fdabbf24bec87f6e0f6a7e4506e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVector&lt; quint32 &gt;</type>
      <name>allWindowIdList</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a478b322303b7dc67973dbdfea4020565</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QVector&lt; quint32 &gt;</type>
      <name>currentWorkspaceWindowIdList</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>aceb9757b8e420dab428560c24b09b25a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; DForeignWindow * &gt;</type>
      <name>currentWorkspaceWindows</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a6225c7cc9df459f5af43fe770682a7cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>windowFromPoint</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a2569633854d14776ab1ce715985e2880</anchor>
      <arglist>(const QPoint &amp;p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DWindowManagerHelper *</type>
      <name>instance</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ac7c478902c61d28b137ff2198164d737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMotifFunctions</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ad561e93d87fa1855e838b27b514f15bc</anchor>
      <arglist>(const QWindow *window, MotifFunctions hints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifFunctions</type>
      <name>setMotifFunctions</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a186b9916c340db55abaa9cb989c051be</anchor>
      <arglist>(const QWindow *window, MotifFunctions hints, bool on)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifFunctions</type>
      <name>getMotifFunctions</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ad95d3a6f1d24b1f382266784bc910d53</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMotifDecorations</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>ad62bc88f923ee6e2077f380797635f21</anchor>
      <arglist>(const QWindow *window, MotifDecorations hints)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifDecorations</type>
      <name>setMotifDecorations</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a115016382badfb72b46d8a2d17357517</anchor>
      <arglist>(const QWindow *window, MotifDecorations hints, bool on)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MotifDecorations</type>
      <name>getMotifDecorations</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a492dddd1de6837f03dea79a40d448841</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setWmWindowTypes</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a1b75247826a413dbd342af14c3108f9f</anchor>
      <arglist>(QWindow *window, WmWindowTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setWmClassName</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a243e055224674719952676cb0c4c6fba</anchor>
      <arglist>(const QByteArray &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>popupSystemWindowMenu</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a2ea9fc4f72173724caebdf38bbfaa5f3</anchor>
      <arglist>(const QWindow *window)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DWindowManagerHelper</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a138e23ca39a0896ede34f81b2407fe56</anchor>
      <arglist>(QObject *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasBlurWindow</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a578fb91ce8d8e2e8da4a5fab2289588f</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasComposite</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a077754f2223ef12dc66d46dc10386ac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasNoTitlebar</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>abeae2e698f8eed570c5ad5fc79fb41ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>hasWallpaperEffect</name>
      <anchorfile>classDWindowManagerHelper.html</anchorfile>
      <anchor>a6d058b14a94b10f269ce7ebeea9c1afd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowManagerHelper_</name>
    <filename>classDWindowManagerHelper__.html</filename>
    <base>DWindowManagerHelper</base>
  </compound>
  <compound kind="class">
    <name>DWindowManagerHelperPrivate</name>
    <filename>classDWindowManagerHelperPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowMaxButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowMaxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowMaxButton</name>
    <filename>classDWindowMaxButton.html</filename>
    <base>DIconButton</base>
    <member kind="signal">
      <type>void</type>
      <name>maximizedChanged</name>
      <anchorfile>classDWindowMaxButton.html</anchorfile>
      <anchor>a53655aa5cd0352306f14818ef24a854c</anchor>
      <arglist>(bool isMaximized)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DWindowMaxButton</name>
      <anchorfile>classDWindowMaxButton.html</anchorfile>
      <anchor>ad71aae4654333537f57bc2492ae9f426</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>isMaximized</name>
      <anchorfile>classDWindowMaxButton.html</anchorfile>
      <anchor>a644b336a9441697e5074a45c26dfde60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowMaxButtonPrivate</name>
    <filename>classDWindowMaxButtonPrivate.html</filename>
    <base>DIconButtonPrivate</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowMinButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowMinButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowMinButton</name>
    <filename>classDWindowMinButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DWindowMinButton</name>
      <anchorfile>classDWindowMinButton.html</anchorfile>
      <anchor>a65ce5ba6a412bb3956ad5159a4fef0d7</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Widget::DWindowOptionButton</name>
    <filename>classDtk_1_1Widget_1_1DWindowOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowOptionButton</name>
    <filename>classDWindowOptionButton.html</filename>
    <base>DIconButton</base>
    <member kind="function">
      <type></type>
      <name>DWindowOptionButton</name>
      <anchorfile>classDWindowOptionButton.html</anchorfile>
      <anchor>a46c68e33209e99fc3771e4ad852fd700</anchor>
      <arglist>(QWidget *parent=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWindowOverlayTransitionManager</name>
    <filename>classDWindowOverlayTransitionManager.html</filename>
  </compound>
  <compound kind="class">
    <name>DWindowQuitFullButton</name>
    <filename>classDWindowQuitFullButton.html</filename>
    <base>DIconButton</base>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DWiredDevice</name>
    <filename>classDtk_1_1NetworkManager_1_1DWiredDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DWiredDevice</name>
    <filename>classDWiredDevice.html</filename>
    <base>DDevice</base>
    <member kind="signal">
      <type>void</type>
      <name>HwAddressChanged</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a2150f5cbff5cc59e3acdf1802107e9d6</anchor>
      <arglist>(const QByteArray &amp;address)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>permHwAddressChanged</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>ab2d56ff46262e2bda8aa8955dddb950f</anchor>
      <arglist>(const QByteArray &amp;address)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>speedChanged</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a9b38da6eaa5de7146ee5dcb44d27421f</anchor>
      <arglist>(const quint32 speed)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>S390SubchannelsChanged</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a2c28c041d5902c9d645eee010f133ba3</anchor>
      <arglist>(const QStringList &amp;channels)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>carrierChanged</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>ad5b62307e65c388dffeb676856cb60a9</anchor>
      <arglist>(const bool carrier)</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>HwAddress</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a5692682151a09ded95161256c96e646c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>permHwAddress</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a0f77e6743ff5e5b337691f36c2c72367</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>speed</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a80b091bde46516aa1d49ac7f2b53d672</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>S390Subchannels</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a2a3103578edebbe5aa6868e5e23e5b14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>carrier</name>
      <anchorfile>classDWiredDevice.html</anchorfile>
      <anchor>a06a3a5c2a8f82518330ed4d5fe82ae69</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWiredDeviceInterface</name>
    <filename>classDWiredDeviceInterface.html</filename>
    <base>DDeviceInterface</base>
  </compound>
  <compound kind="class">
    <name>DWiredDevicePrivate</name>
    <filename>classDWiredDevicePrivate.html</filename>
    <base>DDevicePrivate</base>
  </compound>
  <compound kind="class">
    <name>DWiredSetting</name>
    <filename>classDWiredSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DWiredSettingPrivate</name>
    <filename>classDWiredSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::NetworkManager::DWirelessDevice</name>
    <filename>classDtk_1_1NetworkManager_1_1DWirelessDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>DWirelessDevice</name>
    <filename>classDWirelessDevice.html</filename>
    <base>DDevice</base>
    <member kind="signal">
      <type>void</type>
      <name>accessPointsChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a6043f787facee0e4654489f00e1016d0</anchor>
      <arglist>(const QList&lt; quint64 &gt; &amp;aps)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>HwAddressChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a037b7a17b38d444941e55ef9879cb617</anchor>
      <arglist>(const QByteArray &amp;address)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>permHwAddressChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a56aeab8a4e19c1d07102f8b9ab0b7a77</anchor>
      <arglist>(const QByteArray &amp;address)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>modeChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a0795600dff4ead061f819a9903404fc0</anchor>
      <arglist>(const NM80211Mode mode)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>bitrateChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>ac6ee8d1840b026572720e5e5afe7fc9e</anchor>
      <arglist>(const quint32 bitrate)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>activeAccessPointChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a4e87683ea62e3a91e8a4de7f7a2a577c</anchor>
      <arglist>(const quint64 &amp;path)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>wirelessCapabilitiesChanged</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a8a6f0d6b0c713964a09895713d415003</anchor>
      <arglist>(const NMWifiCap wirelessCapabilities)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AccessPointAdded</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>aca71caf33679d6d07db1daf2766cb966</anchor>
      <arglist>(const quint64 &amp;ap)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>AccessPointRemoved</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a70b6cbd79e329d1f51640580ab398132</anchor>
      <arglist>(const quint64 &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; quint64 &gt;</type>
      <name>accessPoints</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>ad339f50f673f8a0defc040c12ecf2103</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>HwAddress</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a63a2d0ba4a1cb5b2d8323e2c86a4f93a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QByteArray</type>
      <name>permHwAddress</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>ad4c4b6be37d9f7ad072cd0235747d814</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NM80211Mode</type>
      <name>mode</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a4b28d52e448337975ce1f6d808cc5a2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>bitrate</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a75d5a4b19fc6cc5230eaa97766f14279</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint64</type>
      <name>activeAccessPoint</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a5cf93c3cce48c5b28f072f9ed451a20f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NMWifiCap</type>
      <name>wirelessCapabilities</name>
      <anchorfile>classDWirelessDevice.html</anchorfile>
      <anchor>a44a10897087837ae5f9ca4051d228098</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DWirelessDeviceInterface</name>
    <filename>classDWirelessDeviceInterface.html</filename>
    <base>DDeviceInterface</base>
  </compound>
  <compound kind="class">
    <name>DWirelessDevicePrivate</name>
    <filename>classDWirelessDevicePrivate.html</filename>
    <base>DDevicePrivate</base>
  </compound>
  <compound kind="class">
    <name>DWirelessSecuritySetting</name>
    <filename>classDWirelessSecuritySetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DWirelessSecuritySettingPrivate</name>
    <filename>classDWirelessSecuritySettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DWirelessSetting</name>
    <filename>classDWirelessSetting.html</filename>
    <base>DNMSetting</base>
  </compound>
  <compound kind="class">
    <name>DWirelessSettingPrivate</name>
    <filename>classDWirelessSettingPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>DXorrisoEngine</name>
    <filename>classDXorrisoEngine.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>ebml_master_t</name>
    <filename>structebml__master__t.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>pos</name>
      <anchorfile>structebml__master__t.html</anchorfile>
      <anchor>aed18389c3b1da5a5832f182b05f9710d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sizebytes</name>
      <anchorfile>structebml__master__t.html</anchorfile>
      <anchor>aa06802fda6a1e1e9b9eb6070192e3ce9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditExampleWindow</name>
    <filename>classEditExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>efi_guid_t</name>
    <filename>structefi__guid__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>efipartition</name>
    <filename>structefipartition.html</filename>
  </compound>
  <compound kind="class">
    <name>sysfs::entry</name>
    <filename>classsysfs_1_1entry.html</filename>
  </compound>
  <compound kind="struct">
    <name>sysfs::entry_i</name>
    <filename>structsysfs_1_1entry__i.html</filename>
  </compound>
  <compound kind="struct">
    <name>EntryNode</name>
    <filename>structEntryNode.html</filename>
  </compound>
  <compound kind="class">
    <name>EntryPropertyParser</name>
    <filename>classEntryPropertyParser.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Device::EnumWrapper</name>
    <filename>classDtk_1_1Device_1_1EnumWrapper.html</filename>
  </compound>
  <compound kind="class">
    <name>EnumWrapper</name>
    <filename>classEnumWrapper.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>EnvGuard</name>
    <filename>classEnvGuard.html</filename>
  </compound>
  <compound kind="struct">
    <name>ethtool_cmd</name>
    <filename>structethtool__cmd.html</filename>
  </compound>
  <compound kind="struct">
    <name>ethtool_drvinfo</name>
    <filename>structethtool__drvinfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>ethtool_eeprom</name>
    <filename>structethtool__eeprom.html</filename>
  </compound>
  <compound kind="struct">
    <name>ethtool_link_settings</name>
    <filename>structethtool__link__settings.html</filename>
  </compound>
  <compound kind="struct">
    <name>ethtool_modinfo</name>
    <filename>structethtool__modinfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>ethtool_value</name>
    <filename>structethtool__value.html</filename>
  </compound>
  <compound kind="class">
    <name>EUCJPContextAnalysis</name>
    <filename>classEUCJPContextAnalysis.html</filename>
    <base>JapaneseContextAnalysis</base>
  </compound>
  <compound kind="class">
    <name>EUCJPDistributionAnalysis</name>
    <filename>classEUCJPDistributionAnalysis.html</filename>
    <base>CharDistributionAnalysis</base>
  </compound>
  <compound kind="class">
    <name>EUCKRDistributionAnalysis</name>
    <filename>classEUCKRDistributionAnalysis.html</filename>
    <base>CharDistributionAnalysis</base>
  </compound>
  <compound kind="class">
    <name>EUCTWDistributionAnalysis</name>
    <filename>classEUCTWDistributionAnalysis.html</filename>
    <base>CharDistributionAnalysis</base>
  </compound>
  <compound kind="class">
    <name>EventLogUtils</name>
    <filename>classEventLogUtils.html</filename>
  </compound>
  <compound kind="class">
    <name>ExampleWindowInterface</name>
    <filename>classExampleWindowInterface.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ExampStatusBar</name>
    <filename>classExampStatusBar.html</filename>
    <base>QStatusBar</base>
  </compound>
  <compound kind="class">
    <name>ExampTitlebar</name>
    <filename>classExampTitlebar.html</filename>
    <base>DTitlebar</base>
  </compound>
  <compound kind="class">
    <name>ExampWindow</name>
    <filename>classExampWindow.html</filename>
    <base>DMainWindow</base>
  </compound>
  <compound kind="struct">
    <name>ExecuteQuery</name>
    <filename>structExecuteQuery.html</filename>
  </compound>
  <compound kind="struct">
    <name>ext2_super_block</name>
    <filename>structext2__super__block.html</filename>
  </compound>
  <compound kind="struct">
    <name>ExtractionOptions</name>
    <filename>structExtractionOptions.html</filename>
  </compound>
  <compound kind="class">
    <name>ExtractJob</name>
    <filename>classExtractJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>FakeAccessPointService</name>
    <filename>classFakeAccessPointService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeAccountsManagerService</name>
    <filename>classFakeAccountsManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeAccountsUserService</name>
    <filename>classFakeAccountsUserService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeActiveConncetionService</name>
    <filename>classFakeActiveConncetionService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeActiveVpnConncetionService</name>
    <filename>classFakeActiveVpnConncetionService.html</filename>
    <base>FakeActiveConncetionService</base>
  </compound>
  <compound kind="class">
    <name>FakeAdslDeviceService</name>
    <filename>classFakeAdslDeviceService.html</filename>
    <base>FakeDeviceBaseService</base>
  </compound>
  <compound kind="class">
    <name>FakeAgentManagerService</name>
    <filename>classFakeAgentManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeAppProxyService</name>
    <filename>classFakeAppProxyService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeConnectionSettingService</name>
    <filename>classFakeConnectionSettingService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeDeviceBaseService</name>
    <filename>classFakeDeviceBaseService.html</filename>
    <base>FakeDeviceService</base>
  </compound>
  <compound kind="class">
    <name>FakeDeviceService</name>
    <filename>classFakeDeviceService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeDHCP4ConfigService</name>
    <filename>classFakeDHCP4ConfigService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeDHCP6ConfigService</name>
    <filename>classFakeDHCP6ConfigService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeGenericDeviceService</name>
    <filename>classFakeGenericDeviceService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeIpConflictCheckService</name>
    <filename>classFakeIpConflictCheckService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeIPv4ConfigService</name>
    <filename>classFakeIPv4ConfigService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeIPv6ConfigService</name>
    <filename>classFakeIPv6ConfigService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeNetworkManagerService</name>
    <filename>classFakeNetworkManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeNotificationManagerService</name>
    <filename>classFakeNotificationManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeSecretAgentService</name>
    <filename>classFakeSecretAgentService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeSettingsService</name>
    <filename>classFakeSettingsService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeSystemProxyService</name>
    <filename>classFakeSystemProxyService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeTunDeviceService</name>
    <filename>classFakeTunDeviceService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeWiredDeviceService</name>
    <filename>classFakeWiredDeviceService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>FakeWirelessDeviceService</name>
    <filename>classFakeWirelessDeviceService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>fat32_super_block</name>
    <filename>structfat32__super__block.html</filename>
  </compound>
  <compound kind="struct">
    <name>fat_super_block</name>
    <filename>structfat__super__block.html</filename>
  </compound>
  <compound kind="struct">
    <name>fb_bitfield</name>
    <filename>structfb__bitfield.html</filename>
  </compound>
  <compound kind="struct">
    <name>fb_fix_screeninfo</name>
    <filename>structfb__fix__screeninfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>fb_var_screeninfo</name>
    <filename>structfb__var__screeninfo.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::FileAppender</name>
    <filename>classDtk_1_1Core_1_1FileAppender.html</filename>
    <base>Dtk::Core::AbstractStringAppender</base>
    <member kind="function">
      <type></type>
      <name>FileAppender</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>aabaa304b319baeb59715e757eac11891</anchor>
      <arglist>(const QString &amp;fileName=QString())</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>ac227460c051d06577f6d259095543a8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFileName</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>a571109a39d62316c03519b4ace89767e</anchor>
      <arglist>(const QString &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>size</name>
      <anchorfile>classDtk_1_1Core_1_1FileAppender.html</anchorfile>
      <anchor>a7cf941865167cccbf4275b442ea865fb</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>FileEntry</name>
    <filename>structFileEntry.html</filename>
  </compound>
  <compound kind="class">
    <name>FileFilter</name>
    <filename>classFileFilter.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>FileProgressInfo</name>
    <filename>structFileProgressInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>FloatingButton</name>
    <filename>classFloatingButton.html</filename>
  </compound>
  <compound kind="class">
    <name>FloatingMessageContainer</name>
    <filename>classFloatingMessageContainer.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>fstypes</name>
    <filename>structfstypes.html</filename>
  </compound>
  <compound kind="class">
    <name>DTabBarPrivate::FullWidget</name>
    <filename>classDTabBarPrivate_1_1FullWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="struct">
    <name>func_stub</name>
    <filename>structfunc__stub.html</filename>
  </compound>
  <compound kind="struct">
    <name>stub_ext::FuncShadow</name>
    <filename>structstub__ext_1_1FuncShadow.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::FuncShadow&lt; Ret(*)(Args...), Lamda &gt;</name>
    <filename>structstub__ext_1_1FuncShadow_3_01Ret_07_5_08_07Args_8_8_8_08_00_01Lamda_01_4.html</filename>
    <templarg></templarg>
    <templarg>Args</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::FuncShadow&lt; Ret(Obj::*)(Args...) const, Lamda &gt;</name>
    <filename>structstub__ext_1_1FuncShadow_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_00_01Lamda_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::FuncShadow&lt; Ret(Obj::*)(Args...), Lamda &gt;</name>
    <filename>structstub__ext_1_1FuncShadow_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_00_01Lamda_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DThreadUtil::FunctionCallProxy</name>
    <filename>classDtk_1_1Core_1_1DThreadUtil_1_1FunctionCallProxy.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::FunctionPointer</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1FunctionPointer.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...) const &gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1FunctionPointer_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::FunctionPointer&lt; Ret(Obj::*)(Args...)&gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1FunctionPointer_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="class">
    <name>GB2312DistributionAnalysis</name>
    <filename>classGB2312DistributionAnalysis.html</filename>
    <base>CharDistributionAnalysis</base>
  </compound>
  <compound kind="class">
    <name>GetThumanbil</name>
    <filename>classGetThumanbil.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="class">
    <name>GLRenderNode</name>
    <filename>classGLRenderNode.html</filename>
    <base>DBlitFramebufferNode</base>
  </compound>
  <compound kind="struct">
    <name>gpth</name>
    <filename>structgpth.html</filename>
  </compound>
  <compound kind="class">
    <name>GraphicsView</name>
    <filename>classGraphicsView.html</filename>
    <base>QGraphicsView</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::GSettingsBackend</name>
    <filename>classDtk_1_1Core_1_1GSettingsBackend.html</filename>
    <base>Dtk::Core::DSettingsBackend</base>
    <member kind="function">
      <type></type>
      <name>GSettingsBackend</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>a6f9bc00eba6ec2096e82c3c9db05cc1a</anchor>
      <arglist>(DSettings *settings, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>a12ac28c2996fdd6b6a945205487ed2a4</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>ae46f737d28374f7c7a99cf620294c836</anchor>
      <arglist>(const QString &amp;key) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>aaa2c459c00c3743d064bdd5518073509</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1GSettingsBackend.html</anchorfile>
      <anchor>adb2b8532b657a907d3a1e502cb79b96c</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::GSettingsBackendPrivate</name>
    <filename>classDtk_1_1Core_1_1GSettingsBackendPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>GstUtils</name>
    <filename>classGstUtils.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::__dexpected::Guard</name>
    <filename>structDtk_1_1Core_1_1____dexpected_1_1Guard.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>HandleWorkingDir</name>
    <filename>classHandleWorkingDir.html</filename>
  </compound>
  <compound kind="struct">
    <name>HFSMasterDirectoryBlock</name>
    <filename>structHFSMasterDirectoryBlock.html</filename>
  </compound>
  <compound kind="struct">
    <name>HFSPlusExtentDescriptor</name>
    <filename>structHFSPlusExtentDescriptor.html</filename>
  </compound>
  <compound kind="struct">
    <name>HFSPlusForkData</name>
    <filename>structHFSPlusForkData.html</filename>
  </compound>
  <compound kind="struct">
    <name>HFSPlusVolumeHeader</name>
    <filename>structHFSPlusVolumeHeader.html</filename>
  </compound>
  <compound kind="class">
    <name>HighlightPanel</name>
    <filename>classHighlightPanel.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Power::History</name>
    <filename>structDtk_1_1Power_1_1History.html</filename>
  </compound>
  <compound kind="struct">
    <name>History</name>
    <filename>structHistory.html</filename>
    <member kind="variable">
      <type>uint</type>
      <name>time</name>
      <anchorfile>structHistory.html</anchorfile>
      <anchor>abba6ab573b378ba6242191fbc72e74b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structHistory.html</anchorfile>
      <anchor>a874169cc7df48ff7cd939a98c6b84f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint</type>
      <name>state</name>
      <anchorfile>structHistory.html</anchorfile>
      <anchor>acb610496766f1723dc3905be5dac0996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>History_p</name>
    <filename>structHistory__p.html</filename>
  </compound>
  <compound kind="class">
    <name>hwNode</name>
    <filename>classhwNode.html</filename>
  </compound>
  <compound kind="struct">
    <name>hwNode_i</name>
    <filename>structhwNode__i.html</filename>
  </compound>
  <compound kind="struct">
    <name>ibm_model_def</name>
    <filename>structibm__model__def.html</filename>
  </compound>
  <compound kind="class">
    <name>ImageEntry</name>
    <filename>classImageEntry.html</filename>
  </compound>
  <compound kind="class">
    <name>ImageReceive</name>
    <filename>classImageReceive.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>ImageViewerExample</name>
    <filename>classImageViewerExample.html</filename>
    <base>ExampleWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>ImageViewerExampleWindow</name>
    <filename>classImageViewerExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>KPluginFactory::InheritanceChecker</name>
    <filename>structKPluginFactory_1_1InheritanceChecker.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Login::Inhibitor</name>
    <filename>structDtk_1_1Login_1_1Inhibitor.html</filename>
  </compound>
  <compound kind="struct">
    <name>Inhibitor</name>
    <filename>structInhibitor.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>what</name>
      <anchorfile>structInhibitor.html</anchorfile>
      <anchor>a49e09f7a94522510a79cf7888fd977de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>who</name>
      <anchorfile>structInhibitor.html</anchorfile>
      <anchor>a1ed3fd664b7c83a7aef23eea85520c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>why</name>
      <anchorfile>structInhibitor.html</anchorfile>
      <anchor>ada15c8131e93b26ffff869d7d691a417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InhibitMode</type>
      <name>mode</name>
      <anchorfile>structInhibitor.html</anchorfile>
      <anchor>a27c2ada033c2bddd576f8e208c80a328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>UID</name>
      <anchorfile>structInhibitor.html</anchorfile>
      <anchor>a66c7a84eae3d26fdb52f4c2ecb5ca4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>PID</name>
      <anchorfile>structInhibitor.html</anchorfile>
      <anchor>aa8354b2e4cd782023998875e81fa4a6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>InhibitParam</name>
    <filename>structInhibitParam.html</filename>
  </compound>
  <compound kind="class">
    <name>InputDevicesInterface</name>
    <filename>classInputDevicesInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>InputDevicesService</name>
    <filename>classInputDevicesService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>ClipperLib::Int128</name>
    <filename>classClipperLib_1_1Int128.html</filename>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::IntersectNode</name>
    <filename>structClipperLib_1_1IntersectNode.html</filename>
  </compound>
  <compound kind="class">
    <name>InWindowBlurTextureProvider</name>
    <filename>classInWindowBlurTextureProvider.html</filename>
  </compound>
  <compound kind="class">
    <name>IpV4LineEdit</name>
    <filename>classIpV4LineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ItemDelegate</name>
    <filename>classItemDelegate.html</filename>
    <base>QStyledItemDelegate</base>
  </compound>
  <compound kind="class">
    <name>JapaneseContextAnalysis</name>
    <filename>classJapaneseContextAnalysis.html</filename>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::Join</name>
    <filename>structClipperLib_1_1Join.html</filename>
  </compound>
  <compound kind="class">
    <name>KeyboardInterface</name>
    <filename>classKeyboardInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>KeyboardService</name>
    <filename>classKeyboardService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>KeyParam</name>
    <filename>structKeyParam.html</filename>
  </compound>
  <compound kind="class">
    <name>KeySequenceEdit</name>
    <filename>classKeySequenceEdit.html</filename>
    <base>DKeySequenceEdit</base>
  </compound>
  <compound kind="class">
    <name>KPluginFactory</name>
    <filename>classKPluginFactory.html</filename>
    <base>QObject</base>
    <class kind="struct">KPluginFactory::InheritanceChecker</class>
    <member kind="function">
      <type></type>
      <name>KPluginFactory</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>acc33691452a9b339995a4e3d0d9e57b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KPluginFactory</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>adec5cacfdc9abbb03fedc68226d59a70</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>create</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>a37096cf85df0a9db77242bdda279ad19</anchor>
      <arglist>(QObject *parent=nullptr, const QVariantList &amp;args=QVariantList())</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>create</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>ab1d26aea3e82c17cbff484ef89115e19</anchor>
      <arglist>(const QString &amp;keyword, QObject *parent=nullptr, const QVariantList &amp;args=QVariantList())</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>create</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>a79cfca4a6d243975590b90a3c339afff</anchor>
      <arglist>(QWidget *parentWidget, QObject *parent, const QString &amp;keyword=QString(), const QVariantList &amp;args=QVariantList())</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>create</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>a834b4333e1d84fcef3287ab75b7b1815</anchor>
      <arglist>(QObject *parent, const QStringList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>create</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>a648d37f6dd95d3cc5e44a47d2957a3d2</anchor>
      <arglist>(QObject *parent=nullptr, const char *classname=&quot;QObject&quot;, const QStringList &amp;args=QStringList())</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>QObject *(*</type>
      <name>CreateInstanceFunction</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>adafb2ea531979d68792ca9ff3e8873b6</anchor>
      <arglist>)(QWidget *, QObject *, const QVariantList &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerPlugin</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>a8e23087ce58e7df66ae26a2c984b90af</anchor>
      <arglist>(const QString &amp;keyword=QString(), CreateInstanceFunction instanceFunction=InheritanceChecker&lt; T &gt;().createInstanceFunction(reinterpret_cast&lt; T * &gt;(0)))</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual QObject *</type>
      <name>createObject</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>ab004f59d313eee1b9479218347336d12</anchor>
      <arglist>(QObject *parent, const char *className, const QStringList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual KParts::Part *</type>
      <name>createPartObject</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>ac31c9c8828e25de346352ed8a7644bb3</anchor>
      <arglist>(QWidget *parentWidget, QObject *parent, const char *classname, const QStringList &amp;args)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual QObject *</type>
      <name>create</name>
      <anchorfile>classKPluginFactory.html</anchorfile>
      <anchor>a9ce2bc6a252ff199aea2275c190cfb1d</anchor>
      <arglist>(const char *iface, QWidget *parentWidget, QObject *parent, const QVariantList &amp;args, const QString &amp;keyword)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KPluginFactoryPrivate</name>
    <filename>classKPluginFactoryPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>KPluginLoader</name>
    <filename>classKPluginLoader.html</filename>
    <base>QObject</base>
    <member kind="function">
      <type></type>
      <name>KPluginLoader</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>ae7ff5d6804969e9dc5bfeb233a8d2ebb</anchor>
      <arglist>(const QString &amp;plugin, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginLoader</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a30e49d279c41c552dc4e7b5447c79f13</anchor>
      <arglist>(const KPluginName &amp;pluginName, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KPluginLoader</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a9218a209e48bad8a2674c1853c0776ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KPluginFactory *</type>
      <name>factory</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a606ba35fc203e419e9318dbb4ee48738</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>pluginName</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a4ccb4478e90992bee16b02e84c083d3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>quint32</type>
      <name>pluginVersion</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>abb0cadbbc94aa56f4cfc4139502d0256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a5946adcb4875ff4559ce45109276c5ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>aea0ae91b58e26608d8c530f30a4cb33a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>instance</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a8e66938a21d1f6da57245b4ba283a39e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoaded</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a1becb866362f7afcf32d31f1193b699a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>load</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a5fc3ca8f68bb520989cd3eed78c4bc47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QLibrary::LoadHints</type>
      <name>loadHints</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>abeeac0beb222cd9882e3e049bc2e9a2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QJsonObject</type>
      <name>metaData</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>aef87229b778a4b30d09680539579b910</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadHints</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a9f583f22f3283c4afc410bfe9ad95aa3</anchor>
      <arglist>(QLibrary::LoadHints loadHints)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unload</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a18e3f751ecd02360ed9e8ace853dc016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>findPlugin</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a3a69c4f1826926a2145f14770b8b5010</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QList&lt; QObject * &gt;</type>
      <name>instantiatePlugins</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a8276166ff91de40b031cc73f25e1263b</anchor>
      <arglist>(const QString &amp;directory, std::function&lt; bool(const KPluginMetaData &amp;)&gt; filter=std::function&lt; bool(const KPluginMetaData &amp;)&gt;(), QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QVector&lt; KPluginMetaData &gt;</type>
      <name>findPlugins</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>abe8d620c94c3f7c3d05b991777b37815</anchor>
      <arglist>(const QString &amp;directory, std::function&lt; bool(const KPluginMetaData &amp;)&gt; filter=std::function&lt; bool(const KPluginMetaData &amp;)&gt;())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QVector&lt; KPluginMetaData &gt;</type>
      <name>findPluginsById</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a7448249b7b7dbc337f82bd91b17d91c7</anchor>
      <arglist>(const QString &amp;directory, const QString &amp;pluginId)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>forEachPlugin</name>
      <anchorfile>classKPluginLoader.html</anchorfile>
      <anchor>a7f8bc12a6e3620de37e160559ebe965f</anchor>
      <arglist>(const QString &amp;directory, std::function&lt; void(const QString &amp;)&gt; callback=std::function&lt; void(const QString &amp;)&gt;())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KPluginLoaderPrivate</name>
    <filename>classKPluginLoaderPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>KPluginMetaData</name>
    <filename>classKPluginMetaData.html</filename>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a4dcccc645bd07a7f49a88b54846f227b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a449ce8a3569498bd65464e08813c9d6c</anchor>
      <arglist>(const KPluginLoader &amp;loader)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>ab2e7d4c4d056966e565382571614e90b</anchor>
      <arglist>(const QPluginLoader &amp;loader)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a0516c295306719273d38c86606082762</anchor>
      <arglist>(const QString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>aa68eb26460d7b83d8ddedd4cd9a8c398</anchor>
      <arglist>(const QJsonObject &amp;metaData, const QString &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a7bbdbb7e9aaf250fba43fb946a2b4089</anchor>
      <arglist>(const QJsonObject &amp;metaData, const QString &amp;pluginFile, const QString &amp;metaDataFile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a0fb8469c88524f85704f7b4b3a14be25</anchor>
      <arglist>(const KPluginMetaData &amp;)</arglist>
    </member>
    <member kind="function">
      <type>KPluginMetaData &amp;</type>
      <name>operator=</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a7e88b4a436e75d8e7ec13dc80cdef3ac</anchor>
      <arglist>(const KPluginMetaData &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KPluginMetaData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a53d7c2c2feda71ab2c1aad92e212a322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a9205b02a9444f87e501f221bd97f6533</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a24482f74542b07a6be502bd9d2ee38a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>fileName</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a758e9e9ff04b9731ec8366db4fe15150</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>metaDataFileName</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a3d64a2a5bbc19874c11dc003c8f203a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QJsonObject</type>
      <name>rawData</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a61a4c18a7ad2ebd063221a9936be1113</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QObject *</type>
      <name>instantiate</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>aebd1096b7fd356dd84bc7ef19ab08d01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a9011b7492ac24e0370aad06397c43352</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>description</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>ae43bf4faf9e18daca990b078b75f365e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>extraInformation</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>abd2fccc76b54d28f401ca34672b5d3cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; KAboutPerson &gt;</type>
      <name>authors</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>aa7ee7f8fbdecf319503797c3433d635f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; KAboutPerson &gt;</type>
      <name>translators</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a1e29597f95964df36ce3a86e7b82829b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; KAboutPerson &gt;</type>
      <name>otherContributors</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a0a7f77b84db3e5c5f902fa6bf78ce2c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>category</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a180f69cc826818124edd7214570fe46f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>iconName</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a88b810061ce01edf3c70cd78143ee938</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>license</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a5336c78daa810e14ec1dd303e9c327b3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>copyrightText</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a37898ea09c863c4a9c75eee794381f6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>pluginId</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a06b3f4742bb2d5ad5a2598c4ef8bd75d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>version</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>ac19d8a09870418b903b816b9b19eec57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>website</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a409ef7e1391c68f36f25ab994932b774</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>dependencies</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a82d2e87db9b834bfbb6f0155709b617c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>serviceTypes</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>aa1d6d1a0f58f750f7a36dbc9d1f03b09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>mimeTypes</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a1f02e0567f393d33c3f59955aa8f9260</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>formFactors</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>aee0aa2c916f3421625107701500d82f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabledByDefault</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>ad48f98a3a3be6b07d9359ea0774ebf0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>value</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a375fa8ec5b1a562d8fad70c593f825b7</anchor>
      <arglist>(const QString &amp;key, const QString &amp;defaultValue=QString()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>aa74438c63e21519b6185b65a6d41832a</anchor>
      <arglist>(const KPluginMetaData &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a4dc965510a0e5f4147cb401e5a1eb615</anchor>
      <arglist>(const KPluginMetaData &amp;other) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QStringList</type>
      <name>readStringList</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>acde2b677d17e82eb9311bab4185bd821</anchor>
      <arglist>(const QJsonObject &amp;obj, const QString &amp;key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QJsonValue</type>
      <name>readTranslatedValue</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>ab71f4d031e39fe834f4ac83d6f27e36a</anchor>
      <arglist>(const QJsonObject &amp;jo, const QString &amp;key, const QJsonValue &amp;defaultValue=QJsonValue())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>readTranslatedString</name>
      <anchorfile>classKPluginMetaData.html</anchorfile>
      <anchor>a0fc9f5db9cecfd1a245e2a4a98b83fb0</anchor>
      <arglist>(const QJsonObject &amp;jo, const QString &amp;key, const QString &amp;defaultValue=QString())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KPluginMetaDataPrivate</name>
    <filename>classKPluginMetaDataPrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>KPluginName</name>
    <filename>classKPluginName.html</filename>
    <member kind="function">
      <type></type>
      <name>KPluginName</name>
      <anchorfile>classKPluginName.html</anchorfile>
      <anchor>a04dad0cf2de5cba593516f6e3eb8bdff</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>name</name>
      <anchorfile>classKPluginName.html</anchorfile>
      <anchor>ad4317fa6c84cab13a8c4ba9d03137010</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classKPluginName.html</anchorfile>
      <anchor>af2f7b92dbdf1d29e530187e316e74640</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>errorString</name>
      <anchorfile>classKPluginName.html</anchorfile>
      <anchor>ad403352894968a92741b4faa8b65846c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KPluginName</type>
      <name>fromErrorString</name>
      <anchorfile>classKPluginName.html</anchorfile>
      <anchor>a994d6b7b1418cae4b8c65b2b36fcdc08</anchor>
      <arglist>(const QString &amp;errorString)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KProcess</name>
    <filename>classKProcess.html</filename>
    <base>QProcess</base>
    <member kind="enumeration">
      <type></type>
      <name>OutputChannelMode</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SeparateChannels</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87af4d4c1acd2fb7db2f33e0063cada2f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MergedChannels</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87ad56a69aaab2b00eaebcae0ca58debbbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ForwardedChannels</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87ae59dc625768089fceea8977391c02e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnlyStdoutChannel</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87a6b5f2d82d9a5599806b5d8013ab58694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnlyStderrChannel</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87af91ed9d3f45f13f1c58901a61b1df887</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SeparateChannels</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87af4d4c1acd2fb7db2f33e0063cada2f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MergedChannels</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87ad56a69aaab2b00eaebcae0ca58debbbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ForwardedChannels</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87ae59dc625768089fceea8977391c02e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnlyStdoutChannel</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87a6b5f2d82d9a5599806b5d8013ab58694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OnlyStderrChannel</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a4acf3452f1bf5bd3954d272168b16c87af91ed9d3f45f13f1c58901a61b1df887</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KProcess</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>ada85375766be65c1d36a0de3b3668fd0</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KProcess</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>ad3933c65b05ce3e3d19c8b592ca0220f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputChannelMode</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a7c91d212c2fa397f4a7b1840c5de5c2f</anchor>
      <arglist>(OutputChannelMode mode)</arglist>
    </member>
    <member kind="function">
      <type>OutputChannelMode</type>
      <name>outputChannelMode</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a63e4e99b82df9671fd88a14380084d20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextOpenMode</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a2fde098c4fea5e5178982309d02f266f</anchor>
      <arglist>(QIODevice::OpenMode mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnv</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>ad5218a3478719d72a4db4a1adf3dbb20</anchor>
      <arglist>(const QString &amp;name, const QString &amp;value, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetEnv</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a536b23bca1d0b25a885dc83752eb0619</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEnvironment</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>aa0c47cd15a2782c36404870c024f4915</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgram</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>afad13da571471df810159602aea3d781</anchor>
      <arglist>(const QString &amp;exe, const QStringList &amp;args=QStringList())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgram</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>aa0d38be873db69cd97863e429e2e37ad</anchor>
      <arglist>(const QStringList &amp;argv)</arglist>
    </member>
    <member kind="function">
      <type>KProcess &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a622180f48f80ff03c7d29b2d6ae8fa70</anchor>
      <arglist>(const QString &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>KProcess &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a2c023c6dea904e00486ff08ea7214f7e</anchor>
      <arglist>(const QStringList &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProgram</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a432e2ddd9c3f2b56f3430ae92b097827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShellCommand</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a291b7b2bec6c9f49e0f5140ff06e75c2</anchor>
      <arglist>(const QString &amp;cmd)</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>program</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a680bbb4c8186dd463d044640358344ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a28f6c3ffc96c76490fe9a552c053a417</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>execute</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>adc5c9b1a37d04ad56c8261503a08ea82</anchor>
      <arglist>(int msecs=-1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>startDetached</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a724d24732a54ae27f1c83133f18a2de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pid</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a0c991c492a346417f352b88b4e313c8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>execute</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a913f73fb177f7425f7f76f06bfb203b9</anchor>
      <arglist>(const QString &amp;exe, const QStringList &amp;args=QStringList(), int msecs=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>execute</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a998db042f0ad3f6b92fd738cd73c0379</anchor>
      <arglist>(const QStringList &amp;argv, int msecs=-1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>startDetached</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a24321850a114a718cdf7d601d1c076a1</anchor>
      <arglist>(const QString &amp;exe, const QStringList &amp;args=QStringList())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>startDetached</name>
      <anchorfile>classKProcess.html</anchorfile>
      <anchor>a74af9d9f41d3f6fd41366d371c98015e</anchor>
      <arglist>(const QStringList &amp;argv)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KProcessPrivate</name>
    <filename>classKProcessPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>KPty</name>
    <filename>classKPty.html</filename>
    <member kind="function">
      <type></type>
      <name>KPty</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>aca21f55c06c2ed859840ceccae66b1b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KPty</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a0afc8e28f6a1ca85b4b2c9aa0ab8103f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a86bddd6694e074fd24be475caf535b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>ae56d44b940d90ae01747ee5411ee76a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeSlave</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>aae8c3f69ce6909544fc40ac8024873a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCTty</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a2af83326dd2887c6eca7b47044c74892</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>login</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a5d4c06eafef9a76141b3d822465305fc</anchor>
      <arglist>(const char *user=nullptr, const char *remotehost=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logout</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>ac4025fe9bcbdb48cfd5c31a36f7af5bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tcGetAttr</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a93aa46e0fc039f6b123bf8681da8b1e5</anchor>
      <arglist>(struct ::termios *ttmode) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tcSetAttr</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>ac8ff981097616a592e05b9e63fe0e435</anchor>
      <arglist>(struct ::termios *ttmode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setWinSize</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>ac9a7934d31aade1761a0e935daf67a98</anchor>
      <arglist>(int lines, int columns)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setEcho</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a862d499ca8f57cdd2e59151f9bf6923d</anchor>
      <arglist>(bool echo)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ttyName</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>ac6cbaa66473981aae1965555993aebc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>masterFd</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>a419f7b2c58f355506444d9265fd28665</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>slaveFd</name>
      <anchorfile>classKPty.html</anchorfile>
      <anchor>ad1a6583e7179ebeae27bc10988121381</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KPtyDevice</name>
    <filename>classKPtyDevice.html</filename>
    <base>QIODevice</base>
    <base>KPty</base>
    <member kind="signal">
      <type>void</type>
      <name>readEof</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a0b7d78a0b3a67417fc829e7399de1785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPtyDevice</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a782b7c6e30f85e9e502d4f03e9939438</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KPtyDevice</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>af6ceb9a85d544ec5d70904287d9cbd0b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>aa8febdaf71d828ce241c16a80959048e</anchor>
      <arglist>(OpenMode mode=ReadWrite|Unbuffered) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>open</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>aa23f8dda0c450844df5994ef3d586490</anchor>
      <arglist>(int fd, OpenMode mode=ReadWrite|Unbuffered)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>abb6dca39d498463d710cb783a717331d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSuspended</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a20b4b5c44df9f5f7bc5e356b204d2826</anchor>
      <arglist>(bool suspended)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuspended</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>aaa946dc2a5bec86427cae8de85133cdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSequential</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a46c39ea9fd1adb47cff564509a19ece6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canReadLine</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a5f842fcbdb3b54486bd016858ff99d66</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>atEnd</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>ac19fc99511c57cdb1293abbdad285e0b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>bytesAvailable</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a3e8a05d2a4c1b8d43a237d0ead0a4a67</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>bytesToWrite</name>
      <anchorfile>classKPtyDevice.html</anchorfile>
      <anchor>a9c7db15e4bb8db875b0be510dbd42975</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KPtyDevicePrivate</name>
    <filename>structKPtyDevicePrivate.html</filename>
    <base>KPtyPrivate</base>
  </compound>
  <compound kind="class">
    <name>KPtyPrivate</name>
    <filename>classKPtyPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>KPtyProcess</name>
    <filename>classKPtyProcess.html</filename>
    <base>KProcess</base>
    <member kind="enumeration">
      <type></type>
      <name>PtyChannelFlag</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34aa2b4e0876cd871573c09b44e7203d83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdinChannel</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a3eb0bb44351c443441dfab31307bf11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdoutChannel</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a6d32c3e25bfcb0f5b49f90ceb5d61421</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StderrChannel</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34af0d693c623e020a7070dae1cb21ef9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllOutputChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a14ba39cb36082e5614bc867b8432d6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a5a94552fc77286fe169dd8a3ffc2b4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34aa2b4e0876cd871573c09b44e7203d83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdinChannel</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a3eb0bb44351c443441dfab31307bf11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StdoutChannel</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a6d32c3e25bfcb0f5b49f90ceb5d61421</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StderrChannel</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34af0d693c623e020a7070dae1cb21ef9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllOutputChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a14ba39cb36082e5614bc867b8432d6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ada77181de92d8c9d6e74c87e60777e34a5a94552fc77286fe169dd8a3ffc2b4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPtyProcess</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a7301056d929cfa123907b1d3943b727e</anchor>
      <arglist>(QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KPtyProcess</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>ae9fc0e750fbba0b740f39b26b4bbed3e</anchor>
      <arglist>(int ptyMasterFd, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KPtyProcess</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>aa079f304417088171dfc97c90d93918e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPtyChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a40c2bc7b8bd4b9ea091fabf4f8b31699</anchor>
      <arglist>(PtyChannels channels)</arglist>
    </member>
    <member kind="function">
      <type>PtyChannels</type>
      <name>ptyChannels</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a19af7c710c3d55307e7ecd3a56086696</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseUtmp</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a21cebc9d33750d469ace27063f90e762</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUseUtmp</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a197d82f41b3ee4ff535e4eaea0a771f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>KPtyDevice *</type>
      <name>pty</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a709b98ac4a7851306f89649d0b592374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupChildProcess</name>
      <anchorfile>classKPtyProcess.html</anchorfile>
      <anchor>a5d8528842c61e7ceca70318bde02164a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KPtyProcessPrivate</name>
    <filename>classKPtyProcessPrivate.html</filename>
    <base>KProcessPrivate</base>
  </compound>
  <compound kind="class">
    <name>KRingBuffer</name>
    <filename>classKRingBuffer.html</filename>
  </compound>
  <compound kind="struct">
    <name>label</name>
    <filename>structlabel.html</filename>
  </compound>
  <compound kind="struct">
    <name>label_header</name>
    <filename>structlabel__header.html</filename>
  </compound>
  <compound kind="struct">
    <name>stub_ext::LamdaCaller</name>
    <filename>structstub__ext_1_1LamdaCaller.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::LamdaCaller&lt; Ret(Obj::*)() const &gt;</name>
    <filename>structstub__ext_1_1LamdaCaller_3_01Ret_07Obj_1_1_5_08_07_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::LamdaCaller&lt; Ret(Obj::*)(Args...) const &gt;</name>
    <filename>structstub__ext_1_1LamdaCaller_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="class">
    <name>stub_ext::LamdaWrapper</name>
    <filename>classstub__ext_1_1LamdaWrapper.html</filename>
    <templarg></templarg>
    <base>stub_ext::Wrapper</base>
    <base>stub_ext::Wrapper</base>
    <base>stub_ext::Wrapper</base>
  </compound>
  <compound kind="struct">
    <name>DDciIconEntry::ScalableLayer::Layer</name>
    <filename>structDDciIconEntry_1_1ScalableLayer_1_1Layer.html</filename>
  </compound>
  <compound kind="class">
    <name>LayoutExampleWindow</name>
    <filename>classLayoutExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>LCDNumberExampleWindow</name>
    <filename>classLCDNumberExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>LibarchivePlugin</name>
    <filename>classLibarchivePlugin.html</filename>
    <base>ReadWriteArchiveInterface</base>
    <class kind="struct">LibarchivePlugin::ArchiveReadCustomDeleter</class>
    <class kind="struct">LibarchivePlugin::ArchiveWriteCustomDeleter</class>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>list</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>abbe40209672fdebda436c7b4e83f93fc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>ab87003cb41ffa0d08b8e0e7157b2422d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a42d82da2893fab19b1a6c26679bff847</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addFiles</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>ab3aacd9ab8c9c108c6233c60d3ca24c1</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>moveFiles</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a2396ab01c8e8a9996d6f3f8b8a94008b</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>copyFiles</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a08ff6608f6203d4b0dd3bfc183120647</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>deleteFiles</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a34aa0875211699d602018249b5bc758d</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>renameFiles</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a08f541ccea084e91bc030d775f2cf356</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addComment</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a799321651f6ba59cc21c60e9a5b27f0e</anchor>
      <arglist>(const QString &amp;comment) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>updateArchiveData</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>ae134439a96e6a84bbf7f6595e87eda8d</anchor>
      <arglist>(const UpdateOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseOperation</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>aee32923b717668bc17d3ba77f11ee68e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueOperation</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>a201d5bc16e68a97e0833ce7f488d92b4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doKill</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>aed5cb7cd4d6af71e6dd13c1df3277f9d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>initializeReader</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>ac32350dc64294385705c0c61686b1ee1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyDataFromSource</name>
      <anchorfile>classLibarchivePlugin.html</anchorfile>
      <anchor>ad5d912af54b95ed09d2392661281a506</anchor>
      <arglist>(struct archive *source, struct archive *dest, const qlonglong &amp;totalSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LibBzip2Interface</name>
    <filename>classLibBzip2Interface.html</filename>
    <base>LibSingleFileInterface</base>
  </compound>
  <compound kind="class">
    <name>LibBzip2InterfaceFactory</name>
    <filename>classLibBzip2InterfaceFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>LibGzipInterface</name>
    <filename>classLibGzipInterface.html</filename>
    <base>LibSingleFileInterface</base>
  </compound>
  <compound kind="class">
    <name>LibGzipInterfaceFactory</name>
    <filename>classLibGzipInterfaceFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LibICU</name>
    <filename>classDtk_1_1Core_1_1LibICU.html</filename>
  </compound>
  <compound kind="class">
    <name>LibminizipPlugin</name>
    <filename>classLibminizipPlugin.html</filename>
    <base>ReadOnlyArchiveInterface</base>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>list</name>
      <anchorfile>classLibminizipPlugin.html</anchorfile>
      <anchor>ab17d227583a7cdee2002d5f26f003709</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classLibminizipPlugin.html</anchorfile>
      <anchor>a0af8ca5ad902008df70eebe3b4494bbf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classLibminizipPlugin.html</anchorfile>
      <anchor>ae0e5605315e705f48a1895f3a4c01841</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseOperation</name>
      <anchorfile>classLibminizipPlugin.html</anchorfile>
      <anchor>aa9f522258e9916e9b26dec2389ab0972</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueOperation</name>
      <anchorfile>classLibminizipPlugin.html</anchorfile>
      <anchor>a2f2cdf0aff5e395ba0229d57814c3df8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doKill</name>
      <anchorfile>classLibminizipPlugin.html</anchorfile>
      <anchor>afbd9e5f8917334eadd70f8de4845bba2</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LibminizipPluginFactory</name>
    <filename>classLibminizipPluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>LibPigzPlugin</name>
    <filename>classLibPigzPlugin.html</filename>
    <base>ReadWriteArchiveInterface</base>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>list</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a05b0cc729dc47a1b5ddec3f4964cc189</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>ab67f055d1d5f0df18afe6360c6db4b29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a339b053e5ba52287b67fa94c823b0a23</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addFiles</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a9272433156f14887a6bdcb1a50d2211e</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>moveFiles</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a8694faa22ced4f252818094fe7e13397</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>copyFiles</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>adffb2cdb96fcaeb1c59c6ba488b3b4e7</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>deleteFiles</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a128ada4b05c751bead2c75380530af37</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>renameFiles</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a27303148b85fa4e89eee3818ffd25b02</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addComment</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a759154a7c46359f574aafe5deccfafb2</anchor>
      <arglist>(const QString &amp;comment) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>updateArchiveData</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a80b4bd509eb311a7002fb08d2c7243e6</anchor>
      <arglist>(const UpdateOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseOperation</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>acabae8fbc6608473e17cecd8741f88f5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueOperation</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>a3f38a9ec82295d6822f4139c5b0cb7dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doKill</name>
      <anchorfile>classLibPigzPlugin.html</anchorfile>
      <anchor>ac047fab92e7832d2a8ce8bfeed2ed02a</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LibPigzPluginFactory</name>
    <filename>classLibPigzPluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>LibSingleFileInterface</name>
    <filename>classLibSingleFileInterface.html</filename>
    <base>ReadOnlyArchiveInterface</base>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>list</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>a18d82b0f400b24f39509bb7212122822</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>a72d2139f00cbbddc9f8e844fa5e5ef1a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>ac4debc919541167559a55f4b677b03c6</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseOperation</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>ab7a97a5e05c9fd0d1ffadc065b8598fc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueOperation</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>a278d1724e1448abea30f63b2f1256051</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doKill</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>a308122d528f4f8114291f098c8e7167d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const QString</type>
      <name>uncompressedFileName</name>
      <anchorfile>classLibSingleFileInterface.html</anchorfile>
      <anchor>a8b6ba3d085999d07a8e45144676ec43e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::Libuchardet</name>
    <filename>classDtk_1_1Core_1_1Libuchardet.html</filename>
  </compound>
  <compound kind="class">
    <name>LibXzInterface</name>
    <filename>classLibXzInterface.html</filename>
    <base>LibSingleFileInterface</base>
  </compound>
  <compound kind="class">
    <name>LibXzInterfaceFactory</name>
    <filename>classLibXzInterfaceFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>LibzipPlugin</name>
    <filename>classLibzipPlugin.html</filename>
    <base>ReadWriteArchiveInterface</base>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>list</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a6e3dbb14816ea385dfe9dbb6fa584037</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a8ee83297954627c4804336eb2515dd44</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a8d7319b60cd40de7b786c51f0ac3f9dd</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addFiles</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>aec88da68472a795f29e6c46a7da42b90</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>moveFiles</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a8bdb05fd769e38a8d873714387526ee0</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>copyFiles</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a27e2af3115a4813f187b5f853872cf10</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>deleteFiles</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>adf4ea909da3ee3b6ecd8ca46067d2227</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>renameFiles</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a08ff94d7d527b1e6cc6be81309f699c9</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addComment</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a7c7ad84a5b68279ce43131817b293da5</anchor>
      <arglist>(const QString &amp;comment) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>updateArchiveData</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>af5681bda5b9e659d44bbe0d69656beb9</anchor>
      <arglist>(const UpdateOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseOperation</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a64bdfcf617934105dd2fa06f9ed4698a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueOperation</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>a715d66af38181046c33955b9911a7824</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doKill</name>
      <anchorfile>classLibzipPlugin.html</anchorfile>
      <anchor>aaac12a737f077a73bb79f85d1b49cead</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LibzipPluginFactory</name>
    <filename>classLibzipPluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>ListViewExampleWindow</name>
    <filename>classListViewExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>LoadJob</name>
    <filename>classLoadJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>LoadManualServiceWorker</name>
    <filename>classLoadManualServiceWorker.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="class">
    <name>LoadThread</name>
    <filename>classLoadThread.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::LocalMinimum</name>
    <filename>structClipperLib_1_1LocalMinimum.html</filename>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::LocMinSorter</name>
    <filename>structClipperLib_1_1LocMinSorter.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LogDevice</name>
    <filename>classDtk_1_1Core_1_1LogDevice.html</filename>
    <base>QIODevice</base>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::Logger</name>
    <filename>classDtk_1_1Core_1_1Logger.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>LogLevel</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a4a76b1db357f61044ed67411d1c378b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Logger</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a8bf632cb87800101031e5c19773cca38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Logger</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>ae2f834f683f7379d92de6e413c5acb8b</anchor>
      <arglist>(const QString &amp;defaultCategory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Logger</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>ab4eea40e26ce45df1c18058f97d1b11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAppender</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a2bcdf12779fa8567bb2079edf027662d</anchor>
      <arglist>(AbstractAppender *appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCategoryAppender</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a95ef2b960342e8153edd908b2f05029c</anchor>
      <arglist>(const QString &amp;category, AbstractAppender *appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logToGlobalInstance</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a87f67b2b6ed4ffec4096ffd5e118beca</anchor>
      <arglist>(const QString &amp;category, bool logToGlobal=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultCategory</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a4a88302ec9c667bc47529d234da516d4</anchor>
      <arglist>(const QString &amp;category)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>defaultCategory</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a4a372bad2146536722eafc6a8c086c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a7c89067d5a040ea79c481038dbdd565f</anchor>
      <arglist>(const QDateTime &amp;time, LogLevel level, const char *file, int line, const char *func, const char *category, const QString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>abc14a059bda2bdb2b22b71e4d6c71ef4</anchor>
      <arglist>(LogLevel level, const char *file, int line, const char *func, const char *category, const QString &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>QDebug</type>
      <name>write</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a7859e553c3fbb0b78802cd78c78389da</anchor>
      <arglist>(LogLevel level, const char *file, int line, const char *func, const char *category)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeAssert</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a2e743f432d95b256c86e6ee5575270ba</anchor>
      <arglist>(const char *file, int line, const char *func, const char *condition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Logger *</type>
      <name>globalInstance</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>af7aa5612396574e4274660fe3c4e307a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QString</type>
      <name>levelToString</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a9cb3cfe90fe951388a00ec2a2a76369d</anchor>
      <arglist>(LogLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LogLevel</type>
      <name>levelFromString</name>
      <anchorfile>classDtk_1_1Core_1_1Logger.html</anchorfile>
      <anchor>a477f08222e3c87f3acf4b9a5da95bc85</anchor>
      <arglist>(const QString &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LoggerPrivate</name>
    <filename>classDtk_1_1Core_1_1LoggerPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::LoggerTimingHelper</name>
    <filename>classDtk_1_1Core_1_1LoggerTimingHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>Login1ManagerInterface</name>
    <filename>classLogin1ManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1ManagerService</name>
    <filename>classLogin1ManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1SeatInterface</name>
    <filename>classLogin1SeatInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1SeatService</name>
    <filename>classLogin1SeatService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1SessionInterface</name>
    <filename>classLogin1SessionInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1SessionService</name>
    <filename>classLogin1SessionService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1UserInterface</name>
    <filename>classLogin1UserInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>Login1UserService</name>
    <filename>classLogin1UserService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>LoginDemo</name>
    <filename>classLoginDemo.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>LoginHistory_p</name>
    <filename>structLoginHistory__p.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Accounts::LoginUtmpx</name>
    <filename>structDtk_1_1Accounts_1_1LoginUtmpx.html</filename>
  </compound>
  <compound kind="struct">
    <name>LoginUtmpx</name>
    <filename>structLoginUtmpx.html</filename>
    <member kind="variable">
      <type>QByteArray</type>
      <name>inittabID</name>
      <anchorfile>structLoginUtmpx.html</anchorfile>
      <anchor>aa998d4c7e011f0c3d7a452cde19076b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>line</name>
      <anchorfile>structLoginUtmpx.html</anchorfile>
      <anchor>a6bf50cd828fe264dd6cf40365e6fe8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>host</name>
      <anchorfile>structLoginUtmpx.html</anchorfile>
      <anchor>a0b81b57f76d2cd6ff3725155599a7685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>address</name>
      <anchorfile>structLoginUtmpx.html</anchorfile>
      <anchor>aedf22fb1c8d60e63d4acf14c34ca797d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>time</name>
      <anchorfile>structLoginUtmpx.html</anchorfile>
      <anchor>a172eaf439e7f9e7d7123da29bf96c3e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LoginUtmpx_p</name>
    <filename>structLoginUtmpx__p.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DTimedLoopPrivate::LoopGuard</name>
    <filename>classDtk_1_1Core_1_1DTimedLoopPrivate_1_1LoopGuard.html</filename>
  </compound>
  <compound kind="class">
    <name>MainComponentPlugin</name>
    <filename>classMainComponentPlugin.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>MainWindow</name>
    <filename>classMainWindow.html</filename>
    <base>QMainWindow</base>
    <base>DMainWindow</base>
    <base>DMainWindow</base>
    <member kind="slot" protection="protected">
      <type>void</type>
      <name>menuItemInvoked</name>
      <anchorfile>classMainWindow.html</anchorfile>
      <anchor>a412e842d3d727cdb70787d6e8b7ab87d</anchor>
      <arglist>(QAction *action)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DtkCorePrivate::MainWorker</name>
    <filename>classDtk_1_1Core_1_1DtkCorePrivate_1_1MainWorker.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>MajorImageProcessingThread</name>
    <filename>classMajorImageProcessingThread.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="struct">
    <name>maptypes</name>
    <filename>structmaptypes.html</filename>
  </compound>
  <compound kind="class">
    <name>MaskEffectNode</name>
    <filename>classMaskEffectNode.html</filename>
  </compound>
  <compound kind="class">
    <name>MaskTextureCache</name>
    <filename>classMaskTextureCache.html</filename>
    <class kind="class">MaskTextureCache::Texture</class>
  </compound>
  <compound kind="class">
    <name>Menu</name>
    <filename>classMenu.html</filename>
  </compound>
  <compound kind="class">
    <name>MenuExampleWindow</name>
    <filename>classMenuExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>MenuItem</name>
    <filename>classMenuItem.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::SystemTime::Message</name>
    <filename>structDtk_1_1SystemTime_1_1Message.html</filename>
  </compound>
  <compound kind="struct">
    <name>Message</name>
    <filename>structMessage.html</filename>
    <member kind="variable">
      <type>quint32</type>
      <name>ntp_field_leap</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a53eaf4dedf9db478f518ce8e2a2e0d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>ntp_field_version</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a585cf311ec604201a3e9a86fb4283a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>ntp_field_mode</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a2672c2e805811a610c52ddca162f94a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint32</type>
      <name>ntp_msg_stratum</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a2c271fbf9c35c1976b26dfa314428b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>ntp_msg_precision</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a03cacb3cd308d3d0227165aa1e509944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>ntp_ts_short_to_usec_delay</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a59aa9c2182b02fd596939c8fba82268a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>ntp_ts_short_to_usec_dispersion</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a676c9fe6f8c5958bee4615d72d21da0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QByteArray</type>
      <name>ntp_msg_refid</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a704eb820ee9b628f4dcb90722eaf0a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>origin_time</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>ae57aa2daea7e4b76022904d2cf3ab7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>ntp_msg_recv_time</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a5869c62c59cc9b32fa6699d5e7af4280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>ntp_msg_trans_time</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a4aea1f6e5ba88f443c7b3c00130b7606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>dest_time</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a8ed9b58fe6e82055698ceea6b71082ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>spike</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>aa479f07d8b546f6728890007697eadcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>packet_count</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a6aa8722571985031154921c83e54154d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>samples_jitter</name>
      <anchorfile>structMessage.html</anchorfile>
      <anchor>a644dacf507ec4b2e9bfbcbdfbcc671b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Message_p</name>
    <filename>structMessage__p.html</filename>
  </compound>
  <compound kind="class">
    <name>MessageLabel</name>
    <filename>classMessageLabel.html</filename>
    <base>QLabel</base>
    <base>QLabel</base>
    <base>QLabel</base>
  </compound>
  <compound kind="class">
    <name>MessageManager</name>
    <filename>classMessageManager.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>mft_entry</name>
    <filename>structmft__entry.html</filename>
  </compound>
  <compound kind="struct">
    <name>DArchiveManager::MgrArchiveData</name>
    <filename>structDArchiveManager_1_1MgrArchiveData.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Compressor::DArchiveManager::MgrArchiveData</name>
    <filename>structDtk_1_1Compressor_1_1DArchiveManager_1_1MgrArchiveData.html</filename>
  </compound>
  <compound kind="struct">
    <name>DArchiveManager::MgrCompressOptions</name>
    <filename>structDArchiveManager_1_1MgrCompressOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Compressor::DArchiveManager::MgrCompressOptions</name>
    <filename>structDtk_1_1Compressor_1_1DArchiveManager_1_1MgrCompressOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>DArchiveManager::MgrExtractionOptions</name>
    <filename>structDArchiveManager_1_1MgrExtractionOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Compressor::DArchiveManager::MgrExtractionOptions</name>
    <filename>structDtk_1_1Compressor_1_1DArchiveManager_1_1MgrExtractionOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>DArchiveManager::MgrFileEntry</name>
    <filename>structDArchiveManager_1_1MgrFileEntry.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Compressor::DArchiveManager::MgrFileEntry</name>
    <filename>structDtk_1_1Compressor_1_1DArchiveManager_1_1MgrFileEntry.html</filename>
  </compound>
  <compound kind="struct">
    <name>DArchiveManager::MgrUpdateOptions</name>
    <filename>structDArchiveManager_1_1MgrUpdateOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Compressor::DArchiveManager::MgrUpdateOptions</name>
    <filename>structDtk_1_1Compressor_1_1DArchiveManager_1_1MgrUpdateOptions.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DSysInfoPrivate::MinVersion</name>
    <filename>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_BC_D</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226ae1a539886af53a82ce6a542f4c9bf024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_Y_Z</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a20fcd66596bb70e1a4a71a79b266b8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_B_C</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a32470f77d16c7fe2479ffb80052c3e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_BC_D</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226ae1a539886af53a82ce6a542f4c9bf024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X_Y_Z</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a20fcd66596bb70e1a4a71a79b266b8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>A_B_C</name>
      <anchorfile>structDtk_1_1Core_1_1DSysInfoPrivate_1_1MinVersion.html</anchorfile>
      <anchor>a7174ad58790178041fe55b391fd20226a32470f77d16c7fe2479ffb80052c3e08</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mkv_context_t</name>
    <filename>structmkv__context__t.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>cluster_pos</name>
      <anchorfile>structmkv__context__t.html</anchorfile>
      <anchor>a7e59258932e4943aff7e36dfffdf2247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mkv_cuepoint_t</name>
    <filename>structmkv__cuepoint__t.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>cluster_pos</name>
      <anchorfile>structmkv__cuepoint__t.html</anchorfile>
      <anchor>a9fe1f50ee81046edf915cea8c1f81533</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>mkv_cues_t</name>
    <filename>structmkv__cues__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>mkv_packet_buff_t</name>
    <filename>structmkv__packet__buff__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>mkv_seekhead_entry_t</name>
    <filename>structmkv__seekhead__entry__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>mkv_seekhead_t</name>
    <filename>structmkv__seekhead__t.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>segment_offset</name>
      <anchorfile>structmkv__seekhead__t.html</anchorfile>
      <anchor>a4187d7e94f439cd3efcc9546d3a2d607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>reserved_size</name>
      <anchorfile>structmkv__seekhead__t.html</anchorfile>
      <anchor>ade4e2743505e63af6901532d62ac1eef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MockDTaskbarControl</name>
    <filename>classMockDTaskbarControl.html</filename>
    <base>DTaskbarControl</base>
  </compound>
  <compound kind="struct">
    <name>ModeMovieInfo</name>
    <filename>structModeMovieInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>MouseAdaptor</name>
    <filename>classMouseAdaptor.html</filename>
  </compound>
  <compound kind="class">
    <name>MouseInterface</name>
    <filename>classMouseInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>MouseService</name>
    <filename>classMouseService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Multimedia::MovieInfo</name>
    <filename>structDtk_1_1Multimedia_1_1MovieInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>MovieInfo</name>
    <filename>structMovieInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>MpvHandle</name>
    <filename>classMpvHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>MultiSingletonTester</name>
    <filename>classMultiSingletonTester.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>XUtils::MwmHints</name>
    <filename>structXUtils_1_1MwmHints.html</filename>
  </compound>
  <compound kind="class">
    <name>Navigation</name>
    <filename>classNavigation.html</filename>
    <base>QFrame</base>
  </compound>
  <compound kind="class">
    <name>NavigationDelegate</name>
    <filename>classNavigationDelegate.html</filename>
    <base>DStyledItemDelegate</base>
  </compound>
  <compound kind="class">
    <name>NavigationPrivate</name>
    <filename>classNavigationPrivate.html</filename>
  </compound>
  <compound kind="struct">
    <name>core::system::net_ifaddr_t</name>
    <filename>structcore_1_1system_1_1net__ifaddr__t.html</filename>
  </compound>
  <compound kind="class">
    <name>Netlink</name>
    <filename>classNetlink.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::NetworkManager::NewConn</name>
    <filename>structDtk_1_1NetworkManager_1_1NewConn.html</filename>
  </compound>
  <compound kind="struct">
    <name>NewConn</name>
    <filename>structNewConn.html</filename>
    <member kind="variable">
      <type>quint64</type>
      <name>settingId</name>
      <anchorfile>structNewConn.html</anchorfile>
      <anchor>ab1cdce3c43c6d4350542a50c5f946e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>quint64</type>
      <name>activeConnId</name>
      <anchorfile>structNewConn.html</anchorfile>
      <anchor>ad2721cf7d673fb14b32ad52958176431</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NewStr</name>
    <filename>structNewStr.html</filename>
  </compound>
  <compound kind="class">
    <name>NLAddr</name>
    <filename>classNLAddr.html</filename>
  </compound>
  <compound kind="class">
    <name>NLHWAddr</name>
    <filename>classNLHWAddr.html</filename>
  </compound>
  <compound kind="class">
    <name>NLLink</name>
    <filename>classNLLink.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DDciFilePrivate::Node</name>
    <filename>structDtk_1_1Core_1_1DDciFilePrivate_1_1Node.html</filename>
  </compound>
  <compound kind="struct">
    <name>nodeAutofree</name>
    <filename>structnodeAutofree.html</filename>
  </compound>
  <compound kind="struct">
    <name>DEnumeratorPrivate::NormalFutureAsyncOp</name>
    <filename>structDEnumeratorPrivate_1_1NormalFutureAsyncOp.html</filename>
  </compound>
  <compound kind="struct">
    <name>DFileInfoPrivate::NormalFutureAsyncOp</name>
    <filename>structDFileInfoPrivate_1_1NormalFutureAsyncOp.html</filename>
  </compound>
  <compound kind="struct">
    <name>DFileOperatorPrivate::NormalFutureAsyncOp</name>
    <filename>structDFileOperatorPrivate_1_1NormalFutureAsyncOp.html</filename>
  </compound>
  <compound kind="struct">
    <name>DFilePrivate::NormalFutureAsyncOp</name>
    <filename>structDFilePrivate_1_1NormalFutureAsyncOp.html</filename>
  </compound>
  <compound kind="class">
    <name>nsBig5Prober</name>
    <filename>classnsBig5Prober.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsCharSetProber</name>
    <filename>classnsCharSetProber.html</filename>
  </compound>
  <compound kind="class">
    <name>nsCodingStateMachine</name>
    <filename>classnsCodingStateMachine.html</filename>
  </compound>
  <compound kind="class">
    <name>nsEscCharSetProber</name>
    <filename>classnsEscCharSetProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsEUCJPProber</name>
    <filename>classnsEUCJPProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsEUCKRProber</name>
    <filename>classnsEUCKRProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsEUCTWProber</name>
    <filename>classnsEUCTWProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsGB18030Prober</name>
    <filename>classnsGB18030Prober.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsHebrewProber</name>
    <filename>classnsHebrewProber.html</filename>
    <base>nsCharSetProber</base>
    <member kind="function" virtualness="virtual">
      <type>virtual nsProbingState</type>
      <name>HandleData</name>
      <anchorfile>classnsHebrewProber.html</anchorfile>
      <anchor>a0e5269dc6905e5b5b081921a2b8824b5</anchor>
      <arglist>(const char *aBuf, PRUint32 aLen)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nsLatin1Prober</name>
    <filename>classnsLatin1Prober.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsMBCSGroupProber</name>
    <filename>classnsMBCSGroupProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="struct">
    <name>nsPkgInt</name>
    <filename>structnsPkgInt.html</filename>
  </compound>
  <compound kind="class">
    <name>nsSBCSGroupProber</name>
    <filename>classnsSBCSGroupProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsSingleByteCharSetProber</name>
    <filename>classnsSingleByteCharSetProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsSJISProber</name>
    <filename>classnsSJISProber.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>nsUniversalDetector</name>
    <filename>classnsUniversalDetector.html</filename>
  </compound>
  <compound kind="class">
    <name>nsUTF8Prober</name>
    <filename>classnsUTF8Prober.html</filename>
    <base>nsCharSetProber</base>
  </compound>
  <compound kind="class">
    <name>DPrintPreviewWidgetPrivate::NumberUpData::NumberItem</name>
    <filename>classDPrintPreviewWidgetPrivate_1_1NumberUpData_1_1NumberItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="struct">
    <name>DPrintPreviewWidgetPrivate::NumberUpData</name>
    <filename>structDPrintPreviewWidgetPrivate_1_1NumberUpData.html</filename>
    <class kind="class">DPrintPreviewWidgetPrivate::NumberUpData::NumberItem</class>
    <class kind="struct">DPrintPreviewWidgetPrivate::NumberUpData::WaterMarkProperty</class>
  </compound>
  <compound kind="class">
    <name>Object</name>
    <filename>classObject.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>ObjectModelProxy</name>
    <filename>classObjectModelProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>ObjectModelProxyPrivate</name>
    <filename>classObjectModelProxyPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>OnlineSubtitle</name>
    <filename>classOnlineSubtitle.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>OpaqueTextureMaterial</name>
    <filename>classOpaqueTextureMaterial.html</filename>
  </compound>
  <compound kind="class">
    <name>OpaqueTextureMaterialShader</name>
    <filename>classOpaqueTextureMaterialShader.html</filename>
  </compound>
  <compound kind="class">
    <name>OpenJob</name>
    <filename>classOpenJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DSysInfoPrivate::OSBuild</name>
    <filename>structDtk_1_1Core_1_1DSysInfoPrivate_1_1OSBuild.html</filename>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::OutPt</name>
    <filename>structClipperLib_1_1OutPt.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::OutputDebugAppender</name>
    <filename>classDtk_1_1Core_1_1OutputDebugAppender.html</filename>
    <base>Dtk::Core::AbstractStringAppender</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>append</name>
      <anchorfile>classDtk_1_1Core_1_1OutputDebugAppender.html</anchorfile>
      <anchor>a967ccfa7b072aed5e4740bfcf5971b91</anchor>
      <arglist>(const QDateTime &amp;time, Logger::LogLevel level, const char *file, int line, const char *func, const QString &amp;category, const QString &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OutputStream</name>
    <filename>structOutputStream.html</filename>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::OutRec</name>
    <filename>structClipperLib_1_1OutRec.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::DVtableHook::OverrideDestruct</name>
    <filename>classDtk_1_1Core_1_1DVtableHook_1_1OverrideDestruct.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>core::system::packet_payload_t</name>
    <filename>structcore_1_1system_1_1packet__payload__t.html</filename>
  </compound>
  <compound kind="class">
    <name>PaddleOCRApp</name>
    <filename>classPaddleOCRApp.html</filename>
  </compound>
  <compound kind="class">
    <name>PageItem</name>
    <filename>classPageItem.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="class">
    <name>PageWindowInterface</name>
    <filename>classPageWindowInterface.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>PasswordEdit</name>
    <filename>classPasswordEdit.html</filename>
  </compound>
  <compound kind="struct">
    <name>pci_dev</name>
    <filename>structpci__dev.html</filename>
  </compound>
  <compound kind="struct">
    <name>pci_entry</name>
    <filename>structpci__entry.html</filename>
  </compound>
  <compound kind="class">
    <name>PersistentManager</name>
    <filename>classPersistentManager.html</filename>
    <base>QObject</base>
    <class kind="struct">PersistentManager::CacheInfo</class>
  </compound>
  <compound kind="class">
    <name>PlatformChecker</name>
    <filename>classPlatformChecker.html</filename>
  </compound>
  <compound kind="class">
    <name>Player</name>
    <filename>classPlayer.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type></type>
      <name>Player</name>
      <anchorfile>classPlayer.html</anchorfile>
      <anchor>a7920f62a9d7aa36726490ecb9f0cd4b9</anchor>
      <arglist>(QWidget *parent=nullptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlayerControls</name>
    <filename>classPlayerControls.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>PlayerEngine</name>
    <filename>classPlayerEngine.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type>QList&lt; QUrl &gt;</type>
      <name>addPlayFiles</name>
      <anchorfile>classPlayerEngine.html</anchorfile>
      <anchor>a6ec379e112ec99c7b36356ca04d1bfcc</anchor>
      <arglist>(const QList&lt; QString &gt; &amp;lstFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPlayFs</name>
      <anchorfile>classPlayerEngine.html</anchorfile>
      <anchor>a6309d2040d71ca5c40e87eb3f7b09372</anchor>
      <arglist>(const QList&lt; QString &gt; &amp;lstFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayableFile</name>
      <anchorfile>classPlayerEngine.html</anchorfile>
      <anchor>a9146fe83c701236aa4b530bb34088bb6</anchor>
      <arglist>(const QUrl &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayableFile</name>
      <anchorfile>classPlayerEngine.html</anchorfile>
      <anchor>ab2a9f771a5fcc967a4749c33b824a735</anchor>
      <arglist>(const QString &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlayerWidget</name>
    <filename>classPlayerWidget.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="struct">
    <name>PlayingMovieInfo</name>
    <filename>structPlayingMovieInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>PlayItemInfo</name>
    <filename>structPlayItemInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>PlaylistModel</name>
    <filename>classPlaylistModel.html</filename>
    <base>QAbstractItemModel</base>
  </compound>
  <compound kind="class">
    <name>Plugin</name>
    <filename>classPlugin.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>PluginManager</name>
    <filename>classPluginManager.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>pmac_mb_def</name>
    <filename>structpmac__mb__def.html</filename>
  </compound>
  <compound kind="struct">
    <name>Pop</name>
    <filename>structPop.html</filename>
  </compound>
  <compound kind="class">
    <name>PopupMenuStyle</name>
    <filename>classPopupMenuStyle.html</filename>
    <base>QProxyStyle</base>
  </compound>
  <compound kind="class">
    <name>PopupWindow</name>
    <filename>classPopupWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>PaddleOCR::PostProcessor</name>
    <filename>classPaddleOCR_1_1PostProcessor.html</filename>
  </compound>
  <compound kind="class">
    <name>PowerDemo</name>
    <filename>classPowerDemo.html</filename>
    <base>LoginDemo</base>
  </compound>
  <compound kind="class">
    <name>PreloadPlugin</name>
    <filename>classPreloadPlugin.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>PreprocessNode</name>
    <filename>classPreprocessNode.html</filename>
  </compound>
  <compound kind="class">
    <name>PreviewOpenglWidget</name>
    <filename>classPreviewOpenglWidget.html</filename>
    <base>QOpenGLWidget</base>
    <base protection="protected">QOpenGLFunctions</base>
    <member kind="slot">
      <type>void</type>
      <name>slotShowYuv</name>
      <anchorfile>classPreviewOpenglWidget.html</anchorfile>
      <anchor>a403f2c8ac990b6b631284cedd6191bcd</anchor>
      <arglist>(uchar *ptr, uint width, uint height)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFrameHeight</name>
      <anchorfile>classPreviewOpenglWidget.html</anchorfile>
      <anchor>a84c66d0c8241981d4e2673c1717aaaa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFrameWidth</name>
      <anchorfile>classPreviewOpenglWidget.html</anchorfile>
      <anchor>a7e3f402ca29014e0b8d3ea9cfd57c883</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeGL</name>
      <anchorfile>classPreviewOpenglWidget.html</anchorfile>
      <anchor>aa277d0e6574576a649c7a2a52079d21a</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resizeGL</name>
      <anchorfile>classPreviewOpenglWidget.html</anchorfile>
      <anchor>a3226742deae6b44b91652169bc84aaee</anchor>
      <arglist>(int w, int h) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintGL</name>
      <anchorfile>classPreviewOpenglWidget.html</anchorfile>
      <anchor>aaea2d3b96feca9e7b065e0f3d3ba4a19</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PreviewSettingsPluginHelper</name>
    <filename>classPreviewSettingsPluginHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>PrintPreviewSettingsPlugin</name>
    <filename>classPrintPreviewSettingsPlugin.html</filename>
    <base>QObject</base>
    <base>DPrintPreviewSettingInterface</base>
  </compound>
  <compound kind="struct">
    <name>processInfo</name>
    <filename>structprocessInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>ProcessOpenThread</name>
    <filename>classProcessOpenThread.html</filename>
    <base>QThread</base>
  </compound>
  <compound kind="struct">
    <name>DThumbnailProviderPrivate::ProduceInfo</name>
    <filename>structDThumbnailProviderPrivate_1_1ProduceInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>ProgressBar</name>
    <filename>classProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ProgressBarExampleWindow</name>
    <filename>classProgressBarExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DBURN_BEGIN_NAMESPACE::ProgressInfo</name>
    <filename>structDBURN__BEGIN__NAMESPACE_1_1ProgressInfo.html</filename>
  </compound>
  <compound kind="class">
    <name>PropertyDemo</name>
    <filename>classPropertyDemo.html</filename>
    <base>LoginDemo</base>
  </compound>
  <compound kind="class">
    <name>ProxyAtlasTexture</name>
    <filename>classProxyAtlasTexture.html</filename>
  </compound>
  <compound kind="struct">
    <name>pv_header</name>
    <filename>structpv__header.html</filename>
  </compound>
  <compound kind="class">
    <name>QmlpluginPlugin</name>
    <filename>classQmlpluginPlugin.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::QSettingBackend</name>
    <filename>classDtk_1_1Core_1_1QSettingBackend.html</filename>
    <base>Dtk::Core::DSettingsBackend</base>
    <member kind="function">
      <type></type>
      <name>QSettingBackend</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>aca442d9d70d96f2dcee724f3db6d635c</anchor>
      <arglist>(const QString &amp;filepath, QObject *parent=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QStringList</type>
      <name>keys</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>a605acf726ee9b734f7ee722aa24f7cb5</anchor>
      <arglist>() const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual QVariant</type>
      <name>getOption</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>ac008653f5d4364c32f39d41df46849e7</anchor>
      <arglist>(const QString &amp;key) const Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSetOption</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>ad485cbd3df7ec18fd272d04d6908f31d</anchor>
      <arglist>(const QString &amp;key, const QVariant &amp;value) Q_DECL_OVERRIDE</arglist>
    </member>
    <member kind="slot" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>doSync</name>
      <anchorfile>classDtk_1_1Core_1_1QSettingBackend.html</anchorfile>
      <anchor>a48f2d2eb49c33a556b51a9a24bbc8ac5</anchor>
      <arglist>() Q_DECL_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::QSettingBackendPrivate</name>
    <filename>classDtk_1_1Core_1_1QSettingBackendPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>QtQuickControls2ChameleonStylePlugin</name>
    <filename>classQtQuickControls2ChameleonStylePlugin.html</filename>
  </compound>
  <compound kind="class">
    <name>RadioButton</name>
    <filename>classRadioButton.html</filename>
  </compound>
  <compound kind="struct">
    <name>DFilePrivate::ReadAllAsyncFutureOp</name>
    <filename>structDFilePrivate_1_1ReadAllAsyncFutureOp.html</filename>
  </compound>
  <compound kind="class">
    <name>ReadOnlyArchiveInterface</name>
    <filename>classReadOnlyArchiveInterface.html</filename>
    <base>QObject</base>
    <member kind="signal">
      <type>void</type>
      <name>signalFinished</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a73f76acfde5179fd4fec29a5835e9700</anchor>
      <arglist>(PluginFinishType eType)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalprogress</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a06681456655fd7670c10906008b52227</anchor>
      <arglist>(double dPercentage)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalCurFileName</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a09b61c02458a2b4b8da69fec1938c56d</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalFileWriteErrorName</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a5e353419dc57169749f2c02a435efc00</anchor>
      <arglist>(const QString &amp;filename)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>signalCancel</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>ad02c0b5a63f2d9fb713d3bcbb045939d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>list</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a873da184844ffc4112e024c89a8d214a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>testArchive</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>aa3c05dc7ef74efddc2c58245a9d8ded3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>extractFiles</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a08e59beb516c2e1fe1a0dd5874bfe58c</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const ExtractionOptions &amp;options)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>waitForFinished</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a1f7826b3f081795afc8e381a552e2f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPassword</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a7e9a22bbf118dc928ca86a4dcb041001</anchor>
      <arglist>(const QString &amp;strPassword)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getPassword</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>aa7fd45b39c7583d3296048bcbe692975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ErrorType</type>
      <name>errorType</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a8fd5d18cf575c632780afd63183c4844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pauseOperation</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a1854dc9ac2e9f311df49ddc76376a3a2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>continueOperation</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>ab45b5da3cac8bbcb747774757612cd51</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>doKill</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>aa874e38172fd4987277052077c744820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>status</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a5f5d2a408c9cf6f2e3cb0bd6f0af2851</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setWaitForFinishedSignal</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>ab0254c92375e59468d25bd254f1245cd</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>QFileDevice::Permissions</type>
      <name>getPermissions</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a1a8d229a9efbad722d4f43e75edeebef</anchor>
      <arglist>(const mode_t &amp;perm)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleEntry</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>ae3f1064131c8922c651036d51b1cdf63</anchor>
      <arglist>(const FileEntry &amp;entry)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isInsufficientDiskSpace</name>
      <anchorfile>classReadOnlyArchiveInterface.html</anchorfile>
      <anchor>a7bb981cb239c4c7057bfbbf0b425ef87</anchor>
      <arglist>(QString diskPath, qint64 standard=10 *1024 *1024)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ReadOnlyLibarchivePlugin</name>
    <filename>classReadOnlyLibarchivePlugin.html</filename>
    <base>LibarchivePlugin</base>
  </compound>
  <compound kind="class">
    <name>ReadOnlyLibarchivePluginFactory</name>
    <filename>classReadOnlyLibarchivePluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>ReadWriteArchiveInterface</name>
    <filename>classReadWriteArchiveInterface.html</filename>
    <base>ReadOnlyArchiveInterface</base>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>addFiles</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>a13ba5d77d631bde463c412058efeaa46</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>moveFiles</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>ace52be15b86b70f5302388567d662d8c</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>copyFiles</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>ad67e19d046dc564269afcf8c5d892f6f</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>deleteFiles</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>a5fb6467d52d90fabbc1c17d7df1f6978</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>renameFiles</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>a49dc1515509d7723a20f5478221a382e</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>addComment</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>a1c073d96a0079ed4fda8cb48a461df69</anchor>
      <arglist>(const QString &amp;comment)=0</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>getArchiveName</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>a17b3f001e4bb2e0f9c02a66136576922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginFinishType</type>
      <name>updateArchiveData</name>
      <anchorfile>classReadWriteArchiveInterface.html</anchorfile>
      <anchor>af58e8cc304542df17fcdb14d138b4d8c</anchor>
      <arglist>(const UpdateOptions &amp;options)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ReadWriteLibarchivePlugin</name>
    <filename>classReadWriteLibarchivePlugin.html</filename>
    <base>LibarchivePlugin</base>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>addFiles</name>
      <anchorfile>classReadWriteLibarchivePlugin.html</anchorfile>
      <anchor>a115a7d83edd81c5c356373cc3e5f8c48</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files, const CompressOptions &amp;options) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>deleteFiles</name>
      <anchorfile>classReadWriteLibarchivePlugin.html</anchorfile>
      <anchor>ad7918165283ddf16cbdbf6b3937c533f</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
    <member kind="function">
      <type>PluginFinishType</type>
      <name>renameFiles</name>
      <anchorfile>classReadWriteLibarchivePlugin.html</anchorfile>
      <anchor>a117bf2c1eb884bc52ec2556b36cfc404</anchor>
      <arglist>(const QList&lt; FileEntry &gt; &amp;files) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ReadWriteLibarchivePluginFactory</name>
    <filename>classReadWriteLibarchivePluginFactory.html</filename>
    <base>KPluginFactory</base>
  </compound>
  <compound kind="class">
    <name>RecommandButton</name>
    <filename>classRecommandButton.html</filename>
  </compound>
  <compound kind="struct">
    <name>reg_entry</name>
    <filename>structreg__entry.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Accounts::ReminderInfo</name>
    <filename>structDtk_1_1Accounts_1_1ReminderInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>ReminderInfo</name>
    <filename>structReminderInfo.html</filename>
    <member kind="variable">
      <type>QByteArray</type>
      <name>userName</name>
      <anchorfile>structReminderInfo.html</anchorfile>
      <anchor>a230f02e4529a82883eeae95e393880df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ShadowInfo</type>
      <name>spent</name>
      <anchorfile>structReminderInfo.html</anchorfile>
      <anchor>ad65255817d439ffb1d2962e0146f6b53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoginUtmpx</type>
      <name>currentLogin</name>
      <anchorfile>structReminderInfo.html</anchorfile>
      <anchor>adc5662eeb271ab316fe865bc8439a711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoginUtmpx</type>
      <name>lastLogin</name>
      <anchorfile>structReminderInfo.html</anchorfile>
      <anchor>afd4ba59d8fc4f6ef66460438e462181b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>failCountSinceLastLogin</name>
      <anchorfile>structReminderInfo.html</anchorfile>
      <anchor>aad6d39bf185d2c4d87ab5b39ddf30dc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ReminderInfo_p</name>
    <filename>structReminderInfo__p.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::remove_cvref</name>
    <filename>structDtk_1_1Core_1_1remove__cvref.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>RenameJob</name>
    <filename>classRenameJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="class">
    <name>hw::resource</name>
    <filename>classhw_1_1resource.html</filename>
  </compound>
  <compound kind="struct">
    <name>hw::resource_i</name>
    <filename>structhw_1_1resource__i.html</filename>
  </compound>
  <compound kind="class">
    <name>RfDemo</name>
    <filename>classRfDemo.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>DRfmanager::RfDevice</name>
    <filename>structDRfmanager_1_1RfDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Core::RollingFileAppender</name>
    <filename>classDtk_1_1Core_1_1RollingFileAppender.html</filename>
    <base>Dtk::Core::FileAppender</base>
    <member kind="enumeration">
      <type></type>
      <name>DatePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a993d4921afa93843ed79e7ea89722c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RollingFileAppender</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>ac4519e8fc7d10290b47974bea7e7cf4e</anchor>
      <arglist>(const QString &amp;fileName=QString())</arglist>
    </member>
    <member kind="function">
      <type>DatePattern</type>
      <name>datePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a54dcf2d38b87ec6cae557560bb6179f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a94e06d3cb5f6d1f4ce1a771572fde646</anchor>
      <arglist>(DatePattern datePattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatePattern</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a13ad1aa32a3d460291a1a355e96a4cae</anchor>
      <arglist>(const QString &amp;datePattern)</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>datePatternString</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>acb2ff71acbb48d3281f2ad75892f736c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFilesLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a2f91ea75f3b4ba0cacbdd6e013718428</anchor>
      <arglist>(int limit)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>logFilesLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a99d3343d001eb337e95441803f2117a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogSizeLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a507bb5a3694cb91570d18560d842bd24</anchor>
      <arglist>(int limit)</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>logSizeLimit</name>
      <anchorfile>classDtk_1_1Core_1_1RollingFileAppender.html</anchorfile>
      <anchor>a7500ec2fcaeee4c629ba344cc8f790e1</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RSvg</name>
    <filename>classRSvg.html</filename>
  </compound>
  <compound kind="class">
    <name>RubberBandExampleWindow</name>
    <filename>classRubberBandExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DDciIconEntry::ScalableLayer</name>
    <filename>structDDciIconEntry_1_1ScalableLayer.html</filename>
    <class kind="struct">DDciIconEntry::ScalableLayer::Layer</class>
  </compound>
  <compound kind="struct">
    <name>Dtk::Login::ScheduledShutdownValue</name>
    <filename>structDtk_1_1Login_1_1ScheduledShutdownValue.html</filename>
  </compound>
  <compound kind="struct">
    <name>ScheduledShutdownValue</name>
    <filename>structScheduledShutdownValue.html</filename>
    <member kind="variable">
      <type>ShutdownType</type>
      <name>type</name>
      <anchorfile>structScheduledShutdownValue.html</anchorfile>
      <anchor>ae8ed2f29b0a68e7146af122b84940c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QDateTime</type>
      <name>time</name>
      <anchorfile>structScheduledShutdownValue.html</anchorfile>
      <anchor>a38b58a492c3075b71c25e2ea81e58f9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ScheduleShutdownParam</name>
    <filename>structScheduleShutdownParam.html</filename>
  </compound>
  <compound kind="class">
    <name>ScrollBarExampleWindow</name>
    <filename>classScrollBarExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>SequenceModel</name>
    <filename>structSequenceModel.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Notifications::ServerInformation</name>
    <filename>structDtk_1_1Notifications_1_1ServerInformation.html</filename>
  </compound>
  <compound kind="struct">
    <name>ServerInformation</name>
    <filename>structServerInformation.html</filename>
    <member kind="variable">
      <type>QString</type>
      <name>name</name>
      <anchorfile>structServerInformation.html</anchorfile>
      <anchor>aa9acc05438ad3a71b6c373b4668cdf45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>vendor</name>
      <anchorfile>structServerInformation.html</anchorfile>
      <anchor>a347e6b74463338500e13a280b6d13893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>version</name>
      <anchorfile>structServerInformation.html</anchorfile>
      <anchor>ad7c22f0a5862107867018c0e5f80ecb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>spec_version</name>
      <anchorfile>structServerInformation.html</anchorfile>
      <anchor>a060facc6b348fc22d3ba02e95556f162</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SessionClassParam</name>
    <filename>structSessionClassParam.html</filename>
  </compound>
  <compound kind="class">
    <name>SessionManagerInterface</name>
    <filename>classSessionManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>SessionManagerService</name>
    <filename>classSessionManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>SessionStateParam</name>
    <filename>structSessionStateParam.html</filename>
  </compound>
  <compound kind="struct">
    <name>SessionTypeParam</name>
    <filename>structSessionTypeParam.html</filename>
  </compound>
  <compound kind="class">
    <name>SettingsCompositor</name>
    <filename>classSettingsCompositor.html</filename>
  </compound>
  <compound kind="class">
    <name>SettingsContainer</name>
    <filename>classSettingsContainer.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>SettingsContentModel</name>
    <filename>classSettingsContentModel.html</filename>
    <base>SettingsInstanceModel</base>
  </compound>
  <compound kind="class">
    <name>SettingsGroup</name>
    <filename>classSettingsGroup.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>SettingsInstanceModel</name>
    <filename>classSettingsInstanceModel.html</filename>
  </compound>
  <compound kind="class">
    <name>SettingsInstanceModelPrivate</name>
    <filename>classSettingsInstanceModelPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>SettingsNavigationModel</name>
    <filename>classSettingsNavigationModel.html</filename>
    <base>SettingsInstanceModel</base>
  </compound>
  <compound kind="class">
    <name>SettingsOption</name>
    <filename>classSettingsOption.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>DQuickShadowProvider::ShadowConfig</name>
    <filename>structDQuickShadowProvider_1_1ShadowConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>ShadowImage</name>
    <filename>classShadowImage.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Accounts::ShadowInfo</name>
    <filename>structDtk_1_1Accounts_1_1ShadowInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>ShadowInfo</name>
    <filename>structShadowInfo.html</filename>
    <member kind="variable">
      <type>qint32</type>
      <name>lastChange</name>
      <anchorfile>structShadowInfo.html</anchorfile>
      <anchor>ad62e480f66876891546c2cabad190b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>min</name>
      <anchorfile>structShadowInfo.html</anchorfile>
      <anchor>ad5ea47fd211f9384edd310370e90200c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>max</name>
      <anchorfile>structShadowInfo.html</anchorfile>
      <anchor>abfa94bca1d2ec1b61176c6c05c809d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>warn</name>
      <anchorfile>structShadowInfo.html</anchorfile>
      <anchor>a6a5bc4a6323fb2e7b6e9012474685745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>inactive</name>
      <anchorfile>structShadowInfo.html</anchorfile>
      <anchor>a075522480ed574a2fee068ddd0d18d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>expired</name>
      <anchorfile>structShadowInfo.html</anchorfile>
      <anchor>a47cbeb4cd58f8e780965f34365a5186c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ShadowInfo_p</name>
    <filename>structShadowInfo__p.html</filename>
  </compound>
  <compound kind="class">
    <name>ShadowMaterial</name>
    <filename>classShadowMaterial.html</filename>
  </compound>
  <compound kind="class">
    <name>ShadowMaterialShader</name>
    <filename>classShadowMaterialShader.html</filename>
  </compound>
  <compound kind="class">
    <name>ShadowNode</name>
    <filename>classShadowNode.html</filename>
  </compound>
  <compound kind="struct">
    <name>ShadowVertex</name>
    <filename>structShadowVertex.html</filename>
  </compound>
  <compound kind="struct">
    <name>ShooterSubtitleMeta</name>
    <filename>structShooterSubtitleMeta.html</filename>
  </compound>
  <compound kind="class">
    <name>ShortcutEdit</name>
    <filename>classShortcutEdit.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>ShortcutEditPrivate</name>
    <filename>classShortcutEditPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>SignalDemo</name>
    <filename>classSignalDemo.html</filename>
    <base>LoginDemo</base>
  </compound>
  <compound kind="class">
    <name>SingleJob</name>
    <filename>classSingleJob.html</filename>
    <base>ArchiveJob</base>
  </compound>
  <compound kind="class">
    <name>SingleJobThread</name>
    <filename>classSingleJobThread.html</filename>
    <base>QThread</base>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classSingleJobThread.html</anchorfile>
      <anchor>ad8cf1d27656a6e57049debcf169b9675</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Singleton</name>
    <filename>classSingleton.html</filename>
    <base>QObject</base>
    <base>DSingleton&lt; Singleton &gt;</base>
  </compound>
  <compound kind="class">
    <name>SJISContextAnalysis</name>
    <filename>classSJISContextAnalysis.html</filename>
    <base>JapaneseContextAnalysis</base>
  </compound>
  <compound kind="class">
    <name>SJISDistributionAnalysis</name>
    <filename>classSJISDistributionAnalysis.html</filename>
    <base>CharDistributionAnalysis</base>
  </compound>
  <compound kind="class">
    <name>Slider</name>
    <filename>classSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>SliderExampleWindow</name>
    <filename>classSliderExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>SliderStrip</name>
    <filename>classSliderStrip.html</filename>
    <base>QWidget</base>
    <member kind="function">
      <type>void</type>
      <name>setScaleInfo</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>a6a195422bfab5d454cf7c0c8aa7a6d4d</anchor>
      <arglist>(QStringList scaleInfo, QSlider::TickPosition tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkList</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>a3e1041cc8fa08b850208047868cac9c9</anchor>
      <arglist>(QList&lt; int &gt; list, QSlider::TickPosition tickPosition)</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; int &gt;</type>
      <name>getList</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>aaa9f2b779d3f48162f5cac5446ab1cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QStringList</type>
      <name>getScaleInfo</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>aff02103dd3d03b60ab1948ae0808cc71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>paintEvent</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>a76d370c312915c30471f13d18525cf2f</anchor>
      <arglist>(QPaintEvent *event) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>event</name>
      <anchorfile>classSliderStrip.html</anchorfile>
      <anchor>ae8148ce8b19e5f348b3addac0337166a</anchor>
      <arglist>(QEvent *e) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDisks2::SmartAttribute</name>
    <filename>structUDisks2_1_1SmartAttribute.html</filename>
  </compound>
  <compound kind="struct">
    <name>SMModel</name>
    <filename>structSMModel.html</filename>
  </compound>
  <compound kind="struct">
    <name>sock_io_stat_t</name>
    <filename>structsock__io__stat__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>core::system::sock_stat_t</name>
    <filename>structcore_1_1system_1_1sock__stat__t.html</filename>
  </compound>
  <compound kind="class">
    <name>SoftwareRenderNode</name>
    <filename>classSoftwareRenderNode.html</filename>
    <base>DBlitFramebufferNode</base>
  </compound>
  <compound kind="class">
    <name>SortProxy</name>
    <filename>classSortProxy.html</filename>
    <base>QSortFilterProxyModel</base>
  </compound>
  <compound kind="struct">
    <name>source</name>
    <filename>structsource.html</filename>
  </compound>
  <compound kind="class">
    <name>SpecialSlider</name>
    <filename>classSpecialSlider.html</filename>
    <base>QSlider</base>
  </compound>
  <compound kind="class">
    <name>SpinnerExampleWindow</name>
    <filename>classSpinnerExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>StartManagerInterface</name>
    <filename>classStartManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>StartManagerService</name>
    <filename>classStartManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>StartupNotificationMonitor</name>
    <filename>classStartupNotificationMonitor.html</filename>
    <base>QObject</base>
    <base>QAbstractNativeEventFilter</base>
    <member kind="signal">
      <type>void</type>
      <name>appStartup</name>
      <anchorfile>classStartupNotificationMonitor.html</anchorfile>
      <anchor>a551bf6841ac14f3d60161ef45eba88a1</anchor>
      <arglist>(QString id)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>appStartupCompleted</name>
      <anchorfile>classStartupNotificationMonitor.html</anchorfile>
      <anchor>a8f80fb06c0a8ced61184e2b693ce3ba9</anchor>
      <arglist>(QString id)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StartupNotificationMonitorSub</name>
    <filename>classStartupNotificationMonitorSub.html</filename>
    <base>StartupNotificationMonitor</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Power::Statistic</name>
    <filename>structDtk_1_1Power_1_1Statistic.html</filename>
  </compound>
  <compound kind="struct">
    <name>Statistic</name>
    <filename>structStatistic.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structStatistic.html</anchorfile>
      <anchor>a925e20c92fff895b7dd76832f26d82ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>accuracy</name>
      <anchorfile>structStatistic.html</anchorfile>
      <anchor>a7e4fc398f0f632f2782c0e8cbf2ecb65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Statistic_p</name>
    <filename>structStatistic__p.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::StdFunWrap</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1StdFunWrap.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...) const &gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1StdFunWrap_3_01StdFun_00_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
    <base>Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...)&gt;</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DVtableHook::StdFunWrap&lt; StdFun, Ret(Obj::*)(Args...)&gt;</name>
    <filename>structDtk_1_1Core_1_1DVtableHook_1_1StdFunWrap_3_01StdFun_00_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>stdinfo</name>
    <filename>structstdinfo.html</filename>
  </compound>
  <compound kind="class">
    <name>StepExtractJob</name>
    <filename>classStepExtractJob.html</filename>
    <base>ComplexJob</base>
  </compound>
  <compound kind="class">
    <name>Stub</name>
    <filename>classStub.html</filename>
  </compound>
  <compound kind="class">
    <name>stub_ext::StubExt</name>
    <filename>classstub__ext_1_1StubExt.html</filename>
    <base>Stub</base>
    <base>Stub</base>
    <base>Stub</base>
  </compound>
  <compound kind="class">
    <name>StyledBehindWindowBlur</name>
    <filename>classStyledBehindWindowBlur.html</filename>
  </compound>
  <compound kind="struct">
    <name>SubtitleProvider</name>
    <filename>structSubtitleProvider.html</filename>
  </compound>
  <compound kind="struct">
    <name>SupportFormats</name>
    <filename>structSupportFormats.html</filename>
  </compound>
  <compound kind="struct">
    <name>sysfs_t</name>
    <filename>structsysfs__t.html</filename>
  </compound>
  <compound kind="class">
    <name>SystemPowerInterface</name>
    <filename>classSystemPowerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::NetworkManager::SystemProxyAddr</name>
    <filename>structDtk_1_1NetworkManager_1_1SystemProxyAddr.html</filename>
  </compound>
  <compound kind="struct">
    <name>SystemProxyAddr</name>
    <filename>structSystemProxyAddr.html</filename>
    <member kind="variable">
      <type>quint32</type>
      <name>port</name>
      <anchorfile>structSystemProxyAddr.html</anchorfile>
      <anchor>a3bb166e3ae5bef455a9a4410e10332ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>host</name>
      <anchorfile>structSystemProxyAddr.html</anchorfile>
      <anchor>a13995c0eeea327ccd1c53596f95701b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>systypes</name>
    <filename>structsystypes.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_AudioDescriptor</name>
    <filename>structT__AudioDescriptor.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_EdidAudioData</name>
    <filename>structT__EdidAudioData.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_EdidVideoData</name>
    <filename>structT__EdidVideoData.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_TimingInfo</name>
    <filename>structT__TimingInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_TimingMap</name>
    <filename>structT__TimingMap.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_Vsdb1Content</name>
    <filename>structT__Vsdb1Content.html</filename>
  </compound>
  <compound kind="struct">
    <name>T_Vsdb2Content</name>
    <filename>structT__Vsdb2Content.html</filename>
  </compound>
  <compound kind="struct">
    <name>DTabBarPrivate::TabBarAnimation</name>
    <filename>structDTabBarPrivate_1_1TabBarAnimation.html</filename>
    <base>QVariantAnimation</base>
  </compound>
  <compound kind="class">
    <name>TDFontManager</name>
    <filename>classTDFontManager.html</filename>
    <base>DTestWithParam&lt; int &gt;</base>
  </compound>
  <compound kind="class">
    <name>TDForeignWindow</name>
    <filename>classTDForeignWindow.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDGuiApplicationHelper</name>
    <filename>classTDGuiApplicationHelper.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDImageHandler</name>
    <filename>classTDImageHandler.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDPalette</name>
    <filename>classTDPalette.html</filename>
    <base>DTestWithParam&lt; int &gt;</base>
  </compound>
  <compound kind="class">
    <name>TDPlatformHandle</name>
    <filename>classTDPlatformHandle.html</filename>
  </compound>
  <compound kind="class">
    <name>TDPlatformTheme</name>
    <filename>classTDPlatformTheme.html</filename>
  </compound>
  <compound kind="class">
    <name>TDRegionMonitor</name>
    <filename>classTDRegionMonitor.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDSvgRenderer</name>
    <filename>classTDSvgRenderer.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDTaskbarControl</name>
    <filename>classTDTaskbarControl.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDThumbnailProvider</name>
    <filename>classTDThumbnailProvider.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDWindowGroupLeader</name>
    <filename>classTDWindowGroupLeader.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="class">
    <name>TDWindowMangerHelper</name>
    <filename>classTDWindowMangerHelper.html</filename>
    <base>DTest</base>
  </compound>
  <compound kind="struct">
    <name>ClipperLib::TEdge</name>
    <filename>structClipperLib_1_1TEdge.html</filename>
  </compound>
  <compound kind="class">
    <name>TestAutostart</name>
    <filename>classTestAutostart.html</filename>
    <base>TestDLoginSession</base>
  </compound>
  <compound kind="class">
    <name>TestCreateDevice</name>
    <filename>classTestCreateDevice.html</filename>
    <base>TestDInputDeviceManager</base>
  </compound>
  <compound kind="class">
    <name>TestDAccessPoint</name>
    <filename>classTestDAccessPoint.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDAccountsManager</name>
    <filename>classTestDAccountsManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDAccountsUser</name>
    <filename>classTestDAccountsUser.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDActiveVpnConnection</name>
    <filename>classTestDActiveVpnConnection.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDAdslDevice</name>
    <filename>classTestDAdslDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDAppProxy</name>
    <filename>classTestDAppProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDBlockDeviceMonitor</name>
    <filename>classTestDBlockDeviceMonitor.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDCIFileHelper</name>
    <filename>classTestDCIFileHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDConnectionSetting</name>
    <filename>classTestDConnectionSetting.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDCpuDevice</name>
    <filename>classTestDCpuDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDDeviceManager</name>
    <filename>classTestDDeviceManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDDHCP4Config</name>
    <filename>classTestDDHCP4Config.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDDHCP6Config</name>
    <filename>classTestDDHCP6Config.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDDiskDevice</name>
    <filename>classTestDDiskDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDDiskDrive</name>
    <filename>classTestDDiskDrive.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDDiskJob</name>
    <filename>classTestDDiskJob.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDGenericDevice</name>
    <filename>classTestDGenericDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceGeneric</name>
    <filename>classTestDInputDeviceGeneric.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceKeyboard</name>
    <filename>classTestDInputDeviceKeyboard.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceManager</name>
    <filename>classTestDInputDeviceManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceMouse</name>
    <filename>classTestDInputDeviceMouse.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDevicePointer</name>
    <filename>classTestDInputDevicePointer.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceSetting</name>
    <filename>classTestDInputDeviceSetting.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceTablet</name>
    <filename>classTestDInputDeviceTablet.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceTouchPad</name>
    <filename>classTestDInputDeviceTouchPad.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDInputDeviceTrackPoint</name>
    <filename>classTestDInputDeviceTrackPoint.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDIPConflictCheckConfig</name>
    <filename>classTestDIPConflictCheckConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDIputDevice</name>
    <filename>classTestDIputDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDIPv4Config</name>
    <filename>classTestDIPv4Config.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDIPv6Config</name>
    <filename>classTestDIPv6Config.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDLoginManager</name>
    <filename>classTestDLoginManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDLoginSeat</name>
    <filename>classTestDLoginSeat.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDLoginSession</name>
    <filename>classTestDLoginSession.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDLoginUser</name>
    <filename>classTestDLoginUser.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDLsDevice</name>
    <filename>classTestDLsDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDMemoryDevice</name>
    <filename>classTestDMemoryDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDMotherBoardDevice</name>
    <filename>classTestDMotherBoardDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDNetDevice</name>
    <filename>classTestDNetDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDNetworkManager</name>
    <filename>classTestDNetworkManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDNotificationAppConfig</name>
    <filename>classTestDNotificationAppConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDNotificationDNDModeConfig</name>
    <filename>classTestDNotificationDNDModeConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDNotificationManager</name>
    <filename>classTestDNotificationManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDPowerDevice</name>
    <filename>classTestDPowerDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDPowerKbdBacklight</name>
    <filename>classTestDPowerKbdBacklight.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDPowerManager</name>
    <filename>classTestDPowerManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDPowerSettings</name>
    <filename>classTestDPowerSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDProcessDevice</name>
    <filename>classTestDProcessDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDRfmanager</name>
    <filename>classTestDRfmanager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDSettingsManager</name>
    <filename>classTestDSettingsManager.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDSystemProxy</name>
    <filename>classTestDSystemProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDSystemTime</name>
    <filename>classTestDSystemTime.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDTunDevice</name>
    <filename>classTestDTunDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDWiredDevice</name>
    <filename>classTestDWiredDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestDWirelessDevice</name>
    <filename>classTestDWirelessDevice.html</filename>
  </compound>
  <compound kind="class">
    <name>TestExecuteQuery</name>
    <filename>classTestExecuteQuery.html</filename>
    <base>TestDLoginManager</base>
  </compound>
  <compound kind="class">
    <name>TestInhibit</name>
    <filename>classTestInhibit.html</filename>
    <base>TestDLoginManager</base>
  </compound>
  <compound kind="class">
    <name>TestKey</name>
    <filename>classTestKey.html</filename>
    <base>TestDInputDeviceSetting</base>
  </compound>
  <compound kind="class">
    <name>TestListItem</name>
    <filename>classTestListItem.html</filename>
    <base>DSimpleListItem</base>
    <base>DSimpleListItem</base>
    <member kind="function">
      <type>bool</type>
      <name>sameAs</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a2ecd754cd8ab181415a97f71eada7b27</anchor>
      <arglist>(DSimpleListItem *item) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawBackground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>aea38358bd8adb9016e1c6ad655dc23d6</anchor>
      <arglist>(QRect rect, QPainter *painter, int index, bool isSelect, bool isHover) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawForeground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a6b93edafcebbaadbbe78cee6791542ff</anchor>
      <arglist>(QRect rect, QPainter *painter, int column, int index, bool isSelect, bool isHover) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sameAs</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a2ecd754cd8ab181415a97f71eada7b27</anchor>
      <arglist>(DSimpleListItem *item) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawBackground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>aea38358bd8adb9016e1c6ad655dc23d6</anchor>
      <arglist>(QRect rect, QPainter *painter, int index, bool isSelect, bool isHover) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawForeground</name>
      <anchorfile>classTestListItem.html</anchorfile>
      <anchor>a6b93edafcebbaadbbe78cee6791542ff</anchor>
      <arglist>(QRect rect, QPainter *painter, int column, int index, bool isSelect, bool isHover) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestPrintPreviewDialog</name>
    <filename>classTestPrintPreviewDialog.html</filename>
    <base>DPrintPreviewDialog</base>
    <base>DPrintPreviewDialog</base>
  </compound>
  <compound kind="class">
    <name>TestScheduleShutdown</name>
    <filename>classTestScheduleShutdown.html</filename>
    <base>TestDLoginManager</base>
  </compound>
  <compound kind="class">
    <name>TestSessionClass</name>
    <filename>classTestSessionClass.html</filename>
    <base>TestDLoginSession</base>
  </compound>
  <compound kind="class">
    <name>TestSessionState</name>
    <filename>classTestSessionState.html</filename>
    <base>TestDLoginSession</base>
  </compound>
  <compound kind="class">
    <name>TestSessionType</name>
    <filename>classTestSessionType.html</filename>
    <base>TestDLoginSession</base>
  </compound>
  <compound kind="class">
    <name>TestTaskbarWindow</name>
    <filename>classTestTaskbarWindow.html</filename>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>TestUserState</name>
    <filename>classTestUserState.html</filename>
    <base>TestDLoginUser</base>
  </compound>
  <compound kind="struct">
    <name>Dtk::Ocr::TextBox</name>
    <filename>structDtk_1_1Ocr_1_1TextBox.html</filename>
  </compound>
  <compound kind="struct">
    <name>TextBox</name>
    <filename>structTextBox.html</filename>
    <member kind="variable">
      <type>QList&lt; QPointF &gt;</type>
      <name>points</name>
      <anchorfile>structTextBox.html</anchorfile>
      <anchor>a797b2941bcc1b0c86f10395247357df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qreal</type>
      <name>angle</name>
      <anchorfile>structTextBox.html</anchorfile>
      <anchor>acc39319cd6358ca39417aff25307474f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TextField</name>
    <filename>classTextField.html</filename>
  </compound>
  <compound kind="class">
    <name>MaskTextureCache::Texture</name>
    <filename>classMaskTextureCache_1_1Texture.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>TextureMaterial</name>
    <filename>classTextureMaterial.html</filename>
    <base>OpaqueTextureMaterial</base>
  </compound>
  <compound kind="class">
    <name>TextureMaterialShader</name>
    <filename>classTextureMaterialShader.html</filename>
    <base>OpaqueTextureMaterialShader</base>
  </compound>
  <compound kind="class">
    <name>ThemeMenu</name>
    <filename>classThemeMenu.html</filename>
  </compound>
  <compound kind="class">
    <name>ThreadUtils</name>
    <filename>classThreadUtils.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TimeDate1Interface</name>
    <filename>classTimeDate1Interface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TimeDate1Service</name>
    <filename>classTimeDate1Service.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TimeoutHelper</name>
    <filename>classTimeoutHelper.html</filename>
  </compound>
  <compound kind="class">
    <name>TimeSync1Interface</name>
    <filename>classTimeSync1Interface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TimeSync1Service</name>
    <filename>classTimeSync1Service.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TipsSlider</name>
    <filename>classTipsSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>ToolTipExampleWindow</name>
    <filename>classToolTipExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>TouchPadInterface</name>
    <filename>classTouchPadInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TouchPadService</name>
    <filename>classTouchPadService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>TrackPointAdaptor</name>
    <filename>classTrackPointAdaptor.html</filename>
  </compound>
  <compound kind="class">
    <name>TrackPointInterface</name>
    <filename>classTrackPointInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>DAbstractStackWidgetTransition::TransitionInfo</name>
    <filename>structDAbstractStackWidgetTransition_1_1TransitionInfo.html</filename>
  </compound>
  <compound kind="struct">
    <name>common::alloc::uCloseDir</name>
    <filename>structcommon_1_1alloc_1_1uCloseDir.html</filename>
  </compound>
  <compound kind="struct">
    <name>uCloseDir</name>
    <filename>structuCloseDir.html</filename>
  </compound>
  <compound kind="struct">
    <name>common::alloc::uFDClose</name>
    <filename>structcommon_1_1alloc_1_1uFDClose.html</filename>
  </compound>
  <compound kind="struct">
    <name>uFDClose</name>
    <filename>structuFDClose.html</filename>
  </compound>
  <compound kind="struct">
    <name>common::alloc::uFileClose</name>
    <filename>structcommon_1_1alloc_1_1uFileClose.html</filename>
  </compound>
  <compound kind="struct">
    <name>uFileClose</name>
    <filename>structuFileClose.html</filename>
  </compound>
  <compound kind="class">
    <name>UiTools</name>
    <filename>classUiTools.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>UnCompressParameter</name>
    <filename>structUnCompressParameter.html</filename>
  </compound>
  <compound kind="class">
    <name>UpdateJob</name>
    <filename>classUpdateJob.html</filename>
    <base>SingleJob</base>
  </compound>
  <compound kind="struct">
    <name>UpdateOptions</name>
    <filename>structUpdateOptions.html</filename>
  </compound>
  <compound kind="class">
    <name>UPowerDeviceInterface</name>
    <filename>classUPowerDeviceInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>UPowerDeviceService</name>
    <filename>classUPowerDeviceService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>UPowerKbdBacklightInterface</name>
    <filename>classUPowerKbdBacklightInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>UPowerKbdBacklightService</name>
    <filename>classUPowerKbdBacklightService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>UPowerManagerInterface</name>
    <filename>classUPowerManagerInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>UPowerManagerService</name>
    <filename>classUPowerManagerService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="struct">
    <name>UserPath</name>
    <filename>structUserPath.html</filename>
  </compound>
  <compound kind="struct">
    <name>UserStateParam</name>
    <filename>structUserStateParam.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ArrowButtonIcon</name>
    <filename>classut__ArrowButtonIcon.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ColorButton</name>
    <filename>classut__ColorButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ColorLabel</name>
    <filename>classut__ColorLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_ColorSlider</name>
    <filename>classut__ColorSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAboutDialog</name>
    <filename>classut__DAboutDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAbstractDialog</name>
    <filename>classut__DAbstractDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAlertcontrol</name>
    <filename>classut__DAlertcontrol.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAnchors</name>
    <filename>classut__DAnchors.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAnchorsBase</name>
    <filename>classut__DAnchorsBase.html</filename>
  </compound>
  <compound kind="class">
    <name>UT_DArchiveManager</name>
    <filename>classUT__DArchiveManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowButton</name>
    <filename>classut__DArrowButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowLineDrawer</name>
    <filename>classut__DArrowLineDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowLineExpand</name>
    <filename>classut__DArrowLineExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DArrowRectangle</name>
    <filename>classut__DArrowRectangle.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAudioInput</name>
    <filename>classut__DAudioInput.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAudioOutput</name>
    <filename>classut__DAudioOutput.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DAudioRecorder</name>
    <filename>classut__DAudioRecorder.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBackgroundGroup</name>
    <filename>classut__DBackgroundGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBaseExpand</name>
    <filename>classut__DBaseExpand.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBaseLine</name>
    <filename>classut__DBaseLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBlurEffectWidget</name>
    <filename>classut__DBlurEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DBoxWidget</name>
    <filename>classut__DBoxWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DButtonBox</name>
    <filename>classut__DButtonBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DButtonBoxButton</name>
    <filename>classut__DButtonBoxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCamera</name>
    <filename>classut__DCamera.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCapFSFileEngine</name>
    <filename>classut__DCapFSFileEngine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCI</name>
    <filename>classut__DCI.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCircleProgress</name>
    <filename>classut__DCircleProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DClipEffectWidget</name>
    <filename>classut__DClipEffectWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DColoredProgressBar</name>
    <filename>classut__DColoredProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCommandLinkButton</name>
    <filename>classut__DCommandLinkButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DConfig</name>
    <filename>classut__DConfig.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DConfigFile</name>
    <filename>classut__DConfigFile.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DConfigWrapper</name>
    <filename>classut__DConfigWrapper.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DCrumbedit</name>
    <filename>classut__DCrumbedit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDemoInterface</name>
    <filename>classut__DDemoInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDialog</name>
    <filename>classut__DDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDialogCloseButton</name>
    <filename>classut__DDialogCloseButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDiskSizeFormatter</name>
    <filename>classut__DDiskSizeFormatter.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDoubleSpinBox</name>
    <filename>classut__DDoubleSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDrawer</name>
    <filename>classut__DDrawer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DDrawerGroup</name>
    <filename>classut__DDrawerGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DEngineGstPlayer</name>
    <filename>classut__DEngineGstPlayer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DEnginePlayer</name>
    <filename>classut__DEnginePlayer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DEnhancedWidget</name>
    <filename>classut__DEnhancedWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DesktopEntry</name>
    <filename>classut__DesktopEntry.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DExpandGroup</name>
    <filename>classut__DExpandGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileChooserEdit</name>
    <filename>classut__DFileChooserEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileDialog</name>
    <filename>classut__DFileDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileSystemWatcher</name>
    <filename>classut__DFileSystemWatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileWatcher</name>
    <filename>classut__DFileWatcher.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFileWatcherManager</name>
    <filename>classut__DFileWatcherManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFloatingButton</name>
    <filename>classut__DFloatingButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFloatingMessage</name>
    <filename>classut__DFloatingMessage.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFloatingWidget</name>
    <filename>classut__DFloatingWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFlowLayout</name>
    <filename>classut__DFlowLayout.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFontSizeManager</name>
    <filename>classut__DFontSizeManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DFrame</name>
    <filename>classut__DFrame.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DGraphicsClipEffect</name>
    <filename>classut__DGraphicsClipEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DGraphicsGlowEffect</name>
    <filename>classut__DGraphicsGlowEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DHeaderLine</name>
    <filename>classut__DHeaderLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DHorizontalLine</name>
    <filename>classut__DHorizontalLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DImageCapture</name>
    <filename>classut__DImageCapture.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DImageViewer</name>
    <filename>classut__DImageViewer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DInputDialog</name>
    <filename>classut__DInputDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DIpv4LineEdit</name>
    <filename>classut__DIpv4LineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DKeySequenceEdit</name>
    <filename>classut__DKeySequenceEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DLabel</name>
    <filename>classut__DLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DLineEdit</name>
    <filename>classut__DLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DListView</name>
    <filename>classut__DListView.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DLoadingIndicator</name>
    <filename>classut__DLoadingIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMainWindow</name>
    <filename>classut__DMainWindow.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMediaCaptureSession</name>
    <filename>classut__DMediaCaptureSession.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMediaFormat</name>
    <filename>classut__DMediaFormat.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMediaMetaData</name>
    <filename>classut__DMediaMetaData.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMediaPlayer</name>
    <filename>classut__DMediaPlayer.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMediaPlaylist</name>
    <filename>classut__DMediaPlaylist.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMediaRecorder</name>
    <filename>classut__DMediaRecorder.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMessageManager</name>
    <filename>classut__DMessageManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DMPRISControl</name>
    <filename>classut__DMPRISControl.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DOcr</name>
    <filename>classut__DOcr.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPageIndicator</name>
    <filename>classut__DPageIndicator.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPasswordEdit</name>
    <filename>classut__DPasswordEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPathBuf</name>
    <filename>classut__DPathBuf.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPictureSequenceView</name>
    <filename>classut__DPictureSequenceView.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPinyin</name>
    <filename>classut__DPinyin.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPlatformThemeProxy</name>
    <filename>classut__DPlatformThemeProxy.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintColorPickWidget</name>
    <filename>classut__DPrintColorPickWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPickColorWidget</name>
    <filename>classut__DPrintPickColorWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewDialog</name>
    <filename>classut__DPrintPreviewDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidget</name>
    <filename>classut__DPrintPreviewWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidgetPrivate</name>
    <filename>classut__DPrintPreviewWidgetPrivate.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidgetPrivateParam</name>
    <filename>classut__DPrintPreviewWidgetPrivateParam.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPrintPreviewWidgetTestParam</name>
    <filename>classut__DPrintPreviewWidgetTestParam.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DProgressBar</name>
    <filename>classut__DProgressBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DPushButton</name>
    <filename>classut__DPushButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DQMLGlobalObject</name>
    <filename>classut__DQMLGlobalObject.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DRecentManager</name>
    <filename>classut__DRecentManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DScreenRecorder</name>
    <filename>classut__DScreenRecorder.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSearchComboBox</name>
    <filename>classut__DSearchComboBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSearchEdit</name>
    <filename>classut__DSearchEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSecureString</name>
    <filename>classut__DSecureString.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSettings</name>
    <filename>classut__DSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSettingsDialog</name>
    <filename>classut__DSettingsDialog.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSettingsWidgetFactory</name>
    <filename>classut__DSettingsWidgetFactory.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DShadowLine</name>
    <filename>classut__DShadowLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSimpleListView</name>
    <filename>classut__DSimpleListView.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSlider</name>
    <filename>classut__DSlider.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSpinBox</name>
    <filename>classut__DSpinBox.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSpinner</name>
    <filename>classut__DSpinner.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStackWidget</name>
    <filename>classut__DStackWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStandardItem</name>
    <filename>classut__DStandardItem.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStandardPaths</name>
    <filename>classut__DStandardPaths.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStyledItemDelegate</name>
    <filename>classut__DStyledItemDelegate.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStyleOptionBackgroundGroup</name>
    <filename>classut__DStyleOptionBackgroundGroup.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DStyleOptionLineEdit</name>
    <filename>classut__DStyleOptionLineEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSuggestButton</name>
    <filename>classut__DSuggestButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DSwitchButton</name>
    <filename>classut__DSwitchButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTabBar</name>
    <filename>classut__DTabBar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTextEdit</name>
    <filename>classut__DTextEdit.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTextEncoding</name>
    <filename>classut__DTextEncoding.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DThreadUtils</name>
    <filename>classut__DThreadUtils.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTickEffect</name>
    <filename>classut__DTickEffect.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTimeUnitFormatter</name>
    <filename>classut__DTimeUnitFormatter.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTipLabel</name>
    <filename>classut__DTipLabel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTitlebar</name>
    <filename>classut__DTitlebar.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DToolButton</name>
    <filename>classut__DToolButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DToolTip</name>
    <filename>classut__DToolTip.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DTrashManager</name>
    <filename>classut__DTrashManager.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DUtil</name>
    <filename>classut__DUtil.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVariantListModel</name>
    <filename>classut__DVariantListModel.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVerticalLine</name>
    <filename>classut__DVerticalLine.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVideoWidget</name>
    <filename>classut__DVideoWidget.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DViewItemAction</name>
    <filename>classut__DViewItemAction.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DVtableHook</name>
    <filename>classut__DVtableHook.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWarningButton</name>
    <filename>classut__DWarningButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWaterProgress</name>
    <filename>classut__DWaterProgress.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowCloseButton</name>
    <filename>classut__DWindowCloseButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowMaxButton</name>
    <filename>classut__DWindowMaxButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowMinButton</name>
    <filename>classut__DWindowMinButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowOptionButton</name>
    <filename>classut__DWindowOptionButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_DWindowQuitFullButton</name>
    <filename>classut__DWindowQuitFullButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_GSettings</name>
    <filename>classut__GSettings.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_IConButton</name>
    <filename>classut__IConButton.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_Logger</name>
    <filename>classut__Logger.html</filename>
  </compound>
  <compound kind="class">
    <name>ut_QSettingsBackend</name>
    <filename>classut__QSettingsBackend.html</filename>
  </compound>
  <compound kind="class">
    <name>PaddleOCR::Utility</name>
    <filename>classPaddleOCR_1_1Utility.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Accounts::ValidMsg</name>
    <filename>structDtk_1_1Accounts_1_1ValidMsg.html</filename>
  </compound>
  <compound kind="struct">
    <name>ValidMsg</name>
    <filename>structValidMsg.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>structValidMsg.html</anchorfile>
      <anchor>a98d8c34c4e46c1271ed9fb8c57cf7b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>qint32</type>
      <name>code</name>
      <anchorfile>structValidMsg.html</anchorfile>
      <anchor>a06b4869277eb4bb3a587732e02c82f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QString</type>
      <name>msg</name>
      <anchorfile>structValidMsg.html</anchorfile>
      <anchor>a43141de5301f495c2619f33cf017aaee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>hw::value</name>
    <filename>classhw_1_1value.html</filename>
  </compound>
  <compound kind="struct">
    <name>hw::value_i</name>
    <filename>structhw_1_1value__i.html</filename>
  </compound>
  <compound kind="struct">
    <name>VDP_Decoder_t</name>
    <filename>structVDP__Decoder__t.html</filename>
  </compound>
  <compound kind="struct">
    <name>Dtk::Core::DConfigFile::Version</name>
    <filename>structDtk_1_1Core_1_1DConfigFile_1_1Version.html</filename>
  </compound>
  <compound kind="struct">
    <name>vfat_dir_entry</name>
    <filename>structvfat__dir__entry.html</filename>
  </compound>
  <compound kind="struct">
    <name>vfat_super_block</name>
    <filename>structvfat__super__block.html</filename>
  </compound>
  <compound kind="struct">
    <name>stub_ext::VFLocator</name>
    <filename>structstub__ext_1_1VFLocator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::VFLocator&lt; Ret(Obj::*)(Args...) const &gt;</name>
    <filename>structstub__ext_1_1VFLocator_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_01const_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="struct">
    <name>stub_ext::VFLocator&lt; Ret(Obj::*)(Args...)&gt;</name>
    <filename>structstub__ext_1_1VFLocator_3_01Ret_07Obj_1_1_5_08_07Args_8_8_8_08_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Args</templarg>
  </compound>
  <compound kind="class">
    <name>VideoStreamFfmpeg</name>
    <filename>classVideoStreamFfmpeg.html</filename>
    <base>VideoStreamInterface</base>
  </compound>
  <compound kind="class">
    <name>VideoStreamInterface</name>
    <filename>classVideoStreamInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>VideoSurface</name>
    <filename>classVideoSurface.html</filename>
  </compound>
  <compound kind="class">
    <name>VideoWidget</name>
    <filename>classVideoWidget.html</filename>
  </compound>
  <compound kind="struct">
    <name>volinfo</name>
    <filename>structvolinfo.html</filename>
  </compound>
  <compound kind="class">
    <name>WacomInterface</name>
    <filename>classWacomInterface.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>WacomService</name>
    <filename>classWacomService.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>WarningButton</name>
    <filename>classWarningButton.html</filename>
  </compound>
  <compound kind="class">
    <name>WaterMark</name>
    <filename>classWaterMark.html</filename>
    <base>QGraphicsItem</base>
  </compound>
  <compound kind="struct">
    <name>DPrintPreviewWidgetPrivate::NumberUpData::WaterMarkProperty</name>
    <filename>structDPrintPreviewWidgetPrivate_1_1NumberUpData_1_1WaterMarkProperty.html</filename>
  </compound>
  <compound kind="class">
    <name>WaterPopAttribute</name>
    <filename>classWaterPopAttribute.html</filename>
    <base>QObject</base>
  </compound>
  <compound kind="class">
    <name>WaterPopAttributePrivate</name>
    <filename>classWaterPopAttributePrivate.html</filename>
    <base>QSharedData</base>
  </compound>
  <compound kind="class">
    <name>WidgetExampleWindow</name>
    <filename>classWidgetExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="class">
    <name>Window</name>
    <filename>classWindow.html</filename>
    <base>QWindow</base>
    <base>QWidget</base>
  </compound>
  <compound kind="class">
    <name>WindowButton</name>
    <filename>classWindowButton.html</filename>
  </compound>
  <compound kind="class">
    <name>WindowExampleWindow</name>
    <filename>classWindowExampleWindow.html</filename>
    <base>PageWindowInterface</base>
  </compound>
  <compound kind="struct">
    <name>DPlatformHandle::WMBlurArea</name>
    <filename>structDPlatformHandle_1_1WMBlurArea.html</filename>
  </compound>
  <compound kind="class">
    <name>Dtk::Gui::DPlatformHandle::WMBlurArea</name>
    <filename>classDtk_1_1Gui_1_1DPlatformHandle_1_1WMBlurArea.html</filename>
  </compound>
  <compound kind="class">
    <name>stub_ext::Wrapper</name>
    <filename>classstub__ext_1_1Wrapper.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Dtk::Burn::DOpticalDiscManager</name>
    <filename>namespaceDtk_1_1Burn_1_1DOpticalDiscManager.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Dtk::Mount::DDeviceManager</name>
    <filename>namespaceDtk_1_1Mount_1_1DDeviceManager.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Dtk::Mount::MountPasswdInfoParamKeys</name>
    <filename>namespaceDtk_1_1Mount_1_1MountPasswdInfoParamKeys.html</filename>
  </compound>
  <compound kind="group">
    <name>dci</name>
    <title>Dci</title>
    <filename>group__dci.html</filename>
    <file>ddcifile.h</file>
    <file>ddciicon.h</file>
    <file>ddciiconpalette.h</file>
  </compound>
  <compound kind="group">
    <name>dfilesystem</name>
    <title>Dfilesystem</title>
    <filename>group__dfilesystem.html</filename>
    <file>dbasefilewatcher.h</file>
    <file>dcapfile.h</file>
  </compound>
  <compound kind="group">
    <name>dglobal</name>
    <title>Dglobal</title>
    <filename>group__dglobal.html</filename>
    <file>ddesktopentry.h</file>
  </compound>
  <compound kind="group">
    <name>dlog</name>
    <title>Dlog</title>
    <filename>group__dlog.html</filename>
    <file>AbstractAppender.h</file>
    <file>AbstractStringAppender.h</file>
    <file>ConsoleAppender.h</file>
    <file>LogManager.h</file>
    <file>FileAppender.h</file>
    <file>Logger.h</file>
    <file>RollingFileAppender.h</file>
  </compound>
  <compound kind="group">
    <name>dsettings</name>
    <title>Dsettings</title>
    <filename>group__dsettings.html</filename>
    <file>dsettingsdconfigbackend.h</file>
    <file>gsettingsbackend.h</file>
    <file>qsettingbackend.h</file>
    <file>dsettings.h</file>
    <file>dsettingsgroup.h</file>
    <file>dsettingsoption.h</file>
  </compound>
  <compound kind="group">
    <name>dutil</name>
    <title>Dutil</title>
    <filename>group__dutil.html</filename>
    <file>ddbusextendedabstractinterface.h</file>
    <file>ddbussender.h</file>
    <file>ddisksizeformatter.h</file>
    <file>dtextencoding.h</file>
    <file>dtimeunitformatter.h</file>
  </compound>
  <compound kind="group">
    <name>QML_TYPES</name>
    <title>QML类型模块</title>
    <filename>group__QML__TYPES.html</filename>
    <class kind="class">ActionButton</class>
    <class kind="class">AlertToolTip</class>
    <class kind="class">ApplicationWindow</class>
    <class kind="class">ArrowListView</class>
    <class kind="class">BoxInsetShadow</class>
    <class kind="class">BoxPanel</class>
    <class kind="class">BoxShadow</class>
    <class kind="class">Button</class>
    <class kind="class">ButtonIndicator</class>
    <class kind="class">ButtonPanel</class>
    <class kind="class">CheckBox</class>
    <class kind="class">ControlBackground</class>
    <class kind="class">DialogTitleBar</class>
    <class kind="class">FloatingButton</class>
    <class kind="class">HighlightPanel</class>
    <class kind="class">IpV4LineEdit</class>
    <class kind="class">Menu</class>
    <class kind="class">MenuItem</class>
    <class kind="class">PasswordEdit</class>
    <class kind="class">PopupWindow</class>
    <class kind="class">ProgressBar</class>
    <class kind="class">RadioButton</class>
    <class kind="class">RecommandButton</class>
    <class kind="class">Slider</class>
    <class kind="class">TextField</class>
    <class kind="class">ThemeMenu</class>
    <class kind="class">TipsSlider</class>
    <class kind="class">WarningButton</class>
    <class kind="class">WindowButton</class>
  </compound>
  <compound kind="group">
    <name>Action</name>
    <title>QML动作模块</title>
    <filename>group__Action.html</filename>
  </compound>
  <compound kind="group">
    <name>DialogWindow</name>
    <title>QML对话框模块</title>
    <filename>group__DialogWindow.html</filename>
  </compound>
  <compound kind="group">
    <name>inputdevices</name>
    <title>Inputdevices</title>
    <filename>group__inputdevices.html</filename>
    <file>dinputdevicegeneric.h</file>
    <file>dinputdevicekeyboard.h</file>
    <file>dinputdevicemanager.h</file>
    <file>dinputdevicemouse.h</file>
    <file>dinputdevicepointer.h</file>
    <file>dinputdevicesetting.h</file>
    <file>dinputdevicetablet.h</file>
    <file>dinputdevicetouchpad.h</file>
    <file>dinputdevicetrackpoint.h</file>
    <file>dtkinputdevices_types.h</file>
    <docanchor file="group__inputdevices.html">group_inputdevices</docanchor>
  </compound>
  <compound kind="group">
    <name>lsdevice</name>
    <title>Lsdevice</title>
    <filename>group__lsdevice.html</filename>
    <docanchor file="group__lsdevice.html">group_lsdevice</docanchor>
  </compound>
  <compound kind="group">
    <name>palette</name>
    <title>Palette</title>
    <filename>group__palette.html</filename>
    <file>dpalette.h</file>
  </compound>
  <compound kind="group">
    <name>dtkburn</name>
    <title>Dtkburn</title>
    <filename>group__dtkburn.html</filename>
    <file>dopticaldiscinfo.h</file>
    <file>dopticaldiscmanager.h</file>
    <file>dopticaldiscoperator.h</file>
    <file>dtkburn_global.h</file>
    <file>dtkburntypes.h</file>
  </compound>
  <compound kind="group">
    <name>dtkcompressor</name>
    <title>Dtkcompressor</title>
    <filename>group__dtkcompressor.html</filename>
    <file>darchivemanager.h</file>
  </compound>
  <compound kind="group">
    <name>dtkio</name>
    <title>Dtkio</title>
    <filename>group__dtkio.html</filename>
  </compound>
  <compound kind="group">
    <name>dtkmount</name>
    <title>Dtkmount</title>
    <filename>group__dtkmount.html</filename>
    <file>dblockdevice.h</file>
    <file>dblockdevicemonitor.h</file>
    <file>dblockpartition.h</file>
    <file>ddevicemanager.h</file>
    <file>ddiskdrive.h</file>
    <file>ddiskjob.h</file>
    <file>dmounttypes.h</file>
    <file>dprotocoldevice.h</file>
    <file>dprotocoldevicemonitor.h</file>
    <file>dtkmount_global.h</file>
  </compound>
  <compound kind="group">
    <name>dtksearch</name>
    <title>Dtksearch</title>
    <filename>group__dtksearch.html</filename>
  </compound>
  <compound kind="group">
    <name>dtkmultimedia</name>
    <title>Dtkmultimedia</title>
    <filename>group__dtkmultimedia.html</filename>
    <file>daudioinput.h</file>
    <file>daudioout.h</file>
    <file>daudiorecorder.h</file>
    <file>dcamera.h</file>
    <file>dcompositemanager.h</file>
    <file>dgstplayerproxy.h</file>
    <file>dimagecapture.h</file>
    <file>dmediacapturesession.h</file>
    <file>dmediaformat.h</file>
    <file>dmediaplaylist.h</file>
    <file>dmediarecorder.h</file>
    <file>dplatformmediaplayer.h</file>
    <file>dplayerbackend.h</file>
    <file>dscreenrecorder.h</file>
  </compound>
  <compound kind="group">
    <name>dtkmultimediawidgets</name>
    <title>Dtkmultimediawidgets</title>
    <filename>group__dtkmultimediawidgets.html</filename>
    <file>dengineplayer.h</file>
    <file>dscreenshot.h</file>
    <file>dvideowidget.h</file>
  </compound>
  <compound kind="group">
    <name>dtkocr</name>
    <title>Dtkocr</title>
    <filename>group__dtkocr.html</filename>
    <file>docr.h</file>
  </compound>
  <compound kind="group">
    <name>dtkaccounts</name>
    <title>Dtkaccounts</title>
    <filename>group__dtkaccounts.html</filename>
    <file>daccountsmanager.h</file>
    <file>daccountstypes.h</file>
    <file>daccountsuser.h</file>
    <docanchor file="group__dtkaccounts.html">group_dtkaccounts</docanchor>
  </compound>
  <compound kind="group">
    <name>dtklogin</name>
    <title>Dtklogin</title>
    <filename>group__dtklogin.html</filename>
    <file>dloginmanager.h</file>
    <file>dloginseat.h</file>
    <file>dloginsession.h</file>
    <file>dlogintypes.h</file>
    <file>dloginuser.h</file>
    <docanchor file="group__dtklogin.html">group_dtklogin</docanchor>
  </compound>
  <compound kind="group">
    <name>dtkpower</name>
    <title>Dtkpower</title>
    <filename>group__dtkpower.html</filename>
    <file>dkbdbacklight.h</file>
    <file>dpowerdevice.h</file>
    <file>dpowermanager.h</file>
    <file>dpowersettings.h</file>
    <file>dpowertypes.h</file>
    <docanchor file="group__dtkpower.html">group_dtkpower</docanchor>
  </compound>
  <compound kind="group">
    <name>dtkrfmanager</name>
    <title>Dtkrfmanager</title>
    <filename>group__dtkrfmanager.html</filename>
    <file>drfmanager.h</file>
    <docanchor file="group__dtkrfmanager.html">group_dtkrfmanager</docanchor>
  </compound>
  <compound kind="group">
    <name>dtksystemtime</name>
    <title>Dtksystemtime</title>
    <filename>group__dtksystemtime.html</filename>
    <file>dsystemtime.h</file>
    <file>dsystemtimetypes.h</file>
    <docanchor file="group__dtksystemtime.html">group_dtksystemtime</docanchor>
  </compound>
  <compound kind="group">
    <name>dtkwidget</name>
    <title>Dtkwidget</title>
    <filename>group__dtkwidget.html</filename>
    <file>daboutdialog.h</file>
    <file>dabstractdialog.h</file>
    <file>dalertcontrol.h</file>
    <file>dapplicationhelper.h</file>
    <file>darrowbutton.h</file>
    <file>darrowbutton.h</file>
    <file>darrowlinedrawer.h</file>
    <file>darrowlineexpand.h</file>
    <file>darrowlineexpand.h</file>
    <file>dcommandlinkbutton.h</file>
    <file>ddrawer.h</file>
    <file>dfeaturedisplaydialog.h</file>
    <file>dlabel.h</file>
    <file>dsizemode.h</file>
    <file>dstyle.h</file>
  </compound>
  <compound kind="group">
    <name>button</name>
    <title>Button</title>
    <filename>group__button.html</filename>
    <file>dbuttonbox.h</file>
    <file>dcombobox.h</file>
    <file>dfloatingbutton.h</file>
    <file>dfontcombobox.h</file>
    <file>diconbutton.h</file>
    <file>dsearchcombobox.h</file>
    <file>dsuggestbutton.h</file>
    <file>dswitchbutton.h</file>
    <file>dtoolbutton.h</file>
    <file>dwarningbutton.h</file>
  </compound>
  <compound kind="group">
    <name>edit</name>
    <title>Edit</title>
    <filename>group__edit.html</filename>
    <file>dcrumbedit.h</file>
    <file>dfilechooseredit.h</file>
    <file>dipv4lineedit.h</file>
    <file>dkeysequenceedit.h</file>
    <file>dlineedit.h</file>
    <file>dpasswordedit.h</file>
    <file>dsearchedit.h</file>
    <file>dspinbox.h</file>
    <file>dtextedit.h</file>
  </compound>
  <compound kind="group">
    <name>slider</name>
    <title>Slider</title>
    <filename>group__slider.html</filename>
    <file>dslider.h</file>
  </compound>
  <compound kind="group">
    <name>listview</name>
    <title>Listview</title>
    <filename>group__listview.html</filename>
  </compound>
  <compound kind="group">
    <name>window</name>
    <title>Window</title>
    <filename>group__window.html</filename>
    <file>dmainwindow.h</file>
    <file>dtabbar.h</file>
  </compound>
  <compound kind="group">
    <name>tooltip</name>
    <title>Tooltip</title>
    <filename>group__tooltip.html</filename>
    <file>dtooltip.h</file>
  </compound>
  <compound kind="group">
    <name>spinner</name>
    <title>Spinner</title>
    <filename>group__spinner.html</filename>
    <file>dspinner.h</file>
  </compound>
  <compound kind="group">
    <name>dialog</name>
    <title>Dialog</title>
    <filename>group__dialog.html</filename>
    <file>dfiledialog.h</file>
    <file>dmessagemanager.h</file>
  </compound>
  <compound kind="group">
    <name>progressbar</name>
    <title>Progressbar</title>
    <filename>group__progressbar.html</filename>
    <file>dcoloredprogressbar.h</file>
    <file>dwaterprogress.h</file>
  </compound>
  <compound kind="group">
    <name>layout</name>
    <title>Layout</title>
    <filename>group__layout.html</filename>
    <file>dframe.h</file>
  </compound>
  <compound kind="group">
    <name>imageviewer</name>
    <title>Imageviewer</title>
    <filename>group__imageviewer.html</filename>
    <file>dimageviewer.h</file>
  </compound>
  <compound kind="group">
    <name>org</name>
    <title>.deepin.dtk</title>
    <filename>group__org.html</filename>
  </compound>
  <compound kind="page">
    <name>dic</name>
    <title>dci&amp;ndash;dci图标工具类</title>
    <filename>dic.html</filename>
  </compound>
  <compound kind="page">
    <name>dfilesystem</name>
    <title>dfilesystem&amp;ndash;dtk文件系统操作的封装</title>
    <filename>dfilesystem.html</filename>
  </compound>
  <compound kind="page">
    <name>global</name>
    <title>global&amp;ndash;dtk全局工具组件</title>
    <filename>global.html</filename>
  </compound>
  <compound kind="page">
    <name>DLog</name>
    <title>dlog&amp;ndash;dtk日志组件</title>
    <filename>DLog.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkcore_docs_MainPage_zh_CN</name>
    <title>MainPage.zh_CN</title>
    <filename>md_dtkcore_docs_MainPage_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>dsettings</name>
    <title>dsettings&amp;ndash;dtk设置工具组件</title>
    <filename>dsettings.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkcore_docs_util_index_zh_CN</name>
    <title>DTK util</title>
    <filename>md_dtkcore_docs_util_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkcore_README_zh_CN</name>
    <title>Deepin Tool Kit Core</title>
    <filename>md_dtkcore_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>DevSpecification</name>
    <title>开发规范</title>
    <filename>DevSpecification.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkdeclarative_docs_index_zh_CN</name>
    <title>dtkdeclarative</title>
    <filename>md_dtkdeclarative_docs_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>qml</name>
    <title>qml</title>
    <filename>qml.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkdeclarative_README_zh_CN</name>
    <title>dtkdeclarative</title>
    <filename>md_dtkdeclarative_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>inputdevices</name>
    <title>inputdevices</title>
    <filename>inputdevices.html</filename>
  </compound>
  <compound kind="page">
    <name>lsdevice</name>
    <title>lsdevice</title>
    <filename>lsdevice.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkdevice_README_zh_CN</name>
    <title>dtkdevice</title>
    <filename>md_dtkdevice_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>kernel</name>
    <title>kernel&amp;ndash;dtkgui核心组件</title>
    <filename>kernel.html</filename>
  </compound>
  <compound kind="page">
    <name>util</name>
    <title>util&amp;ndash;dtkgui工具组件</title>
    <filename>util.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkgui_README_zh_CN</name>
    <title>Deepin Tool Kit Gui</title>
    <filename>md_dtkgui_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkburn</name>
    <title>dtkburn</title>
    <filename>dtkburn.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkcompressor</name>
    <title>dtkcompressor</title>
    <filename>dtkcompressor.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkio</name>
    <title>dtkio</title>
    <filename>dtkio.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkmount</name>
    <title>dtkmount</title>
    <filename>dtkmount.html</filename>
  </compound>
  <compound kind="page">
    <name>dtksearch</name>
    <title>dtksearch</title>
    <filename>dtksearch.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkio_README_zh_CN</name>
    <title># dtk</title>
    <filename>md_dtkio_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkmultimedia</name>
    <title>dtkmultimedia</title>
    <filename>dtkmultimedia.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkmultimediawidgets</name>
    <title>dtkmultimediawidgets</title>
    <filename>dtkmultimediawidgets.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkocr</name>
    <title>dtkocr</title>
    <filename>dtkocr.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkmultimedia_docs_index_zh_CN</name>
    <title>中文页面</title>
    <filename>md_dtkmultimedia_docs_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkmultimedia_README_zh_CN</name>
    <title>Development Tool Kit Multimedia</title>
    <filename>md_dtkmultimedia_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtknetworkmanager_docs_index_zh_CN</name>
    <title>dtknetworkmanager</title>
    <filename>md_dtknetworkmanager_docs_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtknetworkmanager_README_zh_CN</name>
    <title>dtknetworkmanager</title>
    <filename>md_dtknetworkmanager_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtknotifications_docs_index_zh_CN</name>
    <title>index.zh_CN</title>
    <filename>md_dtknotifications_docs_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtknotifications_README_zh_CN</name>
    <title>Development Tool Kit System Settings</title>
    <filename>md_dtknotifications_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkaccounts</name>
    <title>dtkaccounts</title>
    <filename>dtkaccounts.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_docs_index_zh_CN</name>
    <title>dtksystemsettings</title>
    <filename>md_dtksystemsettings_docs_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>dtklogin</name>
    <title>dtklogin</title>
    <filename>dtklogin.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkpower</name>
    <title>dtkpower</title>
    <filename>dtkpower.html</filename>
  </compound>
  <compound kind="page">
    <name>dtkrfmanager</name>
    <title>dtkrfmanager</title>
    <filename>dtkrfmanager.html</filename>
  </compound>
  <compound kind="page">
    <name>dtksystemtime</name>
    <title>dtksystemtime</title>
    <filename>dtksystemtime.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_README_zh_CN</name>
    <title>Development Tool Kit System Settings</title>
    <filename>md_dtksystemsettings_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_src_accounts_README_zh_CN</name>
    <title>项目名称</title>
    <filename>md_dtksystemsettings_src_accounts_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_src_login_README_zh_CN</name>
    <title>项目名称</title>
    <filename>md_dtksystemsettings_src_login_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_src_power_README_zh_CN</name>
    <title>项目名称</title>
    <filename>md_dtksystemsettings_src_power_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_src_rfmanager_README_zh_CN</name>
    <title>dtkrfmanager</title>
    <filename>md_dtksystemsettings_src_rfmanager_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtksystemsettings_src_systemtime_README_zh_CN</name>
    <title>项目名称</title>
    <filename>md_dtksystemsettings_src_systemtime_README_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkwidget_docs_index_zh_CN</name>
    <title>dtkwidget</title>
    <filename>md_dtkwidget_docs_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkwidget_docs_widgets_index_zh_CN</name>
    <title>DLog</title>
    <filename>md_dtkwidget_docs_widgets_index_zh_CN.html</filename>
  </compound>
  <compound kind="page">
    <name>md_dtkwidget_README_zh_CN</name>
    <title>Deepin Tool Kit Widget</title>
    <filename>md_dtkwidget_README_zh_CN.html</filename>
  </compound>
</tagfile>
